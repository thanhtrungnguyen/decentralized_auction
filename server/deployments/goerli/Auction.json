{
  "address": "0xe3417CF4716Ae7F66F063f03c38D0Bc27DED9AdC",
  "abi": [
    {
      "inputs": [],
      "name": "Auction__ConfirmationTimeout",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__InvalidAuctionId",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__InvalidAuctionTime",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__InvalidBidAmount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__InvalidDepositAmount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__InvalidDuePaymentTime",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__InvalidPriceStep",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__InvalidRegistrationFee",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__InvalidRegistrationTime",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__InvalidStartAuctionTime",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__InvalidStartBid",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__NotExistAuctionId",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__NotRegisteredBidder",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__NotWinnerOfAuction",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__OutOfAuctionTime",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__OutOfRegistrationTime",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "requirePaymentAmount",
          "type": "uint256"
        }
      ],
      "name": "Auction__RequireAmountToPaymentNotMet",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "requireAmountToRegister",
          "type": "uint256"
        }
      ],
      "name": "Auction__RequireAmountToRegisterNotMet",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "bidder",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "enum Auction.BidderState",
          "name": "bidderState",
          "type": "uint8"
        }
      ],
      "name": "CanceledAuctionResult",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        }
      ],
      "name": "ClosedAuction",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "bidder",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "paidAmount",
          "type": "uint256"
        }
      ],
      "name": "ClosedAuctionSucessfully",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startRegistrationTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endRegistrationTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startAuctionTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endAuctionTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "duePaymentTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "registrationFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "depositAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startBid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "priceStep",
          "type": "uint256"
        }
      ],
      "name": "CreatedAuction",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "bidder",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "bidAmount",
          "type": "uint256"
        }
      ],
      "name": "PlacedBid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "bidder",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "enum Auction.BidderState",
          "name": "bidderState",
          "type": "uint8"
        }
      ],
      "name": "RegisteredToBid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "k",
          "type": "uint256"
        }
      ],
      "name": "TestDB",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "bidder",
          "type": "address"
        }
      ],
      "name": "Withdrew",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        }
      ],
      "name": "cancelAuctionResult",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        }
      ],
      "name": "closeAuction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "startRegistrationTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endRegistrationTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startAuctionTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endAuctionTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "duePaymentTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "registrationFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "depositAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startBid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "priceStep",
          "type": "uint256"
        }
      ],
      "name": "createAuction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        }
      ],
      "name": "getAuctionInformationById",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startRegistrationTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endRegistrationTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "startAuctionTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endAuctionTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duePaymentTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "registrationFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "depositAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "startBid",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "priceStep",
              "type": "uint256"
            }
          ],
          "internalType": "struct Auction.AuctionInformation",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        }
      ],
      "name": "getBidInformationByAuctionId",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "bidder",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "bidAmount",
              "type": "uint256"
            },
            {
              "internalType": "enum Auction.BidderState",
              "name": "bidderState",
              "type": "uint8"
            }
          ],
          "internalType": "struct Auction.BidInformation[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        }
      ],
      "name": "getHightestBidOfAuction",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        }
      ],
      "name": "getIndexOfHighestBidOfAuction",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        }
      ],
      "name": "getIndexOfSecondWinnerOfAuction",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getListAuctionId",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        }
      ],
      "name": "payment",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "bidAmount",
          "type": "uint256"
        }
      ],
      "name": "placeBid",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        }
      ],
      "name": "registerToBid",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "k",
          "type": "uint256"
        }
      ],
      "name": "testDB",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xac01c5a314097d3603841df2513801f678cd6600077666a81eae85248f8da347",
  "receipt": {
    "to": null,
    "from": "0x26594a6109a5154C8E10765C5f15F4B7F54e0420",
    "contractAddress": "0xe3417CF4716Ae7F66F063f03c38D0Bc27DED9AdC",
    "transactionIndex": 102,
    "gasUsed": "2841496",
    "logsBloom": "0x
    "blockHash": "0xa4b7b6ed31aaecafdd285e7cff117a309ffa0a4d7d94d9c55437356d96cc4906",
    "transactionHash": "0xac01c5a314097d3603841df2513801f678cd6600077666a81eae85248f8da347",
    "logs": [],
    "blockNumber": 8097996,
    "cumulativeGasUsed": "20973356",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "9d23cb150e23725c36f2b9d65b6ade98",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Auction__ConfirmationTimeout\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__InvalidAuctionId\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__InvalidAuctionTime\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__InvalidBidAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__InvalidDepositAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__InvalidDuePaymentTime\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__InvalidPriceStep\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__InvalidRegistrationFee\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__InvalidRegistrationTime\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__InvalidStartAuctionTime\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__InvalidStartBid\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__NotExistAuctionId\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__NotRegisteredBidder\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__NotWinnerOfAuction\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__OutOfAuctionTime\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__OutOfRegistrationTime\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"requirePaymentAmount\",\"type\":\"uint256\"}],\"name\":\"Auction__RequireAmountToPaymentNotMet\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"requireAmountToRegister\",\"type\":\"uint256\"}],\"name\":\"Auction__RequireAmountToRegisterNotMet\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum Auction.BidderState\",\"name\":\"bidderState\",\"type\":\"uint8\"}],\"name\":\"CanceledAuctionResult\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"}],\"name\":\"ClosedAuction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paidAmount\",\"type\":\"uint256\"}],\"name\":\"ClosedAuctionSucessfully\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startRegistrationTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endRegistrationTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startAuctionTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endAuctionTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"duePaymentTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"registrationFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"depositAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startBid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"priceStep\",\"type\":\"uint256\"}],\"name\":\"CreatedAuction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bidAmount\",\"type\":\"uint256\"}],\"name\":\"PlacedBid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum Auction.BidderState\",\"name\":\"bidderState\",\"type\":\"uint8\"}],\"name\":\"RegisteredToBid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"k\",\"type\":\"uint256\"}],\"name\":\"TestDB\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"}],\"name\":\"Withdrew\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"}],\"name\":\"cancelAuctionResult\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"}],\"name\":\"closeAuction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"startRegistrationTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endRegistrationTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startAuctionTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endAuctionTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duePaymentTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"registrationFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"depositAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startBid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priceStep\",\"type\":\"uint256\"}],\"name\":\"createAuction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"}],\"name\":\"getAuctionInformationById\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startRegistrationTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endRegistrationTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startAuctionTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endAuctionTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duePaymentTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"registrationFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"depositAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startBid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priceStep\",\"type\":\"uint256\"}],\"internalType\":\"struct Auction.AuctionInformation\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"}],\"name\":\"getBidInformationByAuctionId\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"bidAmount\",\"type\":\"uint256\"},{\"internalType\":\"enum Auction.BidderState\",\"name\":\"bidderState\",\"type\":\"uint8\"}],\"internalType\":\"struct Auction.BidInformation[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"}],\"name\":\"getHightestBidOfAuction\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"}],\"name\":\"getIndexOfHighestBidOfAuction\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"}],\"name\":\"getIndexOfSecondWinnerOfAuction\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getListAuctionId\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"}],\"name\":\"payment\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"bidAmount\",\"type\":\"uint256\"}],\"name\":\"placeBid\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"}],\"name\":\"registerToBid\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"k\",\"type\":\"uint256\"}],\"name\":\"testDB\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Nguyen Thanh Trung\",\"details\":\"This implements the auctioneer job\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Decentralized Auction\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This contract is for Decentralized Auction Platform\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Auction.sol\":\"Auction\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Auction.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.17;\\r\\n\\r\\nerror Auction__InvalidRegistrationTime();\\r\\nerror Auction__InvalidAuctionTime();\\r\\nerror Auction__InvalidDuePaymentTime();\\r\\nerror Auction__InvalidStartAuctionTime();\\r\\nerror Auction__InvalidRegistrationFee();\\r\\nerror Auction__InvalidDepositAmount();\\r\\nerror Auction__InvalidStartBid();\\r\\nerror Auction__InvalidPriceStep();\\r\\nerror Auction__InvalidDatetime();\\r\\nerror Auction__InvalidAuctionId();\\r\\nerror Auction__OutOfRegistrationTime();\\r\\nerror Auction__RequireAmountToRegisterNotMet(string auctionId, uint256 requireAmountToRegister);\\r\\nerror Auction__OutOfAuctionTime();\\r\\nerror Auction__InvalidBidAmount();\\r\\nerror Auction__NotRegisteredBidder();\\r\\nerror Auction__NotExistAuctionId();\\r\\nerror Auction__ConfirmationTimeout();\\r\\nerror Auction__NotWinnerOfAuction();\\r\\nerror Auction__TransferFailed();\\r\\nerror Auction__RequireAmountToPaymentNotMet(string auctionId, uint256 requirePaymentAmount);\\r\\n\\r\\n/**@title Decentralized Auction\\r\\n * @author Nguyen Thanh Trung\\r\\n * @notice This contract is for Decentralized Auction Platform\\r\\n * @dev This implements the auctioneer job\\r\\n */\\r\\ncontract Auction {\\r\\n    string[] private s_auctionList;\\r\\n    uint16 private constant CONFIRMATION_TIME = 300;\\r\\n    enum BidderState {\\r\\n        BIDING, //registered or bidding\\r\\n        WAITING, //top 2 bidder who is watting for top 1 confirm result\\r\\n        WIN, //winner\\r\\n        LOSE, // top 3 or lower\\r\\n        CANCEL, //cencel bid or auction result\\r\\n        WITHDEW, //paid back deposit\\r\\n        PAID // payment complete\\r\\n    }\\r\\n\\r\\n    struct AuctionInformation {\\r\\n        // bytes10\\r\\n        uint256 startRegistrationTime;\\r\\n        uint256 endRegistrationTime;\\r\\n        uint256 startAuctionTime;\\r\\n        uint256 endAuctionTime;\\r\\n        uint256 duePaymentTime;\\r\\n        uint256 registrationFee;\\r\\n        uint256 depositAmount;\\r\\n        uint256 startBid;\\r\\n        uint256 priceStep;\\r\\n    }\\r\\n\\r\\n    struct BidInformation {\\r\\n        address bidder;\\r\\n        uint256 bidAmount;\\r\\n        BidderState bidderState;\\r\\n    }\\r\\n\\r\\n    event CreatedAuction(\\r\\n        string auctionId,\\r\\n        uint256 startRegistrationTime,\\r\\n        uint256 endRegistrationTime,\\r\\n        uint256 startAuctionTime,\\r\\n        uint256 endAuctionTime,\\r\\n        uint256 duePaymentTime,\\r\\n        uint256 registrationFee,\\r\\n        uint256 depositAmount,\\r\\n        uint256 startBid,\\r\\n        uint256 priceStep\\r\\n    );\\r\\n    event PlacedBid(string auctionId, address bidder, uint256 bidAmount);\\r\\n    event RegisteredToBid(string auctionId, address bidder, BidderState bidderState);\\r\\n    event ClosedAuction(string auctionId);\\r\\n    event CanceledAuctionResult(string auctionId, address bidder, BidderState bidderState);\\r\\n    event Withdrew(string auctionId, address bidder);\\r\\n    event ClosedAuctionSucessfully(string auctionId, address bidder, uint256 paidAmount);\\r\\n    event TestDB(uint256 k);\\r\\n\\r\\n    mapping(string => AuctionInformation) private s_AuctionInformations;\\r\\n    mapping(string => BidInformation[]) private s_BidInformations;\\r\\n\\r\\n    modifier isVailidAuctionId(string memory auctionId) {\\r\\n        for (uint256 i = 0; i < s_auctionList.length; i++) {\\r\\n            if (keccak256(abi.encodePacked(auctionId)) == keccak256(abi.encodePacked(s_auctionList[i]))) {\\r\\n                revert Auction__InvalidAuctionId();\\r\\n            }\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isExistAuctionId(string memory auctionId) {\\r\\n        uint256 count = 0;\\r\\n        for (uint256 i = 0; i < s_auctionList.length; i++) {\\r\\n            if (keccak256(abi.encodePacked(auctionId)) != keccak256(abi.encodePacked(s_auctionList[i]))) {\\r\\n                count++;\\r\\n            }\\r\\n        }\\r\\n        if (count == s_auctionList.length) {\\r\\n            revert Auction__NotExistAuctionId();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isValidRegistrationTime(uint256 startRegistrationTime, uint256 endRegistrationTime) {\\r\\n        if (\\r\\n            startRegistrationTime < block.timestamp ||\\r\\n            // block.timestamp > endRegistrationTime ||\\r\\n            startRegistrationTime >= endRegistrationTime\\r\\n        ) {\\r\\n            revert Auction__InvalidRegistrationTime();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isValidStartAuctionTime(uint256 endRegistrationTime, uint256 startAuctionTime) {\\r\\n        if (endRegistrationTime >= startAuctionTime) {\\r\\n            revert Auction__InvalidStartAuctionTime();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isValidAuctionTime(uint256 startAuctionTime, uint256 endAuctionTime) {\\r\\n        if (startAuctionTime >= endAuctionTime) {\\r\\n            revert Auction__InvalidAuctionTime();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isValidDuePaymentTime(uint256 endAuctionTime, uint256 duePaymentTime) {\\r\\n        if (endAuctionTime >= duePaymentTime) {\\r\\n            revert Auction__InvalidDuePaymentTime();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isValidRegistrationFee(uint256 registrationFee) {\\r\\n        if (registrationFee <= 0) {\\r\\n            revert Auction__InvalidRegistrationFee();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isValidDepositAmount(uint256 depositAmount) {\\r\\n        if (depositAmount <= 0) {\\r\\n            revert Auction__InvalidDepositAmount();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isValidStartBid(uint256 depositAmount) {\\r\\n        if (depositAmount <= 0) {\\r\\n            revert Auction__InvalidStartBid();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isValidPriceStep(uint256 depositAmount) {\\r\\n        if (depositAmount <= 0) {\\r\\n            revert Auction__InvalidPriceStep();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isAuctionExist(string memory auctionId) {\\r\\n        uint256 count;\\r\\n        for (uint256 i = 0; i < s_auctionList.length; i++) {\\r\\n            count++;\\r\\n        }\\r\\n        if (count == s_auctionList.length) {\\r\\n            revert Auction__InvalidAuctionId();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isRegistrationTime(string memory auctionId) {\\r\\n        if (\\r\\n            s_AuctionInformations[auctionId].startRegistrationTime < block.timestamp ||\\r\\n            s_AuctionInformations[auctionId].endRegistrationTime > block.timestamp\\r\\n        ) {\\r\\n            revert Auction__OutOfRegistrationTime();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isAuctionTime(string memory auctionId) {\\r\\n        if (\\r\\n            s_AuctionInformations[auctionId].startAuctionTime < block.timestamp || s_AuctionInformations[auctionId].endAuctionTime > block.timestamp\\r\\n        ) {\\r\\n            revert Auction__OutOfAuctionTime();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isValidBidAmount(string memory auctionId, uint256 bidAmount) {\\r\\n        if (\\r\\n            bidAmount < s_AuctionInformations[auctionId].depositAmount ||\\r\\n            bidAmount < getHightestBidOfAuction(auctionId) + s_AuctionInformations[auctionId].priceStep\\r\\n        ) {\\r\\n            revert Auction__InvalidBidAmount();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isRegisteredBidder(string memory auctionId) {\\r\\n        uint256 count = 0;\\r\\n        for (uint256 i = 0; i < s_BidInformations[auctionId].length; i++) {\\r\\n            if (s_BidInformations[auctionId][i].bidder != msg.sender) {\\r\\n                count++;\\r\\n            }\\r\\n        }\\r\\n        if (count == s_BidInformations[auctionId].length) {\\r\\n            revert Auction__NotRegisteredBidder();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isConfirmationTime(string memory auctionId) {\\r\\n        if (msg.sender == s_BidInformations[auctionId][getIndexOfHighestBidOfAuction(auctionId)].bidder) {\\r\\n            uint256 dueConfirmationTime = s_AuctionInformations[auctionId].endAuctionTime + CONFIRMATION_TIME;\\r\\n            if (dueConfirmationTime > block.timestamp) {\\r\\n                revert Auction__ConfirmationTimeout();\\r\\n            }\\r\\n        }\\r\\n        if (msg.sender == s_BidInformations[auctionId][getIndexOfSecondWinnerOfAuction(auctionId)].bidder) {\\r\\n            uint256 dueConfirmationTime = s_AuctionInformations[auctionId].endAuctionTime + CONFIRMATION_TIME * 2;\\r\\n            if (dueConfirmationTime > block.timestamp) {\\r\\n                revert Auction__ConfirmationTimeout();\\r\\n            }\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    //check sender is winner or not\\r\\n    modifier isWinnerOfAuction(string memory auctionId) {\\r\\n        if (s_BidInformations[auctionId][getIndexOfBidder(auctionId)].bidderState != BidderState.WIN) {\\r\\n            revert Auction__NotWinnerOfAuction();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function isValidatedInput(\\r\\n        string memory auctionId, //need validate\\r\\n        uint256 startRegistrationTime,\\r\\n        uint256 endRegistrationTime,\\r\\n        uint256 startAuctionTime,\\r\\n        uint256 endAuctionTime,\\r\\n        uint256 duePaymentTime,\\r\\n        uint256 registrationFee,\\r\\n        uint256 depositAmount,\\r\\n        uint256 startBid,\\r\\n        uint256 priceStep\\r\\n    )\\r\\n        internal\\r\\n        view\\r\\n        isVailidAuctionId(auctionId)\\r\\n        isValidRegistrationTime(startRegistrationTime, endRegistrationTime)\\r\\n        isValidStartAuctionTime(endRegistrationTime, startAuctionTime)\\r\\n        isValidAuctionTime(startAuctionTime, endAuctionTime)\\r\\n        isValidDuePaymentTime(endAuctionTime, duePaymentTime)\\r\\n        isValidRegistrationFee(registrationFee)\\r\\n        isValidDepositAmount(depositAmount)\\r\\n        isValidStartBid(startBid)\\r\\n        isValidPriceStep(priceStep)\\r\\n        returns (bool)\\r\\n    {\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function createAuction(\\r\\n        string memory auctionId,\\r\\n        uint256 startRegistrationTime,\\r\\n        uint256 endRegistrationTime,\\r\\n        uint256 startAuctionTime,\\r\\n        uint256 endAuctionTime,\\r\\n        uint256 duePaymentTime,\\r\\n        uint256 registrationFee,\\r\\n        uint256 depositAmount,\\r\\n        uint256 startBid,\\r\\n        uint256 priceStep\\r\\n    ) external {\\r\\n        if (\\r\\n            isValidatedInput(\\r\\n                auctionId,\\r\\n                startRegistrationTime,\\r\\n                endRegistrationTime,\\r\\n                startAuctionTime,\\r\\n                endAuctionTime,\\r\\n                duePaymentTime,\\r\\n                registrationFee,\\r\\n                depositAmount,\\r\\n                startBid,\\r\\n                priceStep\\r\\n            )\\r\\n        ) {\\r\\n            AuctionInformation memory auction;\\r\\n            auction.startRegistrationTime = startRegistrationTime;\\r\\n            auction.endRegistrationTime = endRegistrationTime;\\r\\n            auction.startAuctionTime = startAuctionTime;\\r\\n            auction.endAuctionTime = endAuctionTime;\\r\\n            auction.duePaymentTime = duePaymentTime;\\r\\n            auction.registrationFee = registrationFee;\\r\\n            auction.depositAmount = depositAmount;\\r\\n            auction.startBid = startBid;\\r\\n            auction.priceStep = priceStep;\\r\\n            s_AuctionInformations[auctionId] = auction;\\r\\n            s_auctionList.push(auctionId);\\r\\n\\r\\n            emit CreatedAuction(\\r\\n                auctionId,\\r\\n                startRegistrationTime,\\r\\n                endRegistrationTime,\\r\\n                startAuctionTime,\\r\\n                endAuctionTime,\\r\\n                duePaymentTime,\\r\\n                registrationFee,\\r\\n                depositAmount,\\r\\n                startBid,\\r\\n                priceStep\\r\\n            );\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function registerToBid(string memory auctionId) external payable isVailidAuctionId(auctionId) isRegistrationTime(auctionId) {\\r\\n        uint256 requireAmountToRegister = s_AuctionInformations[auctionId].registrationFee + s_AuctionInformations[auctionId].depositAmount;\\r\\n        if (msg.value < requireAmountToRegister) {\\r\\n            revert Auction__RequireAmountToRegisterNotMet(auctionId, requireAmountToRegister);\\r\\n        }\\r\\n        s_BidInformations[auctionId][s_BidInformations[auctionId].length].bidder = msg.sender;\\r\\n        s_BidInformations[auctionId][s_BidInformations[auctionId].length].bidderState = BidderState.BIDING;\\r\\n        emit RegisteredToBid(auctionId, msg.sender, s_BidInformations[auctionId][s_BidInformations[auctionId].length].bidderState);\\r\\n    }\\r\\n\\r\\n    function getHightestBidOfAuction(string memory auctionId) public view returns (uint256) {\\r\\n        uint256 highestBid = 0;\\r\\n        for (uint256 i = 0; i < s_BidInformations[auctionId].length; i++) {\\r\\n            if (s_BidInformations[auctionId][i].bidAmount > highestBid && s_BidInformations[auctionId][i].bidderState != BidderState.CANCEL) {\\r\\n                highestBid = s_BidInformations[auctionId][i].bidAmount;\\r\\n            }\\r\\n        }\\r\\n        return highestBid;\\r\\n    }\\r\\n\\r\\n    //get index of bidder who is sender\\r\\n    function getIndexOfBidder(string memory auctionId) internal view returns (uint256) {\\r\\n        for (uint256 i = 0; i < s_BidInformations[auctionId].length; i++) {\\r\\n            if (s_BidInformations[auctionId][i].bidder == msg.sender) {\\r\\n                return i;\\r\\n            }\\r\\n        }\\r\\n        return 0;\\r\\n    }\\r\\n\\r\\n    function placeBid(string memory auctionId, uint256 bidAmount)\\r\\n        external\\r\\n        payable\\r\\n        isAuctionExist(auctionId)\\r\\n        isAuctionTime(auctionId)\\r\\n        isRegisteredBidder(auctionId)\\r\\n        isValidBidAmount(auctionId, bidAmount)\\r\\n    {\\r\\n        s_BidInformations[auctionId][getIndexOfBidder(auctionId)].bidAmount = bidAmount;\\r\\n        emit PlacedBid(auctionId, msg.sender, bidAmount);\\r\\n    }\\r\\n\\r\\n    function getIndexOfHighestBidOfAuction(string memory auctionId) public view returns (uint256) {\\r\\n        uint256 highestIndex;\\r\\n        for (uint256 i = 0; i < s_BidInformations[auctionId].length; i++) {\\r\\n            if (highestIndex < s_BidInformations[auctionId][i].bidAmount && s_BidInformations[auctionId][i].bidderState != BidderState.CANCEL) {\\r\\n                highestIndex = i;\\r\\n            }\\r\\n        }\\r\\n        return highestIndex;\\r\\n    }\\r\\n\\r\\n    function closeAuction(string memory auctionId) external isExistAuctionId(auctionId) {\\r\\n        uint256 index = getIndexOfHighestBidOfAuction(auctionId);\\r\\n        s_BidInformations[auctionId][index].bidderState = BidderState.WIN;\\r\\n        uint256 index2 = getIndexOfSecondWinnerOfAuction(auctionId);\\r\\n        s_BidInformations[auctionId][index2].bidderState = BidderState.WAITING;\\r\\n        for (uint256 i = 0; i < s_BidInformations[auctionId].length; i++) {\\r\\n            if (s_BidInformations[auctionId][i].bidderState == BidderState.BIDING) {\\r\\n                s_BidInformations[auctionId][i].bidderState == BidderState.LOSE;\\r\\n            }\\r\\n        }\\r\\n        emit ClosedAuction(auctionId);\\r\\n    }\\r\\n\\r\\n    function cancelAuctionResult(string memory auctionId) external payable isConfirmationTime(auctionId) isWinnerOfAuction(auctionId) {\\r\\n        if (msg.sender == s_BidInformations[auctionId][getIndexOfHighestBidOfAuction(auctionId)].bidder) {\\r\\n            s_BidInformations[auctionId][getIndexOfHighestBidOfAuction(auctionId)].bidderState = BidderState.CANCEL;\\r\\n            s_BidInformations[auctionId][getIndexOfSecondWinnerOfAuction(auctionId)].bidderState = BidderState.WIN;\\r\\n        } else {\\r\\n            s_BidInformations[auctionId][getIndexOfSecondWinnerOfAuction(auctionId)].bidderState = BidderState.CANCEL;\\r\\n        }\\r\\n        emit CanceledAuctionResult(auctionId, msg.sender, s_BidInformations[auctionId][getIndexOfBidder(auctionId)].bidderState);\\r\\n    }\\r\\n\\r\\n    function getIndexOfSecondWinnerOfAuction(string memory auctionId) public returns (uint256) {\\r\\n        BidInformation[] storage tempBidInformation = s_BidInformations[auctionId];\\r\\n        uint256 index = getHightestBidOfAuction(auctionId);\\r\\n        require(index < tempBidInformation.length);\\r\\n        tempBidInformation[index] = tempBidInformation[tempBidInformation.length - 1];\\r\\n        tempBidInformation.pop();\\r\\n        uint256 highestIndex;\\r\\n        for (uint256 i = 0; i < tempBidInformation.length; i++) {\\r\\n            if (highestIndex < tempBidInformation[i].bidAmount) {\\r\\n                highestIndex = i;\\r\\n            }\\r\\n        }\\r\\n        return highestIndex;\\r\\n    }\\r\\n\\r\\n    function withdaw(string memory auctionId) internal {\\r\\n        uint256 depositAmount = s_AuctionInformations[auctionId].depositAmount;\\r\\n        for (uint256 i = 0; i < s_BidInformations[auctionId].length; i++) {\\r\\n            if (s_BidInformations[auctionId][i].bidderState == BidderState.LOSE) {\\r\\n                bool success = payable(s_BidInformations[auctionId][i].bidder).send(depositAmount);\\r\\n                // require(success, \\\"Failed to send Ether\\\");\\r\\n                if (!success) {\\r\\n                    revert Auction__TransferFailed();\\r\\n                } else {\\r\\n                    s_BidInformations[auctionId][i].bidderState = BidderState.WITHDEW;\\r\\n                    emit Withdrew(auctionId, s_BidInformations[auctionId][i].bidder);\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    modifier isValidPaymentAmount(string memory auctionId) {\\r\\n        uint256 requirePaymentAmount = s_BidInformations[auctionId][getIndexOfBidder(auctionId)].bidAmount -\\r\\n            s_AuctionInformations[auctionId].depositAmount;\\r\\n        if (msg.value != requirePaymentAmount) {\\r\\n            revert Auction__RequireAmountToPaymentNotMet(auctionId, requirePaymentAmount);\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function payment(string memory auctionId) external payable isWinnerOfAuction(auctionId) isValidPaymentAmount(auctionId) {\\r\\n        s_BidInformations[auctionId][getIndexOfBidder(auctionId)].bidderState = BidderState.PAID;\\r\\n        emit ClosedAuctionSucessfully(auctionId, msg.sender, msg.value);\\r\\n    }\\r\\n\\r\\n    function getListAuctionId() external view returns (string[] memory) {\\r\\n        return s_auctionList;\\r\\n    }\\r\\n\\r\\n    function getAuctionInformationById(string memory auctionId) external view isExistAuctionId(auctionId) returns (AuctionInformation memory) {\\r\\n        return s_AuctionInformations[auctionId];\\r\\n    }\\r\\n\\r\\n    function getBidInformationByAuctionId(string memory auctionId) external view isExistAuctionId(auctionId) returns (BidInformation[] memory) {\\r\\n        return s_BidInformations[auctionId];\\r\\n    }\\r\\n\\r\\n    function testDB(uint256 k) external {\\r\\n        emit TestDB(k);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x6470f4c02d4be5de448bf15a02fb0d86b2c7341efcdf8cc36d623096a581784a\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506132a2806100206000396000f3fe6080604052600436106100c25760003560e01c8063816669711161007f578063af6fd4a711610059578063af6fd4a71461027d578063b061097914610299578063daddf717146102d6578063f05981fa146102f2576100c2565b806381666971146101fb578063a7eaa24114610224578063a9a7dc6314610240576100c2565b80631c46583b146100c75780631d67fa3f146100f257806333a3b9bd1461012f578063615adb6a146101585780636821fe2214610195578063693dfca8146101d2575b600080fd5b3480156100d357600080fd5b506100dc61030e565b6040516100e991906124fb565b60405180910390f35b3480156100fe57600080fd5b5061011960048036038101906101149190612666565b6103e7565b60405161012691906126c8565b60405180910390f35b34801561013b57600080fd5b506101566004803603810190610151919061270f565b6105fa565b005b34801561016457600080fd5b5061017f600480360381019061017a9190612666565b610634565b60405161018c9190612802565b60405180910390f35b3480156101a157600080fd5b506101bc60048036038101906101b79190612666565b6107ac565b6040516101c991906129c7565b60405180910390f35b3480156101de57600080fd5b506101f960048036038101906101f49190612666565b6109a9565b005b34801561020757600080fd5b50610222600480360381019061021d91906129e9565b610ce9565b005b61023e60048036038101906102399190612ae4565b610e6c565b005b34801561024c57600080fd5b5061026760048036038101906102629190612666565b6111d7565b60405161027491906126c8565b60405180910390f35b61029760048036038101906102929190612666565b6112ef565b005b3480156102a557600080fd5b506102c060048036038101906102bb9190612666565b611518565b6040516102cd91906126c8565b60405180910390f35b6102f060048036038101906102eb9190612666565b611675565b005b61030c60048036038101906103079190612666565b611a38565b005b60606000805480602002602001604051908101604052809291908181526020016000905b828210156103de57838290600052602060002001805461035190612b6f565b80601f016020809104026020016040519081016040528092919081815260200182805461037d90612b6f565b80156103ca5780601f1061039f576101008083540402835291602001916103ca565b820191906000526020600020905b8154815290600101906020018083116103ad57829003601f168201915b505050505081526020019060010190610332565b50505050905090565b6000806002836040516103fa9190612bdc565b90815260200160405180910390209050600061041584611518565b90508180549050811061042757600080fd5b81600183805490506104399190612c22565b8154811061044a57610449612c56565b5b906000526020600020906003020182828154811061046b5761046a612c56565b5b90600052602060002090600302016000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600182015481600101556002820160009054906101000a900460ff168160020160006101000a81548160ff021916908360068111156105225761052161288b565b5b02179055509050508180548061053b5761053a612c85565b5b6001900381819060005260206000209060030201600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560018201600090556002820160006101000a81549060ff021916905550509055600080600090505b83805490508110156105ee578381815481106105be576105bd612c56565b5b9060005260206000209060030201600101548210156105db578091505b80806105e690612cb4565b91505061059f565b50809350505050919050565b7fd3e855657ba4c067a1799f69c531de26dc531d75eb43875d9b59152d9c5b79d18160405161062991906126c8565b60405180910390a150565b61063c61235d565b816000805b6000805490508110156106e0576000818154811061066257610661612c56565b5b9060005260206000200160405160200161067c9190612d94565b60405160208183030381529060405280519060200120836040516020016106a39190612bdc565b60405160208183030381529060405280519060200120146106cd5781806106c990612cb4565b9250505b80806106d890612cb4565b915050610641565b50600080549050810361071f576040517fc1c7f9a100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018460405161072f9190612bdc565b908152602001604051809103902060405180610120016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820154815260200160058201548152602001600682015481526020016007820154815260200160088201548152505092505050919050565b6060816000805b60008054905081101561085257600081815481106107d4576107d3612c56565b5b906000526020600020016040516020016107ee9190612d94565b60405160208183030381529060405280519060200120836040516020016108159190612bdc565b604051602081830303815290604052805190602001201461083f57818061083b90612cb4565b9250505b808061084a90612cb4565b9150506107b3565b506000805490508103610891576040517fc1c7f9a100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002846040516108a19190612bdc565b9081526020016040518091039020805480602002602001604051908101604052809291908181526020016000905b8282101561099c57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820160009054906101000a900460ff1660068111156109775761097661288b565b5b60068111156109895761098861288b565b5b81525050815260200190600101906108cf565b5050505092505050919050565b806000805b600080549050811015610a4d57600081815481106109cf576109ce612c56565b5b906000526020600020016040516020016109e99190612d94565b6040516020818303038152906040528051906020012083604051602001610a109190612bdc565b6040516020818303038152906040528051906020012014610a3a578180610a3690612cb4565b9250505b8080610a4590612cb4565b9150506109ae565b506000805490508103610a8c576040517fc1c7f9a100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610a97846111d7565b905060028085604051610aaa9190612bdc565b90815260200160405180910390208281548110610aca57610ac9612c56565b5b906000526020600020906003020160020160006101000a81548160ff02191690836006811115610afd57610afc61288b565b5b02179055506000610b0d856103e7565b90506001600286604051610b219190612bdc565b90815260200160405180910390208281548110610b4157610b40612c56565b5b906000526020600020906003020160020160006101000a81548160ff02191690836006811115610b7457610b7361288b565b5b021790555060005b600286604051610b8c9190612bdc565b908152602001604051809103902080549050811015610caa5760006006811115610bb957610bb861288b565b5b600287604051610bc99190612bdc565b90815260200160405180910390208281548110610be957610be8612c56565b5b906000526020600020906003020160020160009054906101000a900460ff166006811115610c1a57610c1961288b565b5b03610c975760036006811115610c3357610c3261288b565b5b600287604051610c439190612bdc565b90815260200160405180910390208281548110610c6357610c62612c56565b5b906000526020600020906003020160020160009054906101000a900460ff166006811115610c9457610c9361288b565b5b50505b8080610ca290612cb4565b915050610b7c565b507f9d8c4bda31461c9a9300697c59318bac02cc954037b51c5db3ae52347042d2bc85604051610cda9190612df5565b60405180910390a15050505050565b610cfb8a8a8a8a8a8a8a8a8a8a611fa5565b15610e6057610d0861235d565b8981600001818152505088816020018181525050878160400181815250508681606001818152505085816080018181525050848160a0018181525050838160c0018181525050828160e001818152505081816101000181815250508060018c604051610d749190612bdc565b9081526020016040518091039020600082015181600001556020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005015560c0820151816006015560e08201518160070155610100820151816008015590505060008b908060018154018082558091505060019003906000526020600020016000909190919091509081610e149190612fae565b507fe5549b694e8ea655c231f5d255127cf7c0f14997a411ccdf6577e3b9911674428b8b8b8b8b8b8b8b8b8b604051610e569a99989796959493929190613080565b60405180910390a1505b50505050505050505050565b81600080600090505b600080549050811015610ea3578180610e8d90612cb4565b9250508080610e9b90612cb4565b915050610e75565b506000805490508103610ee2576040517f6b9108f800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8342600182604051610ef49190612bdc565b9081526020016040518091039020600201541080610f32575042600182604051610f1e9190612bdc565b908152602001604051809103902060030154115b15610f69576040517f355d234800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b846000805b600283604051610f7e9190612bdc565b90815260200160405180910390208054905081101561104d573373ffffffffffffffffffffffffffffffffffffffff16600284604051610fbe9190612bdc565b90815260200160405180910390208281548110610fde57610fdd612c56565b5b906000526020600020906003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461103a57818061103690612cb4565b9250505b808061104590612cb4565b915050610f6e565b5060028260405161105e9190612bdc565b90815260200160405180910390208054905081036110a8576040517f2ffd4a0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b86866001826040516110ba9190612bdc565b90815260200160405180910390206006015481108061110c57506001826040516110e49190612bdc565b9081526020016040518091039020600801546110ff83611518565b6111099190613123565b81105b15611143576040517fabdda60f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8760028a6040516111549190612bdc565b908152602001604051809103902061116b8b612271565b8154811061117c5761117b612c56565b5b9060005260206000209060030201600101819055507fe886416816c234ad984c20a40b4480b0e1dc31a4da3edbab50626e575b7dbe0589338a6040516111c493929190613166565b60405180910390a1505050505050505050565b60008060005b6002846040516111ed9190612bdc565b9081526020016040518091039020805490508110156112e5576002846040516112169190612bdc565b9081526020016040518091039020818154811061123657611235612c56565b5b906000526020600020906003020160010154821080156112c95750600460068111156112655761126461288b565b5b6002856040516112759190612bdc565b9081526020016040518091039020828154811061129557611294612c56565b5b906000526020600020906003020160020160009054906101000a900460ff1660068111156112c6576112c561288b565b5b14155b156112d2578091505b80806112dd90612cb4565b9150506111dd565b5080915050919050565b80600260068111156113045761130361288b565b5b6002826040516113149190612bdc565b908152602001604051809103902061132b83612271565b8154811061133c5761133b612c56565b5b906000526020600020906003020160020160009054906101000a900460ff16600681111561136d5761136c61288b565b5b146113a4576040517f7963b56f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8160006001826040516113b79190612bdc565b9081526020016040518091039020600601546002836040516113d99190612bdc565b90815260200160405180910390206113f084612271565b8154811061140157611400612c56565b5b90600052602060002090600302016001015461141d9190612c22565b90508034146114655781816040517f1abcbf8700000000000000000000000000000000000000000000000000000000815260040161145c9291906131a4565b60405180910390fd5b60066002856040516114779190612bdc565b908152602001604051809103902061148e86612271565b8154811061149f5761149e612c56565b5b906000526020600020906003020160020160006101000a81548160ff021916908360068111156114d2576114d161288b565b5b02179055507f2951e1d2e4f526e0e6f563c03b8940da36e4616bbc2ec1933479f7d649e0016484333460405161150a93929190613166565b60405180910390a150505050565b6000806000905060005b6002846040516115329190612bdc565b90815260200160405180910390208054905081101561166b578160028560405161155c9190612bdc565b9081526020016040518091039020828154811061157c5761157b612c56565b5b90600052602060002090600302016001015411801561160e5750600460068111156115aa576115a961288b565b5b6002856040516115ba9190612bdc565b908152602001604051809103902082815481106115da576115d9612c56565b5b906000526020600020906003020160020160009054906101000a900460ff16600681111561160b5761160a61288b565b5b14155b15611658576002846040516116239190612bdc565b9081526020016040518091039020818154811061164357611642612c56565b5b90600052602060002090600302016001015491505b808061166390612cb4565b915050611522565b5080915050919050565b8060005b60008054905081101561173b576000818154811061169a57611699612c56565b5b906000526020600020016040516020016116b49190612d94565b60405160208183030381529060405280519060200120826040516020016116db9190612bdc565b6040516020818303038152906040528051906020012003611728576040517f6b9108f800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b808061173390612cb4565b915050611679565b50814260018260405161174e9190612bdc565b908152602001604051809103902060000154108061178c5750426001826040516117789190612bdc565b908152602001604051809103902060010154115b156117c3576040517f60acd97900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006001846040516117d59190612bdc565b9081526020016040518091039020600601546001856040516117f79190612bdc565b9081526020016040518091039020600501546118139190613123565b90508034101561185c5783816040517f2aac8ad50000000000000000000000000000000000000000000000000000000081526004016118539291906131a4565b60405180910390fd5b3360028560405161186d9190612bdc565b908152602001604051809103902060028660405161188b9190612bdc565b908152602001604051809103902080549050815481106118ae576118ad612c56565b5b906000526020600020906003020160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600060028560405161190f9190612bdc565b908152602001604051809103902060028660405161192d9190612bdc565b908152602001604051809103902080549050815481106119505761194f612c56565b5b906000526020600020906003020160020160006101000a81548160ff021916908360068111156119835761198261288b565b5b02179055507f3d91795a8d93a82cebcc92ac50f202b5aa73244f00228e1cc9cbdafbbdf8fe9b84336002876040516119bb9190612bdc565b90815260200160405180910390206002886040516119d99190612bdc565b908152602001604051809103902080549050815481106119fc576119fb612c56565b5b906000526020600020906003020160020160009054906101000a900460ff16604051611a2a939291906131e3565b60405180910390a150505050565b80600281604051611a499190612bdc565b9081526020016040518091039020611a60826111d7565b81548110611a7157611a70612c56565b5b906000526020600020906003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1603611b4857600061012c61ffff16600183604051611aee9190612bdc565b908152602001604051809103902060030154611b0a9190613123565b905042811115611b46576040517f49107ff700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505b600281604051611b589190612bdc565b9081526020016040518091039020611b6f826103e7565b81548110611b8057611b7f612c56565b5b906000526020600020906003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1603611c63576000600261012c611bf5919061322f565b61ffff16600183604051611c099190612bdc565b908152602001604051809103902060030154611c259190613123565b905042811115611c61576040517f49107ff700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505b8160026006811115611c7857611c7761288b565b5b600282604051611c889190612bdc565b9081526020016040518091039020611c9f83612271565b81548110611cb057611caf612c56565b5b906000526020600020906003020160020160009054906101000a900460ff166006811115611ce157611ce061288b565b5b14611d18576040517f7963b56f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600283604051611d289190612bdc565b9081526020016040518091039020611d3f846111d7565b81548110611d5057611d4f612c56565b5b906000526020600020906003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1603611e9c576004600284604051611dc69190612bdc565b9081526020016040518091039020611ddd856111d7565b81548110611dee57611ded612c56565b5b906000526020600020906003020160020160006101000a81548160ff02191690836006811115611e2157611e2061288b565b5b021790555060028084604051611e379190612bdc565b9081526020016040518091039020611e4e856103e7565b81548110611e5f57611e5e612c56565b5b906000526020600020906003020160020160006101000a81548160ff02191690836006811115611e9257611e9161288b565b5b0217905550611f0f565b6004600284604051611eae9190612bdc565b9081526020016040518091039020611ec5856103e7565b81548110611ed657611ed5612c56565b5b906000526020600020906003020160020160006101000a81548160ff02191690836006811115611f0957611f0861288b565b5b02179055505b7f87182aaac5dd5ec80140f092551157b9dc8f704ab22b683dc628b3099676d7308333600286604051611f429190612bdc565b9081526020016040518091039020611f5987612271565b81548110611f6a57611f69612c56565b5b906000526020600020906003020160020160009054906101000a900460ff16604051611f98939291906131e3565b60405180910390a1505050565b60008a60005b60008054905081101561206d5760008181548110611fcc57611fcb612c56565b5b90600052602060002001604051602001611fe69190612d94565b604051602081830303815290604052805190602001208260405160200161200d9190612bdc565b604051602081830303815290604052805190602001200361205a576040517f6b9108f800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b808061206590612cb4565b915050611fab565b508a8a4282108061207e5750808210155b156120b5576040517f5e83d5f800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8b8b8082106120f0576040517f7a9971e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8c8c80821061212b576040517fe2049fa500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8d8d808210612166576040517fcc2116a000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8d600081116121a1576040517fb25c88c500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8d600081116121dc576040517fb0f07a6300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8d60008111612217576040517ffb833a9900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8d60008111612252576040517fa9ed13a300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60019d50505050505050505050505050509a9950505050505050505050565b600080600090505b6002836040516122899190612bdc565b908152602001604051809103902080549050811015612352573373ffffffffffffffffffffffffffffffffffffffff166002846040516122c99190612bdc565b908152602001604051809103902082815481106122e9576122e8612c56565b5b906000526020600020906003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361233f5780915050612358565b808061234a90612cb4565b915050612279565b50600090505b919050565b6040518061012001604052806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561240f5780820151818401526020810190506123f4565b60008484015250505050565b6000601f19601f8301169050919050565b6000612437826123d5565b61244181856123e0565b93506124518185602086016123f1565b61245a8161241b565b840191505092915050565b6000612471838361242c565b905092915050565b6000602082019050919050565b6000612491826123a9565b61249b81856123b4565b9350836020820285016124ad856123c5565b8060005b858110156124e957848403895281516124ca8582612465565b94506124d583612479565b925060208a019950506001810190506124b1565b50829750879550505050505092915050565b600060208201905081810360008301526125158184612486565b905092915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6125738261241b565b810181811067ffffffffffffffff821117156125925761259161253b565b5b80604052505050565b60006125a561251d565b90506125b1828261256a565b919050565b600067ffffffffffffffff8211156125d1576125d061253b565b5b6125da8261241b565b9050602081019050919050565b82818337600083830152505050565b6000612609612604846125b6565b61259b565b90508281526020810184848401111561262557612624612536565b5b6126308482856125e7565b509392505050565b600082601f83011261264d5761264c612531565b5b813561265d8482602086016125f6565b91505092915050565b60006020828403121561267c5761267b612527565b5b600082013567ffffffffffffffff81111561269a5761269961252c565b5b6126a684828501612638565b91505092915050565b6000819050919050565b6126c2816126af565b82525050565b60006020820190506126dd60008301846126b9565b92915050565b6126ec816126af565b81146126f757600080fd5b50565b600081359050612709816126e3565b92915050565b60006020828403121561272557612724612527565b5b6000612733848285016126fa565b91505092915050565b612745816126af565b82525050565b61012082016000820151612762600085018261273c565b506020820151612775602085018261273c565b506040820151612788604085018261273c565b50606082015161279b606085018261273c565b5060808201516127ae608085018261273c565b5060a08201516127c160a085018261273c565b5060c08201516127d460c085018261273c565b5060e08201516127e760e085018261273c565b506101008201516127fc61010085018261273c565b50505050565b600061012082019050612818600083018461274b565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006128758261284a565b9050919050565b6128858161286a565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600781106128cb576128ca61288b565b5b50565b60008190506128dc826128ba565b919050565b60006128ec826128ce565b9050919050565b6128fc816128e1565b82525050565b606082016000820151612918600085018261287c565b50602082015161292b602085018261273c565b50604082015161293e60408501826128f3565b50505050565b60006129508383612902565b60608301905092915050565b6000602082019050919050565b60006129748261281e565b61297e8185612829565b93506129898361283a565b8060005b838110156129ba5781516129a18882612944565b97506129ac8361295c565b92505060018101905061298d565b5085935050505092915050565b600060208201905081810360008301526129e18184612969565b905092915050565b6000806000806000806000806000806101408b8d031215612a0d57612a0c612527565b5b60008b013567ffffffffffffffff811115612a2b57612a2a61252c565b5b612a378d828e01612638565b9a50506020612a488d828e016126fa565b9950506040612a598d828e016126fa565b9850506060612a6a8d828e016126fa565b9750506080612a7b8d828e016126fa565b96505060a0612a8c8d828e016126fa565b95505060c0612a9d8d828e016126fa565b94505060e0612aae8d828e016126fa565b935050610100612ac08d828e016126fa565b925050610120612ad28d828e016126fa565b9150509295989b9194979a5092959850565b60008060408385031215612afb57612afa612527565b5b600083013567ffffffffffffffff811115612b1957612b1861252c565b5b612b2585828601612638565b9250506020612b36858286016126fa565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680612b8757607f821691505b602082108103612b9a57612b99612b40565b5b50919050565b600081905092915050565b6000612bb6826123d5565b612bc08185612ba0565b9350612bd08185602086016123f1565b80840191505092915050565b6000612be88284612bab565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612c2d826126af565b9150612c38836126af565b9250828203905081811115612c5057612c4f612bf3565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b6000612cbf826126af565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612cf157612cf0612bf3565b5b600182019050919050565b60008190508160005260206000209050919050565b60008154612d1e81612b6f565b612d288186612ba0565b94506001821660008114612d435760018114612d5857612d8b565b60ff1983168652811515820286019350612d8b565b612d6185612cfc565b60005b83811015612d8357815481890152600182019150602081019050612d64565b838801955050505b50505092915050565b6000612da08284612d11565b915081905092915050565b600082825260208201905092915050565b6000612dc7826123d5565b612dd18185612dab565b9350612de18185602086016123f1565b612dea8161241b565b840191505092915050565b60006020820190508181036000830152612e0f8184612dbc565b905092915050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302612e647fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612e27565b612e6e8683612e27565b95508019841693508086168417925050509392505050565b6000819050919050565b6000612eab612ea6612ea1846126af565b612e86565b6126af565b9050919050565b6000819050919050565b612ec583612e90565b612ed9612ed182612eb2565b848454612e34565b825550505050565b600090565b612eee612ee1565b612ef9818484612ebc565b505050565b5b81811015612f1d57612f12600082612ee6565b600181019050612eff565b5050565b601f821115612f6257612f3381612cfc565b612f3c84612e17565b81016020851015612f4b578190505b612f5f612f5785612e17565b830182612efe565b50505b505050565b600082821c905092915050565b6000612f8560001984600802612f67565b1980831691505092915050565b6000612f9e8383612f74565b9150826002028217905092915050565b612fb7826123d5565b67ffffffffffffffff811115612fd057612fcf61253b565b5b612fda8254612b6f565b612fe5828285612f21565b600060209050601f8311600181146130185760008415613006578287015190505b6130108582612f92565b865550613078565b601f19841661302686612cfc565b60005b8281101561304e57848901518255600182019150602085019450602081019050613029565b8683101561306b5784890151613067601f891682612f74565b8355505b6001600288020188555050505b505050505050565b600061014082019050818103600083015261309b818d612dbc565b90506130aa602083018c6126b9565b6130b7604083018b6126b9565b6130c4606083018a6126b9565b6130d160808301896126b9565b6130de60a08301886126b9565b6130eb60c08301876126b9565b6130f860e08301866126b9565b6131066101008301856126b9565b6131146101208301846126b9565b9b9a5050505050505050505050565b600061312e826126af565b9150613139836126af565b925082820190508082111561315157613150612bf3565b5b92915050565b6131608161286a565b82525050565b600060608201905081810360008301526131808186612dbc565b905061318f6020830185613157565b61319c60408301846126b9565b949350505050565b600060408201905081810360008301526131be8185612dbc565b90506131cd60208301846126b9565b9392505050565b6131dd816128e1565b82525050565b600060608201905081810360008301526131fd8186612dbc565b905061320c6020830185613157565b61321960408301846131d4565b949350505050565b600061ffff82169050919050565b600061323a82613221565b915061324583613221565b925082820261325381613221565b915080821461326557613264612bf3565b5b509291505056fea2646970667358221220a5155bd153e898e01d20d2f485af15d5135e4073d1faf43352f009be7e65b95e64736f6c63430008110033",
  "deployedBytecode": "0x6080604052600436106100c25760003560e01c8063816669711161007f578063af6fd4a711610059578063af6fd4a71461027d578063b061097914610299578063daddf717146102d6578063f05981fa146102f2576100c2565b806381666971146101fb578063a7eaa24114610224578063a9a7dc6314610240576100c2565b80631c46583b146100c75780631d67fa3f146100f257806333a3b9bd1461012f578063615adb6a146101585780636821fe2214610195578063693dfca8146101d2575b600080fd5b3480156100d357600080fd5b506100dc61030e565b6040516100e991906124fb565b60405180910390f35b3480156100fe57600080fd5b5061011960048036038101906101149190612666565b6103e7565b60405161012691906126c8565b60405180910390f35b34801561013b57600080fd5b506101566004803603810190610151919061270f565b6105fa565b005b34801561016457600080fd5b5061017f600480360381019061017a9190612666565b610634565b60405161018c9190612802565b60405180910390f35b3480156101a157600080fd5b506101bc60048036038101906101b79190612666565b6107ac565b6040516101c991906129c7565b60405180910390f35b3480156101de57600080fd5b506101f960048036038101906101f49190612666565b6109a9565b005b34801561020757600080fd5b50610222600480360381019061021d91906129e9565b610ce9565b005b61023e60048036038101906102399190612ae4565b610e6c565b005b34801561024c57600080fd5b5061026760048036038101906102629190612666565b6111d7565b60405161027491906126c8565b60405180910390f35b61029760048036038101906102929190612666565b6112ef565b005b3480156102a557600080fd5b506102c060048036038101906102bb9190612666565b611518565b6040516102cd91906126c8565b60405180910390f35b6102f060048036038101906102eb9190612666565b611675565b005b61030c60048036038101906103079190612666565b611a38565b005b60606000805480602002602001604051908101604052809291908181526020016000905b828210156103de57838290600052602060002001805461035190612b6f565b80601f016020809104026020016040519081016040528092919081815260200182805461037d90612b6f565b80156103ca5780601f1061039f576101008083540402835291602001916103ca565b820191906000526020600020905b8154815290600101906020018083116103ad57829003601f168201915b505050505081526020019060010190610332565b50505050905090565b6000806002836040516103fa9190612bdc565b90815260200160405180910390209050600061041584611518565b90508180549050811061042757600080fd5b81600183805490506104399190612c22565b8154811061044a57610449612c56565b5b906000526020600020906003020182828154811061046b5761046a612c56565b5b90600052602060002090600302016000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600182015481600101556002820160009054906101000a900460ff168160020160006101000a81548160ff021916908360068111156105225761052161288b565b5b02179055509050508180548061053b5761053a612c85565b5b6001900381819060005260206000209060030201600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560018201600090556002820160006101000a81549060ff021916905550509055600080600090505b83805490508110156105ee578381815481106105be576105bd612c56565b5b9060005260206000209060030201600101548210156105db578091505b80806105e690612cb4565b91505061059f565b50809350505050919050565b7fd3e855657ba4c067a1799f69c531de26dc531d75eb43875d9b59152d9c5b79d18160405161062991906126c8565b60405180910390a150565b61063c61235d565b816000805b6000805490508110156106e0576000818154811061066257610661612c56565b5b9060005260206000200160405160200161067c9190612d94565b60405160208183030381529060405280519060200120836040516020016106a39190612bdc565b60405160208183030381529060405280519060200120146106cd5781806106c990612cb4565b9250505b80806106d890612cb4565b915050610641565b50600080549050810361071f576040517fc1c7f9a100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018460405161072f9190612bdc565b908152602001604051809103902060405180610120016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820154815260200160058201548152602001600682015481526020016007820154815260200160088201548152505092505050919050565b6060816000805b60008054905081101561085257600081815481106107d4576107d3612c56565b5b906000526020600020016040516020016107ee9190612d94565b60405160208183030381529060405280519060200120836040516020016108159190612bdc565b604051602081830303815290604052805190602001201461083f57818061083b90612cb4565b9250505b808061084a90612cb4565b9150506107b3565b506000805490508103610891576040517fc1c7f9a100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002846040516108a19190612bdc565b9081526020016040518091039020805480602002602001604051908101604052809291908181526020016000905b8282101561099c57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820160009054906101000a900460ff1660068111156109775761097661288b565b5b60068111156109895761098861288b565b5b81525050815260200190600101906108cf565b5050505092505050919050565b806000805b600080549050811015610a4d57600081815481106109cf576109ce612c56565b5b906000526020600020016040516020016109e99190612d94565b6040516020818303038152906040528051906020012083604051602001610a109190612bdc565b6040516020818303038152906040528051906020012014610a3a578180610a3690612cb4565b9250505b8080610a4590612cb4565b9150506109ae565b506000805490508103610a8c576040517fc1c7f9a100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610a97846111d7565b905060028085604051610aaa9190612bdc565b90815260200160405180910390208281548110610aca57610ac9612c56565b5b906000526020600020906003020160020160006101000a81548160ff02191690836006811115610afd57610afc61288b565b5b02179055506000610b0d856103e7565b90506001600286604051610b219190612bdc565b90815260200160405180910390208281548110610b4157610b40612c56565b5b906000526020600020906003020160020160006101000a81548160ff02191690836006811115610b7457610b7361288b565b5b021790555060005b600286604051610b8c9190612bdc565b908152602001604051809103902080549050811015610caa5760006006811115610bb957610bb861288b565b5b600287604051610bc99190612bdc565b90815260200160405180910390208281548110610be957610be8612c56565b5b906000526020600020906003020160020160009054906101000a900460ff166006811115610c1a57610c1961288b565b5b03610c975760036006811115610c3357610c3261288b565b5b600287604051610c439190612bdc565b90815260200160405180910390208281548110610c6357610c62612c56565b5b906000526020600020906003020160020160009054906101000a900460ff166006811115610c9457610c9361288b565b5b50505b8080610ca290612cb4565b915050610b7c565b507f9d8c4bda31461c9a9300697c59318bac02cc954037b51c5db3ae52347042d2bc85604051610cda9190612df5565b60405180910390a15050505050565b610cfb8a8a8a8a8a8a8a8a8a8a611fa5565b15610e6057610d0861235d565b8981600001818152505088816020018181525050878160400181815250508681606001818152505085816080018181525050848160a0018181525050838160c0018181525050828160e001818152505081816101000181815250508060018c604051610d749190612bdc565b9081526020016040518091039020600082015181600001556020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005015560c0820151816006015560e08201518160070155610100820151816008015590505060008b908060018154018082558091505060019003906000526020600020016000909190919091509081610e149190612fae565b507fe5549b694e8ea655c231f5d255127cf7c0f14997a411ccdf6577e3b9911674428b8b8b8b8b8b8b8b8b8b604051610e569a99989796959493929190613080565b60405180910390a1505b50505050505050505050565b81600080600090505b600080549050811015610ea3578180610e8d90612cb4565b9250508080610e9b90612cb4565b915050610e75565b506000805490508103610ee2576040517f6b9108f800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8342600182604051610ef49190612bdc565b9081526020016040518091039020600201541080610f32575042600182604051610f1e9190612bdc565b908152602001604051809103902060030154115b15610f69576040517f355d234800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b846000805b600283604051610f7e9190612bdc565b90815260200160405180910390208054905081101561104d573373ffffffffffffffffffffffffffffffffffffffff16600284604051610fbe9190612bdc565b90815260200160405180910390208281548110610fde57610fdd612c56565b5b906000526020600020906003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461103a57818061103690612cb4565b9250505b808061104590612cb4565b915050610f6e565b5060028260405161105e9190612bdc565b90815260200160405180910390208054905081036110a8576040517f2ffd4a0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b86866001826040516110ba9190612bdc565b90815260200160405180910390206006015481108061110c57506001826040516110e49190612bdc565b9081526020016040518091039020600801546110ff83611518565b6111099190613123565b81105b15611143576040517fabdda60f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8760028a6040516111549190612bdc565b908152602001604051809103902061116b8b612271565b8154811061117c5761117b612c56565b5b9060005260206000209060030201600101819055507fe886416816c234ad984c20a40b4480b0e1dc31a4da3edbab50626e575b7dbe0589338a6040516111c493929190613166565b60405180910390a1505050505050505050565b60008060005b6002846040516111ed9190612bdc565b9081526020016040518091039020805490508110156112e5576002846040516112169190612bdc565b9081526020016040518091039020818154811061123657611235612c56565b5b906000526020600020906003020160010154821080156112c95750600460068111156112655761126461288b565b5b6002856040516112759190612bdc565b9081526020016040518091039020828154811061129557611294612c56565b5b906000526020600020906003020160020160009054906101000a900460ff1660068111156112c6576112c561288b565b5b14155b156112d2578091505b80806112dd90612cb4565b9150506111dd565b5080915050919050565b80600260068111156113045761130361288b565b5b6002826040516113149190612bdc565b908152602001604051809103902061132b83612271565b8154811061133c5761133b612c56565b5b906000526020600020906003020160020160009054906101000a900460ff16600681111561136d5761136c61288b565b5b146113a4576040517f7963b56f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8160006001826040516113b79190612bdc565b9081526020016040518091039020600601546002836040516113d99190612bdc565b90815260200160405180910390206113f084612271565b8154811061140157611400612c56565b5b90600052602060002090600302016001015461141d9190612c22565b90508034146114655781816040517f1abcbf8700000000000000000000000000000000000000000000000000000000815260040161145c9291906131a4565b60405180910390fd5b60066002856040516114779190612bdc565b908152602001604051809103902061148e86612271565b8154811061149f5761149e612c56565b5b906000526020600020906003020160020160006101000a81548160ff021916908360068111156114d2576114d161288b565b5b02179055507f2951e1d2e4f526e0e6f563c03b8940da36e4616bbc2ec1933479f7d649e0016484333460405161150a93929190613166565b60405180910390a150505050565b6000806000905060005b6002846040516115329190612bdc565b90815260200160405180910390208054905081101561166b578160028560405161155c9190612bdc565b9081526020016040518091039020828154811061157c5761157b612c56565b5b90600052602060002090600302016001015411801561160e5750600460068111156115aa576115a961288b565b5b6002856040516115ba9190612bdc565b908152602001604051809103902082815481106115da576115d9612c56565b5b906000526020600020906003020160020160009054906101000a900460ff16600681111561160b5761160a61288b565b5b14155b15611658576002846040516116239190612bdc565b9081526020016040518091039020818154811061164357611642612c56565b5b90600052602060002090600302016001015491505b808061166390612cb4565b915050611522565b5080915050919050565b8060005b60008054905081101561173b576000818154811061169a57611699612c56565b5b906000526020600020016040516020016116b49190612d94565b60405160208183030381529060405280519060200120826040516020016116db9190612bdc565b6040516020818303038152906040528051906020012003611728576040517f6b9108f800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b808061173390612cb4565b915050611679565b50814260018260405161174e9190612bdc565b908152602001604051809103902060000154108061178c5750426001826040516117789190612bdc565b908152602001604051809103902060010154115b156117c3576040517f60acd97900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006001846040516117d59190612bdc565b9081526020016040518091039020600601546001856040516117f79190612bdc565b9081526020016040518091039020600501546118139190613123565b90508034101561185c5783816040517f2aac8ad50000000000000000000000000000000000000000000000000000000081526004016118539291906131a4565b60405180910390fd5b3360028560405161186d9190612bdc565b908152602001604051809103902060028660405161188b9190612bdc565b908152602001604051809103902080549050815481106118ae576118ad612c56565b5b906000526020600020906003020160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600060028560405161190f9190612bdc565b908152602001604051809103902060028660405161192d9190612bdc565b908152602001604051809103902080549050815481106119505761194f612c56565b5b906000526020600020906003020160020160006101000a81548160ff021916908360068111156119835761198261288b565b5b02179055507f3d91795a8d93a82cebcc92ac50f202b5aa73244f00228e1cc9cbdafbbdf8fe9b84336002876040516119bb9190612bdc565b90815260200160405180910390206002886040516119d99190612bdc565b908152602001604051809103902080549050815481106119fc576119fb612c56565b5b906000526020600020906003020160020160009054906101000a900460ff16604051611a2a939291906131e3565b60405180910390a150505050565b80600281604051611a499190612bdc565b9081526020016040518091039020611a60826111d7565b81548110611a7157611a70612c56565b5b906000526020600020906003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1603611b4857600061012c61ffff16600183604051611aee9190612bdc565b908152602001604051809103902060030154611b0a9190613123565b905042811115611b46576040517f49107ff700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505b600281604051611b589190612bdc565b9081526020016040518091039020611b6f826103e7565b81548110611b8057611b7f612c56565b5b906000526020600020906003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1603611c63576000600261012c611bf5919061322f565b61ffff16600183604051611c099190612bdc565b908152602001604051809103902060030154611c259190613123565b905042811115611c61576040517f49107ff700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505b8160026006811115611c7857611c7761288b565b5b600282604051611c889190612bdc565b9081526020016040518091039020611c9f83612271565b81548110611cb057611caf612c56565b5b906000526020600020906003020160020160009054906101000a900460ff166006811115611ce157611ce061288b565b5b14611d18576040517f7963b56f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600283604051611d289190612bdc565b9081526020016040518091039020611d3f846111d7565b81548110611d5057611d4f612c56565b5b906000526020600020906003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1603611e9c576004600284604051611dc69190612bdc565b9081526020016040518091039020611ddd856111d7565b81548110611dee57611ded612c56565b5b906000526020600020906003020160020160006101000a81548160ff02191690836006811115611e2157611e2061288b565b5b021790555060028084604051611e379190612bdc565b9081526020016040518091039020611e4e856103e7565b81548110611e5f57611e5e612c56565b5b906000526020600020906003020160020160006101000a81548160ff02191690836006811115611e9257611e9161288b565b5b0217905550611f0f565b6004600284604051611eae9190612bdc565b9081526020016040518091039020611ec5856103e7565b81548110611ed657611ed5612c56565b5b906000526020600020906003020160020160006101000a81548160ff02191690836006811115611f0957611f0861288b565b5b02179055505b7f87182aaac5dd5ec80140f092551157b9dc8f704ab22b683dc628b3099676d7308333600286604051611f429190612bdc565b9081526020016040518091039020611f5987612271565b81548110611f6a57611f69612c56565b5b906000526020600020906003020160020160009054906101000a900460ff16604051611f98939291906131e3565b60405180910390a1505050565b60008a60005b60008054905081101561206d5760008181548110611fcc57611fcb612c56565b5b90600052602060002001604051602001611fe69190612d94565b604051602081830303815290604052805190602001208260405160200161200d9190612bdc565b604051602081830303815290604052805190602001200361205a576040517f6b9108f800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b808061206590612cb4565b915050611fab565b508a8a4282108061207e5750808210155b156120b5576040517f5e83d5f800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8b8b8082106120f0576040517f7a9971e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8c8c80821061212b576040517fe2049fa500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8d8d808210612166576040517fcc2116a000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8d600081116121a1576040517fb25c88c500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8d600081116121dc576040517fb0f07a6300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8d60008111612217576040517ffb833a9900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8d60008111612252576040517fa9ed13a300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60019d50505050505050505050505050509a9950505050505050505050565b600080600090505b6002836040516122899190612bdc565b908152602001604051809103902080549050811015612352573373ffffffffffffffffffffffffffffffffffffffff166002846040516122c99190612bdc565b908152602001604051809103902082815481106122e9576122e8612c56565b5b906000526020600020906003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361233f5780915050612358565b808061234a90612cb4565b915050612279565b50600090505b919050565b6040518061012001604052806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561240f5780820151818401526020810190506123f4565b60008484015250505050565b6000601f19601f8301169050919050565b6000612437826123d5565b61244181856123e0565b93506124518185602086016123f1565b61245a8161241b565b840191505092915050565b6000612471838361242c565b905092915050565b6000602082019050919050565b6000612491826123a9565b61249b81856123b4565b9350836020820285016124ad856123c5565b8060005b858110156124e957848403895281516124ca8582612465565b94506124d583612479565b925060208a019950506001810190506124b1565b50829750879550505050505092915050565b600060208201905081810360008301526125158184612486565b905092915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6125738261241b565b810181811067ffffffffffffffff821117156125925761259161253b565b5b80604052505050565b60006125a561251d565b90506125b1828261256a565b919050565b600067ffffffffffffffff8211156125d1576125d061253b565b5b6125da8261241b565b9050602081019050919050565b82818337600083830152505050565b6000612609612604846125b6565b61259b565b90508281526020810184848401111561262557612624612536565b5b6126308482856125e7565b509392505050565b600082601f83011261264d5761264c612531565b5b813561265d8482602086016125f6565b91505092915050565b60006020828403121561267c5761267b612527565b5b600082013567ffffffffffffffff81111561269a5761269961252c565b5b6126a684828501612638565b91505092915050565b6000819050919050565b6126c2816126af565b82525050565b60006020820190506126dd60008301846126b9565b92915050565b6126ec816126af565b81146126f757600080fd5b50565b600081359050612709816126e3565b92915050565b60006020828403121561272557612724612527565b5b6000612733848285016126fa565b91505092915050565b612745816126af565b82525050565b61012082016000820151612762600085018261273c565b506020820151612775602085018261273c565b506040820151612788604085018261273c565b50606082015161279b606085018261273c565b5060808201516127ae608085018261273c565b5060a08201516127c160a085018261273c565b5060c08201516127d460c085018261273c565b5060e08201516127e760e085018261273c565b506101008201516127fc61010085018261273c565b50505050565b600061012082019050612818600083018461274b565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006128758261284a565b9050919050565b6128858161286a565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600781106128cb576128ca61288b565b5b50565b60008190506128dc826128ba565b919050565b60006128ec826128ce565b9050919050565b6128fc816128e1565b82525050565b606082016000820151612918600085018261287c565b50602082015161292b602085018261273c565b50604082015161293e60408501826128f3565b50505050565b60006129508383612902565b60608301905092915050565b6000602082019050919050565b60006129748261281e565b61297e8185612829565b93506129898361283a565b8060005b838110156129ba5781516129a18882612944565b97506129ac8361295c565b92505060018101905061298d565b5085935050505092915050565b600060208201905081810360008301526129e18184612969565b905092915050565b6000806000806000806000806000806101408b8d031215612a0d57612a0c612527565b5b60008b013567ffffffffffffffff811115612a2b57612a2a61252c565b5b612a378d828e01612638565b9a50506020612a488d828e016126fa565b9950506040612a598d828e016126fa565b9850506060612a6a8d828e016126fa565b9750506080612a7b8d828e016126fa565b96505060a0612a8c8d828e016126fa565b95505060c0612a9d8d828e016126fa565b94505060e0612aae8d828e016126fa565b935050610100612ac08d828e016126fa565b925050610120612ad28d828e016126fa565b9150509295989b9194979a5092959850565b60008060408385031215612afb57612afa612527565b5b600083013567ffffffffffffffff811115612b1957612b1861252c565b5b612b2585828601612638565b9250506020612b36858286016126fa565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680612b8757607f821691505b602082108103612b9a57612b99612b40565b5b50919050565b600081905092915050565b6000612bb6826123d5565b612bc08185612ba0565b9350612bd08185602086016123f1565b80840191505092915050565b6000612be88284612bab565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612c2d826126af565b9150612c38836126af565b9250828203905081811115612c5057612c4f612bf3565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b6000612cbf826126af565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612cf157612cf0612bf3565b5b600182019050919050565b60008190508160005260206000209050919050565b60008154612d1e81612b6f565b612d288186612ba0565b94506001821660008114612d435760018114612d5857612d8b565b60ff1983168652811515820286019350612d8b565b612d6185612cfc565b60005b83811015612d8357815481890152600182019150602081019050612d64565b838801955050505b50505092915050565b6000612da08284612d11565b915081905092915050565b600082825260208201905092915050565b6000612dc7826123d5565b612dd18185612dab565b9350612de18185602086016123f1565b612dea8161241b565b840191505092915050565b60006020820190508181036000830152612e0f8184612dbc565b905092915050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302612e647fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612e27565b612e6e8683612e27565b95508019841693508086168417925050509392505050565b6000819050919050565b6000612eab612ea6612ea1846126af565b612e86565b6126af565b9050919050565b6000819050919050565b612ec583612e90565b612ed9612ed182612eb2565b848454612e34565b825550505050565b600090565b612eee612ee1565b612ef9818484612ebc565b505050565b5b81811015612f1d57612f12600082612ee6565b600181019050612eff565b5050565b601f821115612f6257612f3381612cfc565b612f3c84612e17565b81016020851015612f4b578190505b612f5f612f5785612e17565b830182612efe565b50505b505050565b600082821c905092915050565b6000612f8560001984600802612f67565b1980831691505092915050565b6000612f9e8383612f74565b9150826002028217905092915050565b612fb7826123d5565b67ffffffffffffffff811115612fd057612fcf61253b565b5b612fda8254612b6f565b612fe5828285612f21565b600060209050601f8311600181146130185760008415613006578287015190505b6130108582612f92565b865550613078565b601f19841661302686612cfc565b60005b8281101561304e57848901518255600182019150602085019450602081019050613029565b8683101561306b5784890151613067601f891682612f74565b8355505b6001600288020188555050505b505050505050565b600061014082019050818103600083015261309b818d612dbc565b90506130aa602083018c6126b9565b6130b7604083018b6126b9565b6130c4606083018a6126b9565b6130d160808301896126b9565b6130de60a08301886126b9565b6130eb60c08301876126b9565b6130f860e08301866126b9565b6131066101008301856126b9565b6131146101208301846126b9565b9b9a5050505050505050505050565b600061312e826126af565b9150613139836126af565b925082820190508082111561315157613150612bf3565b5b92915050565b6131608161286a565b82525050565b600060608201905081810360008301526131808186612dbc565b905061318f6020830185613157565b61319c60408301846126b9565b949350505050565b600060408201905081810360008301526131be8185612dbc565b90506131cd60208301846126b9565b9392505050565b6131dd816128e1565b82525050565b600060608201905081810360008301526131fd8186612dbc565b905061320c6020830185613157565b61321960408301846131d4565b949350505050565b600061ffff82169050919050565b600061323a82613221565b915061324583613221565b925082820261325381613221565b915080821461326557613264612bf3565b5b509291505056fea2646970667358221220a5155bd153e898e01d20d2f485af15d5135e4073d1faf43352f009be7e65b95e64736f6c63430008110033",
  "devdoc": {
    "author": "Nguyen Thanh Trung",
    "details": "This implements the auctioneer job",
    "kind": "dev",
    "methods": {},
    "title": "Decentralized Auction",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "This contract is for Decentralized Auction Platform",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 53,
        "contract": "contracts/Auction.sol:Auction",
        "label": "s_auctionList",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_string_storage)dyn_storage"
      },
      {
        "astId": 166,
        "contract": "contracts/Auction.sol:Auction",
        "label": "s_AuctionInformations",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_string_memory_ptr,t_struct(AuctionInformation)83_storage)"
      },
      {
        "astId": 172,
        "contract": "contracts/Auction.sol:Auction",
        "label": "s_BidInformations",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_string_memory_ptr,t_array(t_struct(BidInformation)91_storage)dyn_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_string_storage)dyn_storage": {
        "base": "t_string_storage",
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(BidInformation)91_storage)dyn_storage": {
        "base": "t_struct(BidInformation)91_storage",
        "encoding": "dynamic_array",
        "label": "struct Auction.BidInformation[]",
        "numberOfBytes": "32"
      },
      "t_enum(BidderState)64": {
        "encoding": "inplace",
        "label": "enum Auction.BidderState",
        "numberOfBytes": "1"
      },
      "t_mapping(t_string_memory_ptr,t_array(t_struct(BidInformation)91_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct Auction.BidInformation[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(BidInformation)91_storage)dyn_storage"
      },
      "t_mapping(t_string_memory_ptr,t_struct(AuctionInformation)83_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct Auction.AuctionInformation)",
        "numberOfBytes": "32",
        "value": "t_struct(AuctionInformation)83_storage"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(AuctionInformation)83_storage": {
        "encoding": "inplace",
        "label": "struct Auction.AuctionInformation",
        "members": [
          {
            "astId": 66,
            "contract": "contracts/Auction.sol:Auction",
            "label": "startRegistrationTime",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 68,
            "contract": "contracts/Auction.sol:Auction",
            "label": "endRegistrationTime",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 70,
            "contract": "contracts/Auction.sol:Auction",
            "label": "startAuctionTime",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 72,
            "contract": "contracts/Auction.sol:Auction",
            "label": "endAuctionTime",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 74,
            "contract": "contracts/Auction.sol:Auction",
            "label": "duePaymentTime",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 76,
            "contract": "contracts/Auction.sol:Auction",
            "label": "registrationFee",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 78,
            "contract": "contracts/Auction.sol:Auction",
            "label": "depositAmount",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 80,
            "contract": "contracts/Auction.sol:Auction",
            "label": "startBid",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          },
          {
            "astId": 82,
            "contract": "contracts/Auction.sol:Auction",
            "label": "priceStep",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "288"
      },
      "t_struct(BidInformation)91_storage": {
        "encoding": "inplace",
        "label": "struct Auction.BidInformation",
        "members": [
          {
            "astId": 85,
            "contract": "contracts/Auction.sol:Auction",
            "label": "bidder",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 87,
            "contract": "contracts/Auction.sol:Auction",
            "label": "bidAmount",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 90,
            "contract": "contracts/Auction.sol:Auction",
            "label": "bidderState",
            "offset": 0,
            "slot": "2",
            "type": "t_enum(BidderState)64"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}