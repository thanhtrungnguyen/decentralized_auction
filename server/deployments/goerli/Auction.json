{
  "address": "0x05D02d75B4c73f126c368bF21592578A2328Dbf4",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Auction__AlreadyRegisteredBidder",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__ConfirmationTimeout",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__InvalidAuctionId",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__InvalidAuctionTime",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__InvalidBidAmount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__InvalidDepositAmount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__InvalidDuePaymentTime",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__InvalidPriceStep",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__InvalidRegistrationFee",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__InvalidRegistrationTime",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__InvalidStartAuctionTime",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__InvalidStartBid",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__NotExistAuctionId",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__NotRegisteredBidder",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__NotWinnerOfAuction",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__OutOfAuctionTime",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__OutOfRegistrationTime",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "requirePaymentAmount",
          "type": "uint256"
        }
      ],
      "name": "Auction__RequireAmountToPaymentNotMet",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "requireAmountToRegister",
          "type": "uint256"
        }
      ],
      "name": "Auction__RequireAmountToRegisterNotMet",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "bidder",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "enum Auction.BidderState",
          "name": "bidderState",
          "type": "uint8"
        }
      ],
      "name": "CanceledAuctionResult",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        }
      ],
      "name": "ClosedAuction",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "bidder",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "paidAmount",
          "type": "uint256"
        }
      ],
      "name": "ClosedAuctionSucessfully",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startRegistrationTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endRegistrationTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startAuctionTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endAuctionTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "duePaymentTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "registrationFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "depositAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startBid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "priceStep",
          "type": "uint256"
        }
      ],
      "name": "CreatedAuction",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "bidder",
          "type": "address"
        }
      ],
      "name": "Paidback",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "bidder",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "bidAmount",
          "type": "uint256"
        }
      ],
      "name": "PlacedBid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "bidder",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "enum Auction.BidderState",
          "name": "bidderState",
          "type": "uint8"
        }
      ],
      "name": "RegisteredToBid",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        }
      ],
      "name": "cancelAuctionResult",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        }
      ],
      "name": "closeAuction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "startRegistrationTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endRegistrationTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startAuctionTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endAuctionTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "duePaymentTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "registrationFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "depositAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startBid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "priceStep",
          "type": "uint256"
        }
      ],
      "name": "createAuction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        }
      ],
      "name": "getAuctionInformationById",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startRegistrationTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endRegistrationTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "startAuctionTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endAuctionTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duePaymentTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "registrationFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "depositAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "startBid",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "priceStep",
              "type": "uint256"
            }
          ],
          "internalType": "struct Auction.AuctionInformation",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        }
      ],
      "name": "getBidInformationByAuctionId",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "bidder",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "bidAmount",
              "type": "uint256"
            },
            {
              "internalType": "enum Auction.BidderState",
              "name": "bidderState",
              "type": "uint8"
            }
          ],
          "internalType": "struct Auction.BidInformation[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        }
      ],
      "name": "getHighestBidOfAuction",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        }
      ],
      "name": "getIndexOfHighestBidOfAuction",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        }
      ],
      "name": "getIndexOfSecondWinnerOfAuction",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getListAuctionId",
      "outputs": [
        {
          "internalType": "string[]",
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        }
      ],
      "name": "payment",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "bidAmount",
          "type": "uint256"
        }
      ],
      "name": "placeBid",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "receiver",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        }
      ],
      "name": "registerToBid",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xda6d772e8a601e345a4092bee8f4cf1d3fe9b9ead9d7087c810d417b9300abad",
  "receipt": {
    "to": null,
    "from": "0x26594a6109a5154C8E10765C5f15F4B7F54e0420",
    "contractAddress": "0x05D02d75B4c73f126c368bF21592578A2328Dbf4",
    "transactionIndex": 48,
    "gasUsed": "3060719",
    "logsBloom": "0x
    "blockHash": "0xce0c09607f6857a71b236484c3b2417ce5d294c490272f1ea6dbce8a08e0e72f",
    "transactionHash": "0xda6d772e8a601e345a4092bee8f4cf1d3fe9b9ead9d7087c810d417b9300abad",
    "logs": [],
    "blockNumber": 8120848,
    "cumulativeGasUsed": "13724051",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 2,
  "solcInputHash": "c4a165020856063c843ddce54280765a",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Auction__AlreadyRegisteredBidder\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__ConfirmationTimeout\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__InvalidAuctionId\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__InvalidAuctionTime\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__InvalidBidAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__InvalidDepositAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__InvalidDuePaymentTime\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__InvalidPriceStep\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__InvalidRegistrationFee\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__InvalidRegistrationTime\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__InvalidStartAuctionTime\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__InvalidStartBid\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__NotExistAuctionId\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__NotRegisteredBidder\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__NotWinnerOfAuction\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__OutOfAuctionTime\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__OutOfRegistrationTime\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"requirePaymentAmount\",\"type\":\"uint256\"}],\"name\":\"Auction__RequireAmountToPaymentNotMet\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requireAmountToRegister\",\"type\":\"uint256\"}],\"name\":\"Auction__RequireAmountToRegisterNotMet\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum Auction.BidderState\",\"name\":\"bidderState\",\"type\":\"uint8\"}],\"name\":\"CanceledAuctionResult\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"}],\"name\":\"ClosedAuction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paidAmount\",\"type\":\"uint256\"}],\"name\":\"ClosedAuctionSucessfully\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startRegistrationTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endRegistrationTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startAuctionTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endAuctionTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"duePaymentTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"registrationFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"depositAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startBid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"priceStep\",\"type\":\"uint256\"}],\"name\":\"CreatedAuction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"}],\"name\":\"Paidback\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bidAmount\",\"type\":\"uint256\"}],\"name\":\"PlacedBid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum Auction.BidderState\",\"name\":\"bidderState\",\"type\":\"uint8\"}],\"name\":\"RegisteredToBid\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"}],\"name\":\"cancelAuctionResult\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"}],\"name\":\"closeAuction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"startRegistrationTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endRegistrationTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startAuctionTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endAuctionTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duePaymentTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"registrationFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"depositAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startBid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priceStep\",\"type\":\"uint256\"}],\"name\":\"createAuction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"}],\"name\":\"getAuctionInformationById\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startRegistrationTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endRegistrationTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startAuctionTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endAuctionTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duePaymentTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"registrationFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"depositAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startBid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priceStep\",\"type\":\"uint256\"}],\"internalType\":\"struct Auction.AuctionInformation\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"}],\"name\":\"getBidInformationByAuctionId\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"bidAmount\",\"type\":\"uint256\"},{\"internalType\":\"enum Auction.BidderState\",\"name\":\"bidderState\",\"type\":\"uint8\"}],\"internalType\":\"struct Auction.BidInformation[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"}],\"name\":\"getHighestBidOfAuction\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"}],\"name\":\"getIndexOfHighestBidOfAuction\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"}],\"name\":\"getIndexOfSecondWinnerOfAuction\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getListAuctionId\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"}],\"name\":\"payment\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"bidAmount\",\"type\":\"uint256\"}],\"name\":\"placeBid\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiver\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"}],\"name\":\"registerToBid\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Nguyen Thanh Trung\",\"details\":\"This implements the auctioneer job\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Decentralized Auction\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This contract is for Decentralized Auction Platform\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Auction.sol\":\"Auction\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Auction.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.17;\\r\\n\\r\\n// import \\\"hardhat/console.sol\\\";\\r\\n\\r\\nerror Auction__InvalidRegistrationTime();\\r\\nerror Auction__InvalidAuctionTime();\\r\\nerror Auction__InvalidDuePaymentTime();\\r\\nerror Auction__InvalidStartAuctionTime();\\r\\nerror Auction__InvalidRegistrationFee();\\r\\nerror Auction__InvalidDepositAmount();\\r\\nerror Auction__InvalidStartBid();\\r\\nerror Auction__InvalidPriceStep();\\r\\nerror Auction__InvalidDatetime();\\r\\nerror Auction__InvalidAuctionId();\\r\\nerror Auction__OutOfRegistrationTime();\\r\\nerror Auction__RequireAmountToRegisterNotMet(string auctionId, uint256 value, uint256 requireAmountToRegister);\\r\\nerror Auction__OutOfAuctionTime();\\r\\nerror Auction__InvalidBidAmount();\\r\\nerror Auction__NotRegisteredBidder();\\r\\nerror Auction__NotExistAuctionId();\\r\\nerror Auction__ConfirmationTimeout();\\r\\nerror Auction__NotWinnerOfAuction();\\r\\nerror Auction__TransferFailed();\\r\\nerror Auction__RequireAmountToPaymentNotMet(string auctionId, uint256 requirePaymentAmount);\\r\\nerror Auction__NotExistAuction();\\r\\nerror Auction__NotOwner();\\r\\nerror Auction__AlreadyRegisteredBidder();\\r\\n\\r\\n/**@title Decentralized Auction\\r\\n * @author Nguyen Thanh Trung\\r\\n * @notice This contract is for Decentralized Auction Platform\\r\\n * @dev This implements the auctioneer job\\r\\n */\\r\\ncontract Auction {\\r\\n    string[] private s_auctionList;\\r\\n    address private immutable i_owner;\\r\\n    uint16 private constant CONFIRMATION_TIME = 300;\\r\\n    uint128 f = 34000000000000000000;\\r\\n    enum BidderState {\\r\\n        BIDING, //registered or bidding\\r\\n        WAITING, //top 2 bidder who is watting for top 1 confirm result\\r\\n        WIN, //winner\\r\\n        LOSE, // top 3 or lower\\r\\n        CANCEL, //cencel bid or auction result\\r\\n        PAIDBACK, //paid back deposit\\r\\n        PAID // payment complete\\r\\n    }\\r\\n\\r\\n    struct AuctionInformation {\\r\\n        // bytes10\\r\\n        uint256 startRegistrationTime;\\r\\n        uint256 endRegistrationTime;\\r\\n        uint256 startAuctionTime;\\r\\n        uint256 endAuctionTime;\\r\\n        uint256 duePaymentTime;\\r\\n        uint256 registrationFee;\\r\\n        uint256 depositAmount;\\r\\n        uint256 startBid;\\r\\n        uint256 priceStep;\\r\\n    }\\r\\n\\r\\n    constructor() {\\r\\n        i_owner = msg.sender;\\r\\n    }\\r\\n\\r\\n    struct BidInformation {\\r\\n        address bidder;\\r\\n        uint256 bidAmount;\\r\\n        BidderState bidderState;\\r\\n    }\\r\\n\\r\\n    event CreatedAuction(\\r\\n        string auctionId,\\r\\n        uint256 startRegistrationTime,\\r\\n        uint256 endRegistrationTime,\\r\\n        uint256 startAuctionTime,\\r\\n        uint256 endAuctionTime,\\r\\n        uint256 duePaymentTime,\\r\\n        uint256 registrationFee,\\r\\n        uint256 depositAmount,\\r\\n        uint256 startBid,\\r\\n        uint256 priceStep\\r\\n    );\\r\\n    event PlacedBid(string auctionId, address bidder, uint256 bidAmount);\\r\\n    event RegisteredToBid(string auctionId, address bidder, BidderState bidderState);\\r\\n    event ClosedAuction(string auctionId);\\r\\n    event CanceledAuctionResult(string auctionId, address bidder, BidderState bidderState);\\r\\n    event Paidback(string auctionId, address bidder);\\r\\n    event ClosedAuctionSucessfully(string auctionId, address bidder, uint256 paidAmount);\\r\\n\\r\\n    mapping(string => AuctionInformation) private s_auctionInformations;\\r\\n    mapping(string => BidInformation[]) private s_bidInformations;\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        if (msg.sender != i_owner) revert Auction__NotOwner();\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isVailidAuctionId(string memory auctionId) {\\r\\n        for (uint256 i = 0; i < s_auctionList.length; i++) {\\r\\n            if (keccak256(abi.encodePacked(auctionId)) == keccak256(abi.encodePacked(s_auctionList[i]))) {\\r\\n                revert Auction__InvalidAuctionId();\\r\\n            }\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isExistAuctionId(string memory auctionId) {\\r\\n        uint256 count = 0;\\r\\n        for (uint256 i = 0; i < s_auctionList.length; i++) {\\r\\n            if (keccak256(abi.encodePacked(auctionId)) != keccak256(abi.encodePacked(s_auctionList[i]))) {\\r\\n                count++;\\r\\n            }\\r\\n        }\\r\\n        if (count == s_auctionList.length) {\\r\\n            revert Auction__NotExistAuctionId();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isValidRegistrationTime(uint256 startRegistrationTime, uint256 endRegistrationTime) {\\r\\n        if (startRegistrationTime < block.timestamp || startRegistrationTime >= endRegistrationTime) {\\r\\n            revert Auction__InvalidRegistrationTime();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isValidStartAuctionTime(uint256 endRegistrationTime, uint256 startAuctionTime) {\\r\\n        if (endRegistrationTime >= startAuctionTime) {\\r\\n            revert Auction__InvalidStartAuctionTime();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isValidAuctionTime(uint256 startAuctionTime, uint256 endAuctionTime) {\\r\\n        if (startAuctionTime >= endAuctionTime) {\\r\\n            revert Auction__InvalidAuctionTime();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isValidDuePaymentTime(uint256 endAuctionTime, uint256 duePaymentTime) {\\r\\n        if (endAuctionTime >= duePaymentTime) {\\r\\n            revert Auction__InvalidDuePaymentTime();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isValidRegistrationFee(uint256 registrationFee) {\\r\\n        if (registrationFee <= 0) {\\r\\n            revert Auction__InvalidRegistrationFee();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isValidDepositAmount(uint256 depositAmount) {\\r\\n        if (depositAmount <= 0) {\\r\\n            revert Auction__InvalidDepositAmount();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isValidStartBid(uint256 depositAmount) {\\r\\n        if (depositAmount <= 0) {\\r\\n            revert Auction__InvalidStartBid();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isValidPriceStep(uint256 depositAmount) {\\r\\n        if (depositAmount <= 0) {\\r\\n            revert Auction__InvalidPriceStep();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isRegistrationTime(string memory auctionId) {\\r\\n        if (\\r\\n            s_auctionInformations[auctionId].startRegistrationTime > block.timestamp ||\\r\\n            s_auctionInformations[auctionId].endRegistrationTime < block.timestamp\\r\\n        ) {\\r\\n            revert Auction__OutOfRegistrationTime();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isAuctionTime(string memory auctionId) {\\r\\n        if (\\r\\n            s_auctionInformations[auctionId].startAuctionTime > block.timestamp || s_auctionInformations[auctionId].endAuctionTime < block.timestamp\\r\\n        ) {\\r\\n            revert Auction__OutOfAuctionTime();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isValidBidAmount(string memory auctionId, uint256 bidAmount) {\\r\\n        if (\\r\\n            bidAmount < s_auctionInformations[auctionId].startBid ||\\r\\n            bidAmount < getHighestBidOfAuction(auctionId) + s_auctionInformations[auctionId].priceStep\\r\\n        ) {\\r\\n            revert Auction__InvalidBidAmount();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isRegisteredBidder(string memory auctionId) {\\r\\n        uint256 count = 0;\\r\\n        for (uint256 i = 0; i < s_bidInformations[auctionId].length; i++) {\\r\\n            if (s_bidInformations[auctionId][i].bidder != msg.sender) {\\r\\n                count++;\\r\\n            }\\r\\n        }\\r\\n        if (count == s_bidInformations[auctionId].length) {\\r\\n            revert Auction__NotRegisteredBidder();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n    modifier isAlreadyRegisteredBidder(string memory auctionId) {\\r\\n        for (uint256 i = 0; i < s_bidInformations[auctionId].length; i++) {\\r\\n            if (s_bidInformations[auctionId][i].bidder == msg.sender) {\\r\\n                revert Auction__AlreadyRegisteredBidder();\\r\\n            }\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n    modifier isConfirmationTime(string memory auctionId) {\\r\\n        if (msg.sender == s_bidInformations[auctionId][getIndexOfHighestBidOfAuction(auctionId)].bidder) {\\r\\n            uint256 dueConfirmationTime = s_auctionInformations[auctionId].endAuctionTime + CONFIRMATION_TIME;\\r\\n            if (dueConfirmationTime > block.timestamp) {\\r\\n                revert Auction__ConfirmationTimeout();\\r\\n            }\\r\\n        }\\r\\n        if (msg.sender == s_bidInformations[auctionId][getIndexOfSecondWinnerOfAuction(auctionId)].bidder) {\\r\\n            uint256 dueConfirmationTime = s_auctionInformations[auctionId].endAuctionTime + CONFIRMATION_TIME * 2;\\r\\n            if (dueConfirmationTime > block.timestamp) {\\r\\n                revert Auction__ConfirmationTimeout();\\r\\n            }\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    //check sender is winner or not\\r\\n    modifier isWinnerOfAuction(string memory auctionId) {\\r\\n        if (s_bidInformations[auctionId][getIndexOfBidder(auctionId)].bidderState != BidderState.WIN) {\\r\\n            revert Auction__NotWinnerOfAuction();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function isValidatedInput(\\r\\n        string memory auctionId, //need validate\\r\\n        uint256 startRegistrationTime,\\r\\n        uint256 endRegistrationTime,\\r\\n        uint256 startAuctionTime,\\r\\n        uint256 endAuctionTime,\\r\\n        uint256 duePaymentTime,\\r\\n        uint256 registrationFee,\\r\\n        uint256 depositAmount,\\r\\n        uint256 startBid,\\r\\n        uint256 priceStep\\r\\n    )\\r\\n        internal\\r\\n        view\\r\\n        isVailidAuctionId(auctionId)\\r\\n        isValidRegistrationTime(startRegistrationTime, endRegistrationTime)\\r\\n        isValidStartAuctionTime(endRegistrationTime, startAuctionTime)\\r\\n        isValidAuctionTime(startAuctionTime, endAuctionTime)\\r\\n        isValidDuePaymentTime(endAuctionTime, duePaymentTime)\\r\\n        isValidRegistrationFee(registrationFee)\\r\\n        isValidDepositAmount(depositAmount)\\r\\n        isValidStartBid(startBid)\\r\\n        isValidPriceStep(priceStep)\\r\\n        returns (bool)\\r\\n    {\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function createAuction(\\r\\n        string memory auctionId,\\r\\n        uint256 startRegistrationTime,\\r\\n        uint256 endRegistrationTime,\\r\\n        uint256 startAuctionTime,\\r\\n        uint256 endAuctionTime,\\r\\n        uint256 duePaymentTime,\\r\\n        uint256 registrationFee,\\r\\n        uint256 depositAmount,\\r\\n        uint256 startBid,\\r\\n        uint256 priceStep\\r\\n    ) external {\\r\\n        if (\\r\\n            isValidatedInput(\\r\\n                auctionId,\\r\\n                startRegistrationTime,\\r\\n                endRegistrationTime,\\r\\n                startAuctionTime,\\r\\n                endAuctionTime,\\r\\n                duePaymentTime,\\r\\n                registrationFee,\\r\\n                depositAmount,\\r\\n                startBid,\\r\\n                priceStep\\r\\n            )\\r\\n        ) {\\r\\n            AuctionInformation memory auction;\\r\\n            auction.startRegistrationTime = startRegistrationTime;\\r\\n            auction.endRegistrationTime = endRegistrationTime;\\r\\n            auction.startAuctionTime = startAuctionTime;\\r\\n            auction.endAuctionTime = endAuctionTime;\\r\\n            auction.duePaymentTime = duePaymentTime;\\r\\n            auction.registrationFee = registrationFee;\\r\\n            auction.depositAmount = depositAmount;\\r\\n            auction.startBid = startBid;\\r\\n            auction.priceStep = priceStep;\\r\\n            s_auctionInformations[auctionId] = auction;\\r\\n            s_auctionList.push(auctionId);\\r\\n\\r\\n            emit CreatedAuction(\\r\\n                auctionId,\\r\\n                startRegistrationTime,\\r\\n                endRegistrationTime,\\r\\n                startAuctionTime,\\r\\n                endAuctionTime,\\r\\n                duePaymentTime,\\r\\n                registrationFee,\\r\\n                depositAmount,\\r\\n                startBid,\\r\\n                priceStep\\r\\n            );\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function registerToBid(string memory auctionId)\\r\\n        external\\r\\n        payable\\r\\n        isExistAuctionId(auctionId)\\r\\n        isRegistrationTime(auctionId)\\r\\n        isAlreadyRegisteredBidder(auctionId)\\r\\n    {\\r\\n        uint256 requireAmountToRegister = s_auctionInformations[auctionId].registrationFee + s_auctionInformations[auctionId].depositAmount;\\r\\n        if (msg.value != requireAmountToRegister) {\\r\\n            revert Auction__RequireAmountToRegisterNotMet(auctionId, msg.value, requireAmountToRegister);\\r\\n        }\\r\\n        BidInformation memory bidInformation;\\r\\n        bidInformation.bidder = msg.sender;\\r\\n        bidInformation.bidderState = BidderState.BIDING;\\r\\n        s_bidInformations[auctionId].push(bidInformation);\\r\\n        emit RegisteredToBid(auctionId, bidInformation.bidder, bidInformation.bidderState);\\r\\n    }\\r\\n\\r\\n    function getHighestBidOfAuction(string memory auctionId) public view returns (uint256) {\\r\\n        uint256 highestBid = 0;\\r\\n        for (uint256 i = 0; i < s_bidInformations[auctionId].length; i++) {\\r\\n            if (s_bidInformations[auctionId][i].bidAmount > highestBid && s_bidInformations[auctionId][i].bidderState != BidderState.CANCEL) {\\r\\n                highestBid = s_bidInformations[auctionId][i].bidAmount;\\r\\n            }\\r\\n        }\\r\\n        return highestBid;\\r\\n    }\\r\\n\\r\\n    //get index of bidder who is sender\\r\\n    function getIndexOfBidder(string memory auctionId) internal view returns (uint256) {\\r\\n        for (uint256 i = 0; i < s_bidInformations[auctionId].length; i++) {\\r\\n            if (s_bidInformations[auctionId][i].bidder == msg.sender) {\\r\\n                return i;\\r\\n            }\\r\\n        }\\r\\n        return 0;\\r\\n    }\\r\\n\\r\\n    function placeBid(string memory auctionId, uint256 bidAmount)\\r\\n        external\\r\\n        payable\\r\\n        isExistAuctionId(auctionId)\\r\\n        isAuctionTime(auctionId)\\r\\n        isRegisteredBidder(auctionId)\\r\\n        isValidBidAmount(auctionId, bidAmount)\\r\\n    {\\r\\n        s_bidInformations[auctionId][getIndexOfBidder(auctionId)].bidAmount = bidAmount;\\r\\n        emit PlacedBid(auctionId, msg.sender, bidAmount);\\r\\n    }\\r\\n\\r\\n    function getIndexOfHighestBidOfAuction(string memory auctionId) public view returns (uint256) {\\r\\n        uint256 highestIndex;\\r\\n        for (uint256 i = 0; i < s_bidInformations[auctionId].length; i++) {\\r\\n            if (highestIndex < s_bidInformations[auctionId][i].bidAmount && s_bidInformations[auctionId][i].bidderState != BidderState.CANCEL) {\\r\\n                highestIndex = i;\\r\\n            }\\r\\n        }\\r\\n        return highestIndex;\\r\\n    }\\r\\n\\r\\n    function closeAuction(string memory auctionId) external isExistAuctionId(auctionId) {\\r\\n        uint256 index = getIndexOfHighestBidOfAuction(auctionId);\\r\\n        s_bidInformations[auctionId][index].bidderState = BidderState.WIN;\\r\\n        uint256 index2 = getIndexOfSecondWinnerOfAuction(auctionId);\\r\\n        s_bidInformations[auctionId][index2].bidderState = BidderState.WAITING;\\r\\n        for (uint256 i = 0; i < s_bidInformations[auctionId].length; i++) {\\r\\n            if (s_bidInformations[auctionId][i].bidderState == BidderState.BIDING) {\\r\\n                s_bidInformations[auctionId][i].bidderState == BidderState.LOSE;\\r\\n            }\\r\\n        }\\r\\n        emit ClosedAuction(auctionId);\\r\\n    }\\r\\n\\r\\n    function cancelAuctionResult(string memory auctionId) external payable isConfirmationTime(auctionId) isWinnerOfAuction(auctionId) {\\r\\n        if (msg.sender == s_bidInformations[auctionId][getIndexOfHighestBidOfAuction(auctionId)].bidder) {\\r\\n            s_bidInformations[auctionId][getIndexOfHighestBidOfAuction(auctionId)].bidderState = BidderState.CANCEL;\\r\\n            s_bidInformations[auctionId][getIndexOfSecondWinnerOfAuction(auctionId)].bidderState = BidderState.WIN;\\r\\n        } else {\\r\\n            s_bidInformations[auctionId][getIndexOfSecondWinnerOfAuction(auctionId)].bidderState = BidderState.CANCEL;\\r\\n        }\\r\\n        emit CanceledAuctionResult(auctionId, msg.sender, s_bidInformations[auctionId][getIndexOfBidder(auctionId)].bidderState);\\r\\n    }\\r\\n\\r\\n    function getIndexOfSecondWinnerOfAuction(string memory auctionId) public returns (uint256) {\\r\\n        BidInformation[] storage tempBidInformation = s_bidInformations[auctionId];\\r\\n        uint256 index = getHighestBidOfAuction(auctionId);\\r\\n        require(index < tempBidInformation.length);\\r\\n        tempBidInformation[index] = tempBidInformation[tempBidInformation.length - 1];\\r\\n        tempBidInformation.pop();\\r\\n        uint256 highestIndex;\\r\\n        for (uint256 i = 0; i < tempBidInformation.length; i++) {\\r\\n            if (highestIndex < tempBidInformation[i].bidAmount) {\\r\\n                highestIndex = i;\\r\\n            }\\r\\n        }\\r\\n        return highestIndex;\\r\\n    }\\r\\n\\r\\n    function withdraw() public onlyOwner {\\r\\n        (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\r\\n        require(success);\\r\\n    }\\r\\n\\r\\n    function payback(string memory auctionId) internal {\\r\\n        uint256 depositAmount = s_auctionInformations[auctionId].depositAmount;\\r\\n        for (uint256 i = 0; i < s_bidInformations[auctionId].length; i++) {\\r\\n            if (s_bidInformations[auctionId][i].bidderState == BidderState.LOSE) {\\r\\n                bool success = payable(s_bidInformations[auctionId][i].bidder).send(depositAmount);\\r\\n                // require(success, \\\"Failed to send Ether\\\");\\r\\n                if (!success) {\\r\\n                    revert Auction__TransferFailed();\\r\\n                } else {\\r\\n                    s_bidInformations[auctionId][i].bidderState = BidderState.PAIDBACK;\\r\\n                    emit Paidback(auctionId, s_bidInformations[auctionId][i].bidder);\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    modifier isValidPaymentAmount(string memory auctionId) {\\r\\n        uint256 requirePaymentAmount = s_bidInformations[auctionId][getIndexOfBidder(auctionId)].bidAmount -\\r\\n            s_auctionInformations[auctionId].depositAmount;\\r\\n        if (msg.value != requirePaymentAmount) {\\r\\n            revert Auction__RequireAmountToPaymentNotMet(auctionId, requirePaymentAmount);\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function payment(string memory auctionId) external payable isWinnerOfAuction(auctionId) isValidPaymentAmount(auctionId) {\\r\\n        s_bidInformations[auctionId][getIndexOfBidder(auctionId)].bidderState = BidderState.PAID;\\r\\n        emit ClosedAuctionSucessfully(auctionId, msg.sender, msg.value);\\r\\n    }\\r\\n\\r\\n    function getListAuctionId() external view returns (string[] memory) {\\r\\n        return s_auctionList;\\r\\n    }\\r\\n\\r\\n    function getAuctionInformationById(string memory auctionId) external view isExistAuctionId(auctionId) returns (AuctionInformation memory) {\\r\\n        return s_auctionInformations[auctionId];\\r\\n    }\\r\\n\\r\\n    function getBidInformationByAuctionId(string memory auctionId) external view isExistAuctionId(auctionId) returns (BidInformation[] memory) {\\r\\n        return s_bidInformations[auctionId];\\r\\n    }\\r\\n\\r\\n    function receiver() external payable {}\\r\\n\\r\\n    function getBalance() external view returns (uint256) {\\r\\n        return address(this).balance;\\r\\n    }\\r\\n\\r\\n    function getOwner() public view returns (address) {\\r\\n        return i_owner;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xb604ecc46530cb4aae486b77c169c66fd0bacec6a7fedd1a490d7b628c0c1bed\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040526801d7d843dc3b480000600160006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555034801561005257600080fd5b503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250506080516136316100b0600039600081816106830152818161070a015261113901526136316000f3fe6080604052600436106100f35760003560e01c8063816669711161008a578063af6fd4a711610059578063af6fd4a71461032f578063daddf7171461034b578063f05981fa14610367578063f7260d3e14610383576100f3565b80638166697114610282578063893d20e8146102ab578063a7eaa241146102d6578063a9a7dc63146102f2576100f3565b8063615adb6a116100c6578063615adb6a146101a25780636821fe22146101df578063693dfca81461021c5780637ea717ff14610245576100f3565b806312065fe0146100f85780631c46583b146101235780631d67fa3f1461014e5780633ccfd60b1461018b575b600080fd5b34801561010457600080fd5b5061010d61038d565b60405161011a91906126df565b60405180910390f35b34801561012f57600080fd5b50610138610395565b604051610145919061284c565b60405180910390f35b34801561015a57600080fd5b50610175600480360381019061017091906129b7565b61046e565b60405161018291906126df565b60405180910390f35b34801561019757600080fd5b506101a0610681565b005b3480156101ae57600080fd5b506101c960048036038101906101c491906129b7565b61079f565b6040516101d69190612ac6565b60405180910390f35b3480156101eb57600080fd5b50610206600480360381019061020191906129b7565b610917565b6040516102139190612c8b565b60405180910390f35b34801561022857600080fd5b50610243600480360381019061023e91906129b7565b610b14565b005b34801561025157600080fd5b5061026c600480360381019061026791906129b7565b610e55565b60405161027991906126df565b60405180910390f35b34801561028e57600080fd5b506102a960048036038101906102a49190612cd9565b610fb2565b005b3480156102b757600080fd5b506102c0611135565b6040516102cd9190612de3565b60405180910390f35b6102f060048036038101906102eb9190612dfe565b61115d565b005b3480156102fe57600080fd5b50610319600480360381019061031491906129b7565b611535565b60405161032691906126df565b60405180910390f35b610349600480360381019061034491906129b7565b61164d565b005b610365600480360381019061036091906129b7565b611876565b005b610381600480360381019061037c91906129b7565b611d09565b005b61038b612277565b005b600047905090565b60606000805480602002602001604051908101604052809291908181526020016000905b828210156104655783829060005260206000200180546103d890612e89565b80601f016020809104026020016040519081016040528092919081815260200182805461040490612e89565b80156104515780601f1061042657610100808354040283529160200191610451565b820191906000526020600020905b81548152906001019060200180831161043457829003601f168201915b5050505050815260200190600101906103b9565b50505050905090565b6000806003836040516104819190612ef6565b90815260200160405180910390209050600061049c84610e55565b9050818054905081106104ae57600080fd5b81600183805490506104c09190612f3c565b815481106104d1576104d0612f70565b5b90600052602060002090600302018282815481106104f2576104f1612f70565b5b90600052602060002090600302016000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600182015481600101556002820160009054906101000a900460ff168160020160006101000a81548160ff021916908360068111156105a9576105a8612b4f565b5b0217905550905050818054806105c2576105c1612f9f565b5b6001900381819060005260206000209060030201600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560018201600090556002820160006101000a81549060ff021916905550509055600080600090505b83805490508110156106755783818154811061064557610644612f70565b5b906000526020600020906003020160010154821015610662578091505b808061066d90612fce565b915050610626565b50809350505050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610706576040517f3e77415600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161074c90613047565b60006040518083038185875af1925050503d8060008114610789576040519150601f19603f3d011682016040523d82523d6000602084013e61078e565b606091505b505090508061079c57600080fd5b50565b6107a7612631565b816000805b60008054905081101561084b57600081815481106107cd576107cc612f70565b5b906000526020600020016040516020016107e791906130f4565b604051602081830303815290604052805190602001208360405160200161080e9190612ef6565b604051602081830303815290604052805190602001201461083857818061083490612fce565b9250505b808061084390612fce565b9150506107ac565b50600080549050810361088a576040517fc1c7f9a100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60028460405161089a9190612ef6565b908152602001604051809103902060405180610120016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820154815260200160058201548152602001600682015481526020016007820154815260200160088201548152505092505050919050565b6060816000805b6000805490508110156109bd576000818154811061093f5761093e612f70565b5b9060005260206000200160405160200161095991906130f4565b60405160208183030381529060405280519060200120836040516020016109809190612ef6565b60405160208183030381529060405280519060200120146109aa5781806109a690612fce565b9250505b80806109b590612fce565b91505061091e565b5060008054905081036109fc576040517fc1c7f9a100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600384604051610a0c9190612ef6565b9081526020016040518091039020805480602002602001604051908101604052809291908181526020016000905b82821015610b0757838290600052602060002090600302016040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820160009054906101000a900460ff166006811115610ae257610ae1612b4f565b5b6006811115610af457610af3612b4f565b5b8152505081526020019060010190610a3a565b5050505092505050919050565b806000805b600080549050811015610bb85760008181548110610b3a57610b39612f70565b5b90600052602060002001604051602001610b5491906130f4565b6040516020818303038152906040528051906020012083604051602001610b7b9190612ef6565b6040516020818303038152906040528051906020012014610ba5578180610ba190612fce565b9250505b8080610bb090612fce565b915050610b19565b506000805490508103610bf7576040517fc1c7f9a100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610c0284611535565b90506002600385604051610c169190612ef6565b90815260200160405180910390208281548110610c3657610c35612f70565b5b906000526020600020906003020160020160006101000a81548160ff02191690836006811115610c6957610c68612b4f565b5b02179055506000610c798561046e565b90506001600386604051610c8d9190612ef6565b90815260200160405180910390208281548110610cad57610cac612f70565b5b906000526020600020906003020160020160006101000a81548160ff02191690836006811115610ce057610cdf612b4f565b5b021790555060005b600386604051610cf89190612ef6565b908152602001604051809103902080549050811015610e165760006006811115610d2557610d24612b4f565b5b600387604051610d359190612ef6565b90815260200160405180910390208281548110610d5557610d54612f70565b5b906000526020600020906003020160020160009054906101000a900460ff166006811115610d8657610d85612b4f565b5b03610e035760036006811115610d9f57610d9e612b4f565b5b600387604051610daf9190612ef6565b90815260200160405180910390208281548110610dcf57610dce612f70565b5b906000526020600020906003020160020160009054906101000a900460ff166006811115610e0057610dff612b4f565b5b50505b8080610e0e90612fce565b915050610ce8565b507f9d8c4bda31461c9a9300697c59318bac02cc954037b51c5db3ae52347042d2bc85604051610e469190613155565b60405180910390a15050505050565b6000806000905060005b600384604051610e6f9190612ef6565b908152602001604051809103902080549050811015610fa85781600385604051610e999190612ef6565b90815260200160405180910390208281548110610eb957610eb8612f70565b5b906000526020600020906003020160010154118015610f4b575060046006811115610ee757610ee6612b4f565b5b600385604051610ef79190612ef6565b90815260200160405180910390208281548110610f1757610f16612f70565b5b906000526020600020906003020160020160009054906101000a900460ff166006811115610f4857610f47612b4f565b5b14155b15610f9557600384604051610f609190612ef6565b90815260200160405180910390208181548110610f8057610f7f612f70565b5b90600052602060002090600302016001015491505b8080610fa090612fce565b915050610e5f565b5080915050919050565b610fc48a8a8a8a8a8a8a8a8a8a612279565b1561112957610fd1612631565b8981600001818152505088816020018181525050878160400181815250508681606001818152505085816080018181525050848160a0018181525050838160c0018181525050828160e001818152505081816101000181815250508060028c60405161103d9190612ef6565b9081526020016040518091039020600082015181600001556020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005015560c0820151816006015560e08201518160070155610100820151816008015590505060008b9080600181540180825580915050600190039060005260206000200160009091909190915090816110dd919061330e565b507fe5549b694e8ea655c231f5d255127cf7c0f14997a411ccdf6577e3b9911674428b8b8b8b8b8b8b8b8b8b60405161111f9a999897969594939291906133e0565b60405180910390a1505b50505050505050505050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b816000805b600080549050811015611201576000818154811061118357611182612f70565b5b9060005260206000200160405160200161119d91906130f4565b60405160208183030381529060405280519060200120836040516020016111c49190612ef6565b60405160208183030381529060405280519060200120146111ee5781806111ea90612fce565b9250505b80806111f990612fce565b915050611162565b506000805490508103611240576040517fc1c7f9a100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b83426002826040516112529190612ef6565b908152602001604051809103902060020154118061129057504260028260405161127c9190612ef6565b908152602001604051809103902060030154105b156112c7576040517f355d234800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b846000805b6003836040516112dc9190612ef6565b9081526020016040518091039020805490508110156113ab573373ffffffffffffffffffffffffffffffffffffffff1660038460405161131c9190612ef6565b9081526020016040518091039020828154811061133c5761133b612f70565b5b906000526020600020906003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461139857818061139490612fce565b9250505b80806113a390612fce565b9150506112cc565b506003826040516113bc9190612ef6565b9081526020016040518091039020805490508103611406576040517f2ffd4a0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b86866002826040516114189190612ef6565b90815260200160405180910390206007015481108061146a57506002826040516114429190612ef6565b90815260200160405180910390206008015461145d83610e55565b6114679190613483565b81105b156114a1576040517fabdda60f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8760038a6040516114b29190612ef6565b90815260200160405180910390206114c98b612545565b815481106114da576114d9612f70565b5b9060005260206000209060030201600101819055507fe886416816c234ad984c20a40b4480b0e1dc31a4da3edbab50626e575b7dbe0589338a604051611522939291906134b7565b60405180910390a1505050505050505050565b60008060005b60038460405161154b9190612ef6565b908152602001604051809103902080549050811015611643576003846040516115749190612ef6565b9081526020016040518091039020818154811061159457611593612f70565b5b906000526020600020906003020160010154821080156116275750600460068111156115c3576115c2612b4f565b5b6003856040516115d39190612ef6565b908152602001604051809103902082815481106115f3576115f2612f70565b5b906000526020600020906003020160020160009054906101000a900460ff16600681111561162457611623612b4f565b5b14155b15611630578091505b808061163b90612fce565b91505061153b565b5080915050919050565b806002600681111561166257611661612b4f565b5b6003826040516116729190612ef6565b908152602001604051809103902061168983612545565b8154811061169a57611699612f70565b5b906000526020600020906003020160020160009054906101000a900460ff1660068111156116cb576116ca612b4f565b5b14611702576040517f7963b56f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8160006002826040516117159190612ef6565b9081526020016040518091039020600601546003836040516117379190612ef6565b908152602001604051809103902061174e84612545565b8154811061175f5761175e612f70565b5b90600052602060002090600302016001015461177b9190612f3c565b90508034146117c35781816040517f1abcbf870000000000000000000000000000000000000000000000000000000081526004016117ba9291906134f5565b60405180910390fd5b60066003856040516117d59190612ef6565b90815260200160405180910390206117ec86612545565b815481106117fd576117fc612f70565b5b906000526020600020906003020160020160006101000a81548160ff021916908360068111156118305761182f612b4f565b5b02179055507f2951e1d2e4f526e0e6f563c03b8940da36e4616bbc2ec1933479f7d649e00164843334604051611868939291906134b7565b60405180910390a150505050565b806000805b60008054905081101561191a576000818154811061189c5761189b612f70565b5b906000526020600020016040516020016118b691906130f4565b60405160208183030381529060405280519060200120836040516020016118dd9190612ef6565b604051602081830303815290604052805190602001201461190757818061190390612fce565b9250505b808061191290612fce565b91505061187b565b506000805490508103611959576040517fc1c7f9a100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b824260028260405161196b9190612ef6565b90815260200160405180910390206000015411806119a95750426002826040516119959190612ef6565b908152602001604051809103902060010154105b156119e0576040517f60acd97900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8360005b6003826040516119f49190612ef6565b908152602001604051809103902080549050811015611ae6573373ffffffffffffffffffffffffffffffffffffffff16600383604051611a349190612ef6565b90815260200160405180910390208281548110611a5457611a53612f70565b5b906000526020600020906003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603611ad3576040517fd0335efa00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8080611ade90612fce565b9150506119e4565b506000600286604051611af99190612ef6565b908152602001604051809103902060060154600287604051611b1b9190612ef6565b908152602001604051809103902060050154611b379190613483565b9050803414611b81578534826040517fa60b61bc000000000000000000000000000000000000000000000000000000008152600401611b7893929190613525565b60405180910390fd5b611b8961267d565b33816000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600081604001906006811115611bda57611bd9612b4f565b5b90816006811115611bee57611bed612b4f565b5b81525050600387604051611c029190612ef6565b908152602001604051809103902081908060018154018082558091505060019003906000526020600020906003020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020160006101000a81548160ff02191690836006811115611cb657611cb5612b4f565b5b021790555050507f3d91795a8d93a82cebcc92ac50f202b5aa73244f00228e1cc9cbdafbbdf8fe9b8782600001518360400151604051611cf893929190613572565b60405180910390a150505050505050565b80600381604051611d1a9190612ef6565b9081526020016040518091039020611d3182611535565b81548110611d4257611d41612f70565b5b906000526020600020906003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1603611e1957600061012c61ffff16600283604051611dbf9190612ef6565b908152602001604051809103902060030154611ddb9190613483565b905042811115611e17576040517f49107ff700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505b600381604051611e299190612ef6565b9081526020016040518091039020611e408261046e565b81548110611e5157611e50612f70565b5b906000526020600020906003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1603611f34576000600261012c611ec691906135be565b61ffff16600283604051611eda9190612ef6565b908152602001604051809103902060030154611ef69190613483565b905042811115611f32576040517f49107ff700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505b8160026006811115611f4957611f48612b4f565b5b600382604051611f599190612ef6565b9081526020016040518091039020611f7083612545565b81548110611f8157611f80612f70565b5b906000526020600020906003020160020160009054906101000a900460ff166006811115611fb257611fb1612b4f565b5b14611fe9576040517f7963b56f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600383604051611ff99190612ef6565b908152602001604051809103902061201084611535565b8154811061202157612020612f70565b5b906000526020600020906003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff160361216e5760046003846040516120979190612ef6565b90815260200160405180910390206120ae85611535565b815481106120bf576120be612f70565b5b906000526020600020906003020160020160006101000a81548160ff021916908360068111156120f2576120f1612b4f565b5b021790555060026003846040516121099190612ef6565b90815260200160405180910390206121208561046e565b8154811061213157612130612f70565b5b906000526020600020906003020160020160006101000a81548160ff0219169083600681111561216457612163612b4f565b5b02179055506121e1565b60046003846040516121809190612ef6565b90815260200160405180910390206121978561046e565b815481106121a8576121a7612f70565b5b906000526020600020906003020160020160006101000a81548160ff021916908360068111156121db576121da612b4f565b5b02179055505b7f87182aaac5dd5ec80140f092551157b9dc8f704ab22b683dc628b3099676d73083336003866040516122149190612ef6565b908152602001604051809103902061222b87612545565b8154811061223c5761223b612f70565b5b906000526020600020906003020160020160009054906101000a900460ff1660405161226a93929190613572565b60405180910390a1505050565b565b60008a60005b60008054905081101561234157600081815481106122a05761229f612f70565b5b906000526020600020016040516020016122ba91906130f4565b60405160208183030381529060405280519060200120826040516020016122e19190612ef6565b604051602081830303815290604052805190602001200361232e576040517f6b9108f800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b808061233990612fce565b91505061227f565b508a8a428210806123525750808210155b15612389576040517f5e83d5f800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8b8b8082106123c4576040517f7a9971e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8c8c8082106123ff576040517fe2049fa500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8d8d80821061243a576040517fcc2116a000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8d60008111612475576040517fb25c88c500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8d600081116124b0576040517fb0f07a6300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8d600081116124eb576040517ffb833a9900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8d60008111612526576040517fa9ed13a300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60019d50505050505050505050505050509a9950505050505050505050565b600080600090505b60038360405161255d9190612ef6565b908152602001604051809103902080549050811015612626573373ffffffffffffffffffffffffffffffffffffffff1660038460405161259d9190612ef6565b908152602001604051809103902082815481106125bd576125bc612f70565b5b906000526020600020906003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603612613578091505061262c565b808061261e90612fce565b91505061254d565b50600090505b919050565b6040518061012001604052806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600060068111156126c0576126bf612b4f565b5b81525090565b6000819050919050565b6126d9816126c6565b82525050565b60006020820190506126f460008301846126d0565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b83811015612760578082015181840152602081019050612745565b60008484015250505050565b6000601f19601f8301169050919050565b600061278882612726565b6127928185612731565b93506127a2818560208601612742565b6127ab8161276c565b840191505092915050565b60006127c2838361277d565b905092915050565b6000602082019050919050565b60006127e2826126fa565b6127ec8185612705565b9350836020820285016127fe85612716565b8060005b8581101561283a578484038952815161281b85826127b6565b9450612826836127ca565b925060208a01995050600181019050612802565b50829750879550505050505092915050565b6000602082019050818103600083015261286681846127d7565b905092915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6128c48261276c565b810181811067ffffffffffffffff821117156128e3576128e261288c565b5b80604052505050565b60006128f661286e565b905061290282826128bb565b919050565b600067ffffffffffffffff8211156129225761292161288c565b5b61292b8261276c565b9050602081019050919050565b82818337600083830152505050565b600061295a61295584612907565b6128ec565b90508281526020810184848401111561297657612975612887565b5b612981848285612938565b509392505050565b600082601f83011261299e5761299d612882565b5b81356129ae848260208601612947565b91505092915050565b6000602082840312156129cd576129cc612878565b5b600082013567ffffffffffffffff8111156129eb576129ea61287d565b5b6129f784828501612989565b91505092915050565b612a09816126c6565b82525050565b61012082016000820151612a266000850182612a00565b506020820151612a396020850182612a00565b506040820151612a4c6040850182612a00565b506060820151612a5f6060850182612a00565b506080820151612a726080850182612a00565b5060a0820151612a8560a0850182612a00565b5060c0820151612a9860c0850182612a00565b5060e0820151612aab60e0850182612a00565b50610100820151612ac0610100850182612a00565b50505050565b600061012082019050612adc6000830184612a0f565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612b3982612b0e565b9050919050565b612b4981612b2e565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60078110612b8f57612b8e612b4f565b5b50565b6000819050612ba082612b7e565b919050565b6000612bb082612b92565b9050919050565b612bc081612ba5565b82525050565b606082016000820151612bdc6000850182612b40565b506020820151612bef6020850182612a00565b506040820151612c026040850182612bb7565b50505050565b6000612c148383612bc6565b60608301905092915050565b6000602082019050919050565b6000612c3882612ae2565b612c428185612aed565b9350612c4d83612afe565b8060005b83811015612c7e578151612c658882612c08565b9750612c7083612c20565b925050600181019050612c51565b5085935050505092915050565b60006020820190508181036000830152612ca58184612c2d565b905092915050565b612cb6816126c6565b8114612cc157600080fd5b50565b600081359050612cd381612cad565b92915050565b6000806000806000806000806000806101408b8d031215612cfd57612cfc612878565b5b60008b013567ffffffffffffffff811115612d1b57612d1a61287d565b5b612d278d828e01612989565b9a50506020612d388d828e01612cc4565b9950506040612d498d828e01612cc4565b9850506060612d5a8d828e01612cc4565b9750506080612d6b8d828e01612cc4565b96505060a0612d7c8d828e01612cc4565b95505060c0612d8d8d828e01612cc4565b94505060e0612d9e8d828e01612cc4565b935050610100612db08d828e01612cc4565b925050610120612dc28d828e01612cc4565b9150509295989b9194979a5092959850565b612ddd81612b2e565b82525050565b6000602082019050612df86000830184612dd4565b92915050565b60008060408385031215612e1557612e14612878565b5b600083013567ffffffffffffffff811115612e3357612e3261287d565b5b612e3f85828601612989565b9250506020612e5085828601612cc4565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680612ea157607f821691505b602082108103612eb457612eb3612e5a565b5b50919050565b600081905092915050565b6000612ed082612726565b612eda8185612eba565b9350612eea818560208601612742565b80840191505092915050565b6000612f028284612ec5565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612f47826126c6565b9150612f52836126c6565b9250828203905081811115612f6a57612f69612f0d565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b6000612fd9826126c6565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361300b5761300a612f0d565b5b600182019050919050565b600081905092915050565b50565b6000613031600083613016565b915061303c82613021565b600082019050919050565b600061305282613024565b9150819050919050565b60008190508160005260206000209050919050565b6000815461307e81612e89565b6130888186612eba565b945060018216600081146130a357600181146130b8576130eb565b60ff19831686528115158202860193506130eb565b6130c18561305c565b60005b838110156130e3578154818901526001820191506020810190506130c4565b838801955050505b50505092915050565b60006131008284613071565b915081905092915050565b600082825260208201905092915050565b600061312782612726565b613131818561310b565b9350613141818560208601612742565b61314a8161276c565b840191505092915050565b6000602082019050818103600083015261316f818461311c565b905092915050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026131c47fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82613187565b6131ce8683613187565b95508019841693508086168417925050509392505050565b6000819050919050565b600061320b613206613201846126c6565b6131e6565b6126c6565b9050919050565b6000819050919050565b613225836131f0565b61323961323182613212565b848454613194565b825550505050565b600090565b61324e613241565b61325981848461321c565b505050565b5b8181101561327d57613272600082613246565b60018101905061325f565b5050565b601f8211156132c2576132938161305c565b61329c84613177565b810160208510156132ab578190505b6132bf6132b785613177565b83018261325e565b50505b505050565b600082821c905092915050565b60006132e5600019846008026132c7565b1980831691505092915050565b60006132fe83836132d4565b9150826002028217905092915050565b61331782612726565b67ffffffffffffffff8111156133305761332f61288c565b5b61333a8254612e89565b613345828285613281565b600060209050601f8311600181146133785760008415613366578287015190505b61337085826132f2565b8655506133d8565b601f1984166133868661305c565b60005b828110156133ae57848901518255600182019150602085019450602081019050613389565b868310156133cb57848901516133c7601f8916826132d4565b8355505b6001600288020188555050505b505050505050565b60006101408201905081810360008301526133fb818d61311c565b905061340a602083018c6126d0565b613417604083018b6126d0565b613424606083018a6126d0565b61343160808301896126d0565b61343e60a08301886126d0565b61344b60c08301876126d0565b61345860e08301866126d0565b6134666101008301856126d0565b6134746101208301846126d0565b9b9a5050505050505050505050565b600061348e826126c6565b9150613499836126c6565b92508282019050808211156134b1576134b0612f0d565b5b92915050565b600060608201905081810360008301526134d1818661311c565b90506134e06020830185612dd4565b6134ed60408301846126d0565b949350505050565b6000604082019050818103600083015261350f818561311c565b905061351e60208301846126d0565b9392505050565b6000606082019050818103600083015261353f818661311c565b905061354e60208301856126d0565b61355b60408301846126d0565b949350505050565b61356c81612ba5565b82525050565b6000606082019050818103600083015261358c818661311c565b905061359b6020830185612dd4565b6135a86040830184613563565b949350505050565b600061ffff82169050919050565b60006135c9826135b0565b91506135d4836135b0565b92508282026135e2816135b0565b91508082146135f4576135f3612f0d565b5b509291505056fea26469706673582212204418dd29b6374b4a46001059e592e668ef9fba059466ead31d2e33f853f1f14e64736f6c63430008110033",
  "deployedBytecode": "0x6080604052600436106100f35760003560e01c8063816669711161008a578063af6fd4a711610059578063af6fd4a71461032f578063daddf7171461034b578063f05981fa14610367578063f7260d3e14610383576100f3565b80638166697114610282578063893d20e8146102ab578063a7eaa241146102d6578063a9a7dc63146102f2576100f3565b8063615adb6a116100c6578063615adb6a146101a25780636821fe22146101df578063693dfca81461021c5780637ea717ff14610245576100f3565b806312065fe0146100f85780631c46583b146101235780631d67fa3f1461014e5780633ccfd60b1461018b575b600080fd5b34801561010457600080fd5b5061010d61038d565b60405161011a91906126df565b60405180910390f35b34801561012f57600080fd5b50610138610395565b604051610145919061284c565b60405180910390f35b34801561015a57600080fd5b50610175600480360381019061017091906129b7565b61046e565b60405161018291906126df565b60405180910390f35b34801561019757600080fd5b506101a0610681565b005b3480156101ae57600080fd5b506101c960048036038101906101c491906129b7565b61079f565b6040516101d69190612ac6565b60405180910390f35b3480156101eb57600080fd5b50610206600480360381019061020191906129b7565b610917565b6040516102139190612c8b565b60405180910390f35b34801561022857600080fd5b50610243600480360381019061023e91906129b7565b610b14565b005b34801561025157600080fd5b5061026c600480360381019061026791906129b7565b610e55565b60405161027991906126df565b60405180910390f35b34801561028e57600080fd5b506102a960048036038101906102a49190612cd9565b610fb2565b005b3480156102b757600080fd5b506102c0611135565b6040516102cd9190612de3565b60405180910390f35b6102f060048036038101906102eb9190612dfe565b61115d565b005b3480156102fe57600080fd5b50610319600480360381019061031491906129b7565b611535565b60405161032691906126df565b60405180910390f35b610349600480360381019061034491906129b7565b61164d565b005b610365600480360381019061036091906129b7565b611876565b005b610381600480360381019061037c91906129b7565b611d09565b005b61038b612277565b005b600047905090565b60606000805480602002602001604051908101604052809291908181526020016000905b828210156104655783829060005260206000200180546103d890612e89565b80601f016020809104026020016040519081016040528092919081815260200182805461040490612e89565b80156104515780601f1061042657610100808354040283529160200191610451565b820191906000526020600020905b81548152906001019060200180831161043457829003601f168201915b5050505050815260200190600101906103b9565b50505050905090565b6000806003836040516104819190612ef6565b90815260200160405180910390209050600061049c84610e55565b9050818054905081106104ae57600080fd5b81600183805490506104c09190612f3c565b815481106104d1576104d0612f70565b5b90600052602060002090600302018282815481106104f2576104f1612f70565b5b90600052602060002090600302016000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600182015481600101556002820160009054906101000a900460ff168160020160006101000a81548160ff021916908360068111156105a9576105a8612b4f565b5b0217905550905050818054806105c2576105c1612f9f565b5b6001900381819060005260206000209060030201600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560018201600090556002820160006101000a81549060ff021916905550509055600080600090505b83805490508110156106755783818154811061064557610644612f70565b5b906000526020600020906003020160010154821015610662578091505b808061066d90612fce565b915050610626565b50809350505050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610706576040517f3e77415600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161074c90613047565b60006040518083038185875af1925050503d8060008114610789576040519150601f19603f3d011682016040523d82523d6000602084013e61078e565b606091505b505090508061079c57600080fd5b50565b6107a7612631565b816000805b60008054905081101561084b57600081815481106107cd576107cc612f70565b5b906000526020600020016040516020016107e791906130f4565b604051602081830303815290604052805190602001208360405160200161080e9190612ef6565b604051602081830303815290604052805190602001201461083857818061083490612fce565b9250505b808061084390612fce565b9150506107ac565b50600080549050810361088a576040517fc1c7f9a100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60028460405161089a9190612ef6565b908152602001604051809103902060405180610120016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820154815260200160058201548152602001600682015481526020016007820154815260200160088201548152505092505050919050565b6060816000805b6000805490508110156109bd576000818154811061093f5761093e612f70565b5b9060005260206000200160405160200161095991906130f4565b60405160208183030381529060405280519060200120836040516020016109809190612ef6565b60405160208183030381529060405280519060200120146109aa5781806109a690612fce565b9250505b80806109b590612fce565b91505061091e565b5060008054905081036109fc576040517fc1c7f9a100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600384604051610a0c9190612ef6565b9081526020016040518091039020805480602002602001604051908101604052809291908181526020016000905b82821015610b0757838290600052602060002090600302016040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820160009054906101000a900460ff166006811115610ae257610ae1612b4f565b5b6006811115610af457610af3612b4f565b5b8152505081526020019060010190610a3a565b5050505092505050919050565b806000805b600080549050811015610bb85760008181548110610b3a57610b39612f70565b5b90600052602060002001604051602001610b5491906130f4565b6040516020818303038152906040528051906020012083604051602001610b7b9190612ef6565b6040516020818303038152906040528051906020012014610ba5578180610ba190612fce565b9250505b8080610bb090612fce565b915050610b19565b506000805490508103610bf7576040517fc1c7f9a100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610c0284611535565b90506002600385604051610c169190612ef6565b90815260200160405180910390208281548110610c3657610c35612f70565b5b906000526020600020906003020160020160006101000a81548160ff02191690836006811115610c6957610c68612b4f565b5b02179055506000610c798561046e565b90506001600386604051610c8d9190612ef6565b90815260200160405180910390208281548110610cad57610cac612f70565b5b906000526020600020906003020160020160006101000a81548160ff02191690836006811115610ce057610cdf612b4f565b5b021790555060005b600386604051610cf89190612ef6565b908152602001604051809103902080549050811015610e165760006006811115610d2557610d24612b4f565b5b600387604051610d359190612ef6565b90815260200160405180910390208281548110610d5557610d54612f70565b5b906000526020600020906003020160020160009054906101000a900460ff166006811115610d8657610d85612b4f565b5b03610e035760036006811115610d9f57610d9e612b4f565b5b600387604051610daf9190612ef6565b90815260200160405180910390208281548110610dcf57610dce612f70565b5b906000526020600020906003020160020160009054906101000a900460ff166006811115610e0057610dff612b4f565b5b50505b8080610e0e90612fce565b915050610ce8565b507f9d8c4bda31461c9a9300697c59318bac02cc954037b51c5db3ae52347042d2bc85604051610e469190613155565b60405180910390a15050505050565b6000806000905060005b600384604051610e6f9190612ef6565b908152602001604051809103902080549050811015610fa85781600385604051610e999190612ef6565b90815260200160405180910390208281548110610eb957610eb8612f70565b5b906000526020600020906003020160010154118015610f4b575060046006811115610ee757610ee6612b4f565b5b600385604051610ef79190612ef6565b90815260200160405180910390208281548110610f1757610f16612f70565b5b906000526020600020906003020160020160009054906101000a900460ff166006811115610f4857610f47612b4f565b5b14155b15610f9557600384604051610f609190612ef6565b90815260200160405180910390208181548110610f8057610f7f612f70565b5b90600052602060002090600302016001015491505b8080610fa090612fce565b915050610e5f565b5080915050919050565b610fc48a8a8a8a8a8a8a8a8a8a612279565b1561112957610fd1612631565b8981600001818152505088816020018181525050878160400181815250508681606001818152505085816080018181525050848160a0018181525050838160c0018181525050828160e001818152505081816101000181815250508060028c60405161103d9190612ef6565b9081526020016040518091039020600082015181600001556020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005015560c0820151816006015560e08201518160070155610100820151816008015590505060008b9080600181540180825580915050600190039060005260206000200160009091909190915090816110dd919061330e565b507fe5549b694e8ea655c231f5d255127cf7c0f14997a411ccdf6577e3b9911674428b8b8b8b8b8b8b8b8b8b60405161111f9a999897969594939291906133e0565b60405180910390a1505b50505050505050505050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b816000805b600080549050811015611201576000818154811061118357611182612f70565b5b9060005260206000200160405160200161119d91906130f4565b60405160208183030381529060405280519060200120836040516020016111c49190612ef6565b60405160208183030381529060405280519060200120146111ee5781806111ea90612fce565b9250505b80806111f990612fce565b915050611162565b506000805490508103611240576040517fc1c7f9a100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b83426002826040516112529190612ef6565b908152602001604051809103902060020154118061129057504260028260405161127c9190612ef6565b908152602001604051809103902060030154105b156112c7576040517f355d234800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b846000805b6003836040516112dc9190612ef6565b9081526020016040518091039020805490508110156113ab573373ffffffffffffffffffffffffffffffffffffffff1660038460405161131c9190612ef6565b9081526020016040518091039020828154811061133c5761133b612f70565b5b906000526020600020906003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461139857818061139490612fce565b9250505b80806113a390612fce565b9150506112cc565b506003826040516113bc9190612ef6565b9081526020016040518091039020805490508103611406576040517f2ffd4a0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b86866002826040516114189190612ef6565b90815260200160405180910390206007015481108061146a57506002826040516114429190612ef6565b90815260200160405180910390206008015461145d83610e55565b6114679190613483565b81105b156114a1576040517fabdda60f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8760038a6040516114b29190612ef6565b90815260200160405180910390206114c98b612545565b815481106114da576114d9612f70565b5b9060005260206000209060030201600101819055507fe886416816c234ad984c20a40b4480b0e1dc31a4da3edbab50626e575b7dbe0589338a604051611522939291906134b7565b60405180910390a1505050505050505050565b60008060005b60038460405161154b9190612ef6565b908152602001604051809103902080549050811015611643576003846040516115749190612ef6565b9081526020016040518091039020818154811061159457611593612f70565b5b906000526020600020906003020160010154821080156116275750600460068111156115c3576115c2612b4f565b5b6003856040516115d39190612ef6565b908152602001604051809103902082815481106115f3576115f2612f70565b5b906000526020600020906003020160020160009054906101000a900460ff16600681111561162457611623612b4f565b5b14155b15611630578091505b808061163b90612fce565b91505061153b565b5080915050919050565b806002600681111561166257611661612b4f565b5b6003826040516116729190612ef6565b908152602001604051809103902061168983612545565b8154811061169a57611699612f70565b5b906000526020600020906003020160020160009054906101000a900460ff1660068111156116cb576116ca612b4f565b5b14611702576040517f7963b56f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8160006002826040516117159190612ef6565b9081526020016040518091039020600601546003836040516117379190612ef6565b908152602001604051809103902061174e84612545565b8154811061175f5761175e612f70565b5b90600052602060002090600302016001015461177b9190612f3c565b90508034146117c35781816040517f1abcbf870000000000000000000000000000000000000000000000000000000081526004016117ba9291906134f5565b60405180910390fd5b60066003856040516117d59190612ef6565b90815260200160405180910390206117ec86612545565b815481106117fd576117fc612f70565b5b906000526020600020906003020160020160006101000a81548160ff021916908360068111156118305761182f612b4f565b5b02179055507f2951e1d2e4f526e0e6f563c03b8940da36e4616bbc2ec1933479f7d649e00164843334604051611868939291906134b7565b60405180910390a150505050565b806000805b60008054905081101561191a576000818154811061189c5761189b612f70565b5b906000526020600020016040516020016118b691906130f4565b60405160208183030381529060405280519060200120836040516020016118dd9190612ef6565b604051602081830303815290604052805190602001201461190757818061190390612fce565b9250505b808061191290612fce565b91505061187b565b506000805490508103611959576040517fc1c7f9a100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b824260028260405161196b9190612ef6565b90815260200160405180910390206000015411806119a95750426002826040516119959190612ef6565b908152602001604051809103902060010154105b156119e0576040517f60acd97900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8360005b6003826040516119f49190612ef6565b908152602001604051809103902080549050811015611ae6573373ffffffffffffffffffffffffffffffffffffffff16600383604051611a349190612ef6565b90815260200160405180910390208281548110611a5457611a53612f70565b5b906000526020600020906003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603611ad3576040517fd0335efa00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8080611ade90612fce565b9150506119e4565b506000600286604051611af99190612ef6565b908152602001604051809103902060060154600287604051611b1b9190612ef6565b908152602001604051809103902060050154611b379190613483565b9050803414611b81578534826040517fa60b61bc000000000000000000000000000000000000000000000000000000008152600401611b7893929190613525565b60405180910390fd5b611b8961267d565b33816000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600081604001906006811115611bda57611bd9612b4f565b5b90816006811115611bee57611bed612b4f565b5b81525050600387604051611c029190612ef6565b908152602001604051809103902081908060018154018082558091505060019003906000526020600020906003020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020160006101000a81548160ff02191690836006811115611cb657611cb5612b4f565b5b021790555050507f3d91795a8d93a82cebcc92ac50f202b5aa73244f00228e1cc9cbdafbbdf8fe9b8782600001518360400151604051611cf893929190613572565b60405180910390a150505050505050565b80600381604051611d1a9190612ef6565b9081526020016040518091039020611d3182611535565b81548110611d4257611d41612f70565b5b906000526020600020906003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1603611e1957600061012c61ffff16600283604051611dbf9190612ef6565b908152602001604051809103902060030154611ddb9190613483565b905042811115611e17576040517f49107ff700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505b600381604051611e299190612ef6565b9081526020016040518091039020611e408261046e565b81548110611e5157611e50612f70565b5b906000526020600020906003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1603611f34576000600261012c611ec691906135be565b61ffff16600283604051611eda9190612ef6565b908152602001604051809103902060030154611ef69190613483565b905042811115611f32576040517f49107ff700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505b8160026006811115611f4957611f48612b4f565b5b600382604051611f599190612ef6565b9081526020016040518091039020611f7083612545565b81548110611f8157611f80612f70565b5b906000526020600020906003020160020160009054906101000a900460ff166006811115611fb257611fb1612b4f565b5b14611fe9576040517f7963b56f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600383604051611ff99190612ef6565b908152602001604051809103902061201084611535565b8154811061202157612020612f70565b5b906000526020600020906003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff160361216e5760046003846040516120979190612ef6565b90815260200160405180910390206120ae85611535565b815481106120bf576120be612f70565b5b906000526020600020906003020160020160006101000a81548160ff021916908360068111156120f2576120f1612b4f565b5b021790555060026003846040516121099190612ef6565b90815260200160405180910390206121208561046e565b8154811061213157612130612f70565b5b906000526020600020906003020160020160006101000a81548160ff0219169083600681111561216457612163612b4f565b5b02179055506121e1565b60046003846040516121809190612ef6565b90815260200160405180910390206121978561046e565b815481106121a8576121a7612f70565b5b906000526020600020906003020160020160006101000a81548160ff021916908360068111156121db576121da612b4f565b5b02179055505b7f87182aaac5dd5ec80140f092551157b9dc8f704ab22b683dc628b3099676d73083336003866040516122149190612ef6565b908152602001604051809103902061222b87612545565b8154811061223c5761223b612f70565b5b906000526020600020906003020160020160009054906101000a900460ff1660405161226a93929190613572565b60405180910390a1505050565b565b60008a60005b60008054905081101561234157600081815481106122a05761229f612f70565b5b906000526020600020016040516020016122ba91906130f4565b60405160208183030381529060405280519060200120826040516020016122e19190612ef6565b604051602081830303815290604052805190602001200361232e576040517f6b9108f800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b808061233990612fce565b91505061227f565b508a8a428210806123525750808210155b15612389576040517f5e83d5f800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8b8b8082106123c4576040517f7a9971e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8c8c8082106123ff576040517fe2049fa500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8d8d80821061243a576040517fcc2116a000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8d60008111612475576040517fb25c88c500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8d600081116124b0576040517fb0f07a6300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8d600081116124eb576040517ffb833a9900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8d60008111612526576040517fa9ed13a300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60019d50505050505050505050505050509a9950505050505050505050565b600080600090505b60038360405161255d9190612ef6565b908152602001604051809103902080549050811015612626573373ffffffffffffffffffffffffffffffffffffffff1660038460405161259d9190612ef6565b908152602001604051809103902082815481106125bd576125bc612f70565b5b906000526020600020906003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603612613578091505061262c565b808061261e90612fce565b91505061254d565b50600090505b919050565b6040518061012001604052806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600060068111156126c0576126bf612b4f565b5b81525090565b6000819050919050565b6126d9816126c6565b82525050565b60006020820190506126f460008301846126d0565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b83811015612760578082015181840152602081019050612745565b60008484015250505050565b6000601f19601f8301169050919050565b600061278882612726565b6127928185612731565b93506127a2818560208601612742565b6127ab8161276c565b840191505092915050565b60006127c2838361277d565b905092915050565b6000602082019050919050565b60006127e2826126fa565b6127ec8185612705565b9350836020820285016127fe85612716565b8060005b8581101561283a578484038952815161281b85826127b6565b9450612826836127ca565b925060208a01995050600181019050612802565b50829750879550505050505092915050565b6000602082019050818103600083015261286681846127d7565b905092915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6128c48261276c565b810181811067ffffffffffffffff821117156128e3576128e261288c565b5b80604052505050565b60006128f661286e565b905061290282826128bb565b919050565b600067ffffffffffffffff8211156129225761292161288c565b5b61292b8261276c565b9050602081019050919050565b82818337600083830152505050565b600061295a61295584612907565b6128ec565b90508281526020810184848401111561297657612975612887565b5b612981848285612938565b509392505050565b600082601f83011261299e5761299d612882565b5b81356129ae848260208601612947565b91505092915050565b6000602082840312156129cd576129cc612878565b5b600082013567ffffffffffffffff8111156129eb576129ea61287d565b5b6129f784828501612989565b91505092915050565b612a09816126c6565b82525050565b61012082016000820151612a266000850182612a00565b506020820151612a396020850182612a00565b506040820151612a4c6040850182612a00565b506060820151612a5f6060850182612a00565b506080820151612a726080850182612a00565b5060a0820151612a8560a0850182612a00565b5060c0820151612a9860c0850182612a00565b5060e0820151612aab60e0850182612a00565b50610100820151612ac0610100850182612a00565b50505050565b600061012082019050612adc6000830184612a0f565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612b3982612b0e565b9050919050565b612b4981612b2e565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60078110612b8f57612b8e612b4f565b5b50565b6000819050612ba082612b7e565b919050565b6000612bb082612b92565b9050919050565b612bc081612ba5565b82525050565b606082016000820151612bdc6000850182612b40565b506020820151612bef6020850182612a00565b506040820151612c026040850182612bb7565b50505050565b6000612c148383612bc6565b60608301905092915050565b6000602082019050919050565b6000612c3882612ae2565b612c428185612aed565b9350612c4d83612afe565b8060005b83811015612c7e578151612c658882612c08565b9750612c7083612c20565b925050600181019050612c51565b5085935050505092915050565b60006020820190508181036000830152612ca58184612c2d565b905092915050565b612cb6816126c6565b8114612cc157600080fd5b50565b600081359050612cd381612cad565b92915050565b6000806000806000806000806000806101408b8d031215612cfd57612cfc612878565b5b60008b013567ffffffffffffffff811115612d1b57612d1a61287d565b5b612d278d828e01612989565b9a50506020612d388d828e01612cc4565b9950506040612d498d828e01612cc4565b9850506060612d5a8d828e01612cc4565b9750506080612d6b8d828e01612cc4565b96505060a0612d7c8d828e01612cc4565b95505060c0612d8d8d828e01612cc4565b94505060e0612d9e8d828e01612cc4565b935050610100612db08d828e01612cc4565b925050610120612dc28d828e01612cc4565b9150509295989b9194979a5092959850565b612ddd81612b2e565b82525050565b6000602082019050612df86000830184612dd4565b92915050565b60008060408385031215612e1557612e14612878565b5b600083013567ffffffffffffffff811115612e3357612e3261287d565b5b612e3f85828601612989565b9250506020612e5085828601612cc4565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680612ea157607f821691505b602082108103612eb457612eb3612e5a565b5b50919050565b600081905092915050565b6000612ed082612726565b612eda8185612eba565b9350612eea818560208601612742565b80840191505092915050565b6000612f028284612ec5565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612f47826126c6565b9150612f52836126c6565b9250828203905081811115612f6a57612f69612f0d565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b6000612fd9826126c6565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361300b5761300a612f0d565b5b600182019050919050565b600081905092915050565b50565b6000613031600083613016565b915061303c82613021565b600082019050919050565b600061305282613024565b9150819050919050565b60008190508160005260206000209050919050565b6000815461307e81612e89565b6130888186612eba565b945060018216600081146130a357600181146130b8576130eb565b60ff19831686528115158202860193506130eb565b6130c18561305c565b60005b838110156130e3578154818901526001820191506020810190506130c4565b838801955050505b50505092915050565b60006131008284613071565b915081905092915050565b600082825260208201905092915050565b600061312782612726565b613131818561310b565b9350613141818560208601612742565b61314a8161276c565b840191505092915050565b6000602082019050818103600083015261316f818461311c565b905092915050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026131c47fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82613187565b6131ce8683613187565b95508019841693508086168417925050509392505050565b6000819050919050565b600061320b613206613201846126c6565b6131e6565b6126c6565b9050919050565b6000819050919050565b613225836131f0565b61323961323182613212565b848454613194565b825550505050565b600090565b61324e613241565b61325981848461321c565b505050565b5b8181101561327d57613272600082613246565b60018101905061325f565b5050565b601f8211156132c2576132938161305c565b61329c84613177565b810160208510156132ab578190505b6132bf6132b785613177565b83018261325e565b50505b505050565b600082821c905092915050565b60006132e5600019846008026132c7565b1980831691505092915050565b60006132fe83836132d4565b9150826002028217905092915050565b61331782612726565b67ffffffffffffffff8111156133305761332f61288c565b5b61333a8254612e89565b613345828285613281565b600060209050601f8311600181146133785760008415613366578287015190505b61337085826132f2565b8655506133d8565b601f1984166133868661305c565b60005b828110156133ae57848901518255600182019150602085019450602081019050613389565b868310156133cb57848901516133c7601f8916826132d4565b8355505b6001600288020188555050505b505050505050565b60006101408201905081810360008301526133fb818d61311c565b905061340a602083018c6126d0565b613417604083018b6126d0565b613424606083018a6126d0565b61343160808301896126d0565b61343e60a08301886126d0565b61344b60c08301876126d0565b61345860e08301866126d0565b6134666101008301856126d0565b6134746101208301846126d0565b9b9a5050505050505050505050565b600061348e826126c6565b9150613499836126c6565b92508282019050808211156134b1576134b0612f0d565b5b92915050565b600060608201905081810360008301526134d1818661311c565b90506134e06020830185612dd4565b6134ed60408301846126d0565b949350505050565b6000604082019050818103600083015261350f818561311c565b905061351e60208301846126d0565b9392505050565b6000606082019050818103600083015261353f818661311c565b905061354e60208301856126d0565b61355b60408301846126d0565b949350505050565b61356c81612ba5565b82525050565b6000606082019050818103600083015261358c818661311c565b905061359b6020830185612dd4565b6135a86040830184613563565b949350505050565b600061ffff82169050919050565b60006135c9826135b0565b91506135d4836135b0565b92508282026135e2816135b0565b91508082146135f4576135f3612f0d565b5b509291505056fea26469706673582212204418dd29b6374b4a46001059e592e668ef9fba059466ead31d2e33f853f1f14e64736f6c63430008110033",
  "devdoc": {
    "author": "Nguyen Thanh Trung",
    "details": "This implements the auctioneer job",
    "kind": "dev",
    "methods": {},
    "title": "Decentralized Auction",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "This contract is for Decentralized Auction Platform",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 61,
        "contract": "contracts/Auction.sol:Auction",
        "label": "s_auctionList",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_string_storage)dyn_storage"
      },
      {
        "astId": 69,
        "contract": "contracts/Auction.sol:Auction",
        "label": "f",
        "offset": 0,
        "slot": "1",
        "type": "t_uint128"
      },
      {
        "astId": 184,
        "contract": "contracts/Auction.sol:Auction",
        "label": "s_auctionInformations",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_string_memory_ptr,t_struct(AuctionInformation)96_storage)"
      },
      {
        "astId": 190,
        "contract": "contracts/Auction.sol:Auction",
        "label": "s_bidInformations",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_string_memory_ptr,t_array(t_struct(BidInformation)113_storage)dyn_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_string_storage)dyn_storage": {
        "base": "t_string_storage",
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(BidInformation)113_storage)dyn_storage": {
        "base": "t_struct(BidInformation)113_storage",
        "encoding": "dynamic_array",
        "label": "struct Auction.BidInformation[]",
        "numberOfBytes": "32"
      },
      "t_enum(BidderState)77": {
        "encoding": "inplace",
        "label": "enum Auction.BidderState",
        "numberOfBytes": "1"
      },
      "t_mapping(t_string_memory_ptr,t_array(t_struct(BidInformation)113_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct Auction.BidInformation[])",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct Auction.BidInformation[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(BidInformation)113_storage)dyn_storage"
      },
      "t_mapping(t_string_memory_ptr,t_struct(AuctionInformation)96_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct Auction.AuctionInformation)",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct Auction.AuctionInformation)",
        "numberOfBytes": "32",
        "value": "t_struct(AuctionInformation)96_storage"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(AuctionInformation)96_storage": {
        "encoding": "inplace",
        "label": "struct Auction.AuctionInformation",
        "members": [
          {
            "astId": 79,
            "contract": "contracts/Auction.sol:Auction",
            "label": "startRegistrationTime",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 81,
            "contract": "contracts/Auction.sol:Auction",
            "label": "endRegistrationTime",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 83,
            "contract": "contracts/Auction.sol:Auction",
            "label": "startAuctionTime",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 85,
            "contract": "contracts/Auction.sol:Auction",
            "label": "endAuctionTime",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 87,
            "contract": "contracts/Auction.sol:Auction",
            "label": "duePaymentTime",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 89,
            "contract": "contracts/Auction.sol:Auction",
            "label": "registrationFee",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 91,
            "contract": "contracts/Auction.sol:Auction",
            "label": "depositAmount",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 93,
            "contract": "contracts/Auction.sol:Auction",
            "label": "startBid",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          },
          {
            "astId": 95,
            "contract": "contracts/Auction.sol:Auction",
            "label": "priceStep",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "288"
      },
      "t_struct(BidInformation)113_storage": {
        "encoding": "inplace",
        "label": "struct Auction.BidInformation",
        "members": [
          {
            "astId": 107,
            "contract": "contracts/Auction.sol:Auction",
            "label": "bidder",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 109,
            "contract": "contracts/Auction.sol:Auction",
            "label": "bidAmount",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 112,
            "contract": "contracts/Auction.sol:Auction",
            "label": "bidderState",
            "offset": 0,
            "slot": "2",
            "type": "t_enum(BidderState)77"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint128": {
        "encoding": "inplace",
        "label": "uint128",
        "numberOfBytes": "16"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}