{
  "address": "0x8407a7D7881bf42a101a795E1b08F1dbd6B686C5",
  "abi": [
    {
      "inputs": [],
      "name": "Auction__ConfirmationTimeout",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__InvalidAuctionId",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__InvalidAuctionTime",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__InvalidBidAmount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__InvalidDepositAmount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__InvalidDuePaymentTime",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__InvalidPriceStep",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__InvalidRegistrationFee",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__InvalidRegistrationTime",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__InvalidStartAuctionTime",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__InvalidStartBid",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__NotExistAuctionId",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__NotRegisteredBidder",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__NotWinnerOfAuction",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__OutOfAuctionTime",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__OutOfRegistrationTime",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "auctionId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "requirePaymentAmount",
          "type": "uint256"
        }
      ],
      "name": "Auction__RequireAmountToPaymentNotMet",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "auctionId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "requireAmountToRegister",
          "type": "uint256"
        }
      ],
      "name": "Auction__RequireAmountToRegisterNotMet",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "auctionId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "bidder",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "enum Auction.BidderState",
          "name": "bidderState",
          "type": "uint8"
        }
      ],
      "name": "CanceledAuctionResult",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "auctionId",
          "type": "uint256"
        }
      ],
      "name": "ClosedAuction",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "auctionId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "bidder",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "paidAmount",
          "type": "uint256"
        }
      ],
      "name": "ClosedAuctionSucessfully",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "auctionId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startRegistrationTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endRegistrationTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startAuctionTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endAuctionTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "duePaymentTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "registrationFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "depositAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startBid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "priceStep",
          "type": "uint256"
        }
      ],
      "name": "CreatedAuction",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "auctionId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "bidder",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "bidAmount",
          "type": "uint256"
        }
      ],
      "name": "PlacedBid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "auctionId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "bidder",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "enum Auction.BidderState",
          "name": "bidderState",
          "type": "uint8"
        }
      ],
      "name": "RegisteredToBid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "auctionId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "bidder",
          "type": "address"
        }
      ],
      "name": "Withdrew",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "auctionId",
          "type": "uint256"
        }
      ],
      "name": "cancelAuctionResult",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "auctionId",
          "type": "uint256"
        }
      ],
      "name": "closeAuction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "auctionId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startRegistrationTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endRegistrationTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startAuctionTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endAuctionTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "duePaymentTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "registrationFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "depositAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startBid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "priceStep",
          "type": "uint256"
        }
      ],
      "name": "createAuction",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "auctionId",
          "type": "uint256"
        }
      ],
      "name": "getBidInformationByAuctionId",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "bidder",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "bidAmount",
              "type": "uint256"
            },
            {
              "internalType": "enum Auction.BidderState",
              "name": "bidderState",
              "type": "uint8"
            }
          ],
          "internalType": "struct Auction.BidInformation[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "auctionId",
          "type": "uint256"
        }
      ],
      "name": "getHightestBidOfAuction",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "auctionId",
          "type": "uint256"
        }
      ],
      "name": "getIndexOfBidder",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "auctionId",
          "type": "uint256"
        }
      ],
      "name": "getIndexOfHighestBidOfAuction",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "auctionId",
          "type": "uint256"
        }
      ],
      "name": "getIndexOfSecondWinnerOfAuction",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getListAuctionId",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "auctionId",
          "type": "uint256"
        }
      ],
      "name": "getListAuctionInformationById",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startRegistrationTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endRegistrationTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "startAuctionTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endAuctionTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duePaymentTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "registrationFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "depositAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "startBid",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "priceStep",
              "type": "uint256"
            }
          ],
          "internalType": "struct Auction.AuctionInformation",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "auctionId",
          "type": "uint256"
        }
      ],
      "name": "payment",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "auctionId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "bidAmount",
          "type": "uint256"
        }
      ],
      "name": "placeBid",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "auctionId",
          "type": "uint256"
        }
      ],
      "name": "registerToBid",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "transactionHash": "0x4e48ab7a216aec1057d3dc165ab0b8fde484295619fe8184630731c8cd1326c5",
  "receipt": {
    "to": null,
    "from": "0x26594a6109a5154C8E10765C5f15F4B7F54e0420",
    "contractAddress": "0x8407a7D7881bf42a101a795E1b08F1dbd6B686C5",
    "transactionIndex": 33,
    "gasUsed": "2202576",
    "logsBloom": "0x
    "blockHash": "0x38bcaea69978d6c2f4d56b4932836a4bdced46e7e0ab236377c93326c61b8369",
    "transactionHash": "0x4e48ab7a216aec1057d3dc165ab0b8fde484295619fe8184630731c8cd1326c5",
    "logs": [],
    "blockNumber": 8091083,
    "cumulativeGasUsed": "9023517",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 12,
  "solcInputHash": "f1bc6711c3313d1bbe6403dc66d8ae4f",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Auction__ConfirmationTimeout\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__InvalidAuctionId\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__InvalidAuctionTime\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__InvalidBidAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__InvalidDepositAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__InvalidDuePaymentTime\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__InvalidPriceStep\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__InvalidRegistrationFee\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__InvalidRegistrationTime\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__InvalidStartAuctionTime\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__InvalidStartBid\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__NotExistAuctionId\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__NotRegisteredBidder\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__NotWinnerOfAuction\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__OutOfAuctionTime\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__OutOfRegistrationTime\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"auctionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requirePaymentAmount\",\"type\":\"uint256\"}],\"name\":\"Auction__RequireAmountToPaymentNotMet\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"auctionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requireAmountToRegister\",\"type\":\"uint256\"}],\"name\":\"Auction__RequireAmountToRegisterNotMet\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"auctionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum Auction.BidderState\",\"name\":\"bidderState\",\"type\":\"uint8\"}],\"name\":\"CanceledAuctionResult\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"auctionId\",\"type\":\"uint256\"}],\"name\":\"ClosedAuction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"auctionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paidAmount\",\"type\":\"uint256\"}],\"name\":\"ClosedAuctionSucessfully\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"auctionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startRegistrationTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endRegistrationTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startAuctionTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endAuctionTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"duePaymentTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"registrationFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"depositAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startBid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"priceStep\",\"type\":\"uint256\"}],\"name\":\"CreatedAuction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"auctionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bidAmount\",\"type\":\"uint256\"}],\"name\":\"PlacedBid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"auctionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum Auction.BidderState\",\"name\":\"bidderState\",\"type\":\"uint8\"}],\"name\":\"RegisteredToBid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"auctionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"}],\"name\":\"Withdrew\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"auctionId\",\"type\":\"uint256\"}],\"name\":\"cancelAuctionResult\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"auctionId\",\"type\":\"uint256\"}],\"name\":\"closeAuction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"auctionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startRegistrationTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endRegistrationTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startAuctionTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endAuctionTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duePaymentTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"registrationFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"depositAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startBid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priceStep\",\"type\":\"uint256\"}],\"name\":\"createAuction\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"auctionId\",\"type\":\"uint256\"}],\"name\":\"getBidInformationByAuctionId\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"bidAmount\",\"type\":\"uint256\"},{\"internalType\":\"enum Auction.BidderState\",\"name\":\"bidderState\",\"type\":\"uint8\"}],\"internalType\":\"struct Auction.BidInformation[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"auctionId\",\"type\":\"uint256\"}],\"name\":\"getHightestBidOfAuction\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"auctionId\",\"type\":\"uint256\"}],\"name\":\"getIndexOfBidder\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"auctionId\",\"type\":\"uint256\"}],\"name\":\"getIndexOfHighestBidOfAuction\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"auctionId\",\"type\":\"uint256\"}],\"name\":\"getIndexOfSecondWinnerOfAuction\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getListAuctionId\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"auctionId\",\"type\":\"uint256\"}],\"name\":\"getListAuctionInformationById\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startRegistrationTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endRegistrationTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startAuctionTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endAuctionTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duePaymentTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"registrationFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"depositAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startBid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priceStep\",\"type\":\"uint256\"}],\"internalType\":\"struct Auction.AuctionInformation\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"auctionId\",\"type\":\"uint256\"}],\"name\":\"payment\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"auctionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bidAmount\",\"type\":\"uint256\"}],\"name\":\"placeBid\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"auctionId\",\"type\":\"uint256\"}],\"name\":\"registerToBid\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Nguyen Thanh Trung\",\"details\":\"This implements the auctioneer job\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Decentralized Auction\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This contract is for Decentralized Auction Platform\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Auction.sol\":\"Auction\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Auction.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.17;\\r\\n\\r\\nerror Auction__InvalidRegistrationTime();\\r\\nerror Auction__InvalidAuctionTime();\\r\\nerror Auction__InvalidDuePaymentTime();\\r\\nerror Auction__InvalidStartAuctionTime();\\r\\nerror Auction__InvalidRegistrationFee();\\r\\nerror Auction__InvalidDepositAmount();\\r\\nerror Auction__InvalidStartBid();\\r\\nerror Auction__InvalidPriceStep();\\r\\nerror Auction__InvalidDatetime();\\r\\nerror Auction__InvalidAuctionId();\\r\\nerror Auction__OutOfRegistrationTime();\\r\\nerror Auction__RequireAmountToRegisterNotMet(uint256 auctionId, uint256 requireAmountToRegister);\\r\\nerror Auction__OutOfAuctionTime();\\r\\nerror Auction__InvalidBidAmount();\\r\\nerror Auction__NotRegisteredBidder();\\r\\nerror Auction__NotExistAuctionId();\\r\\nerror Auction__ConfirmationTimeout();\\r\\nerror Auction__NotWinnerOfAuction();\\r\\nerror Auction__TransferFailed();\\r\\nerror Auction__RequireAmountToPaymentNotMet(uint256 auctionId, uint256 requirePaymentAmount);\\r\\n\\r\\n/**@title Decentralized Auction\\r\\n * @author Nguyen Thanh Trung\\r\\n * @notice This contract is for Decentralized Auction Platform\\r\\n * @dev This implements the auctioneer job\\r\\n */\\r\\ncontract Auction {\\r\\n    uint256[] private s_auctionList;\\r\\n    uint16 private constant CONFIRMATION_TIME = 300;\\r\\n\\r\\n    enum BidderState {\\r\\n        BIDING, //registered or bidding\\r\\n        WAITING, //top 2 bidder who is watting for top 1 confirm result\\r\\n        WIN, //winner\\r\\n        LOSE, // top 3 or lower\\r\\n        CANCEL, //cencel bid or auction result\\r\\n        WITHDEW, //paid back deposit\\r\\n        PAID // payment complete\\r\\n    }\\r\\n\\r\\n    struct AuctionInformation {\\r\\n        uint256 startRegistrationTime;\\r\\n        uint256 endRegistrationTime;\\r\\n        uint256 startAuctionTime;\\r\\n        uint256 endAuctionTime;\\r\\n        uint256 duePaymentTime;\\r\\n        uint256 registrationFee;\\r\\n        uint256 depositAmount;\\r\\n        uint256 startBid;\\r\\n        uint256 priceStep;\\r\\n    }\\r\\n\\r\\n    struct BidInformation {\\r\\n        address bidder;\\r\\n        uint256 bidAmount;\\r\\n        BidderState bidderState;\\r\\n    }\\r\\n\\r\\n    event CreatedAuction(\\r\\n        uint256 auctionId,\\r\\n        uint256 startRegistrationTime,\\r\\n        uint256 endRegistrationTime,\\r\\n        uint256 startAuctionTime,\\r\\n        uint256 endAuctionTime,\\r\\n        uint256 duePaymentTime,\\r\\n        uint256 registrationFee,\\r\\n        uint256 depositAmount,\\r\\n        uint256 startBid,\\r\\n        uint256 priceStep\\r\\n    );\\r\\n    event PlacedBid(uint256 auctionId, address bidder, uint256 bidAmount);\\r\\n    event RegisteredToBid(uint256 auctionId, address bidder, BidderState bidderState);\\r\\n    event ClosedAuction(uint256 auctionId);\\r\\n    event CanceledAuctionResult(uint256 auctionId, address bidder, BidderState bidderState);\\r\\n    event Withdrew(uint256 auctionId, address bidder);\\r\\n    event ClosedAuctionSucessfully(uint256 auctionId, address bidder, uint256 paidAmount);\\r\\n\\r\\n    mapping(uint256 => AuctionInformation) private s_AuctionInformations;\\r\\n    mapping(uint256 => BidInformation[]) private s_BidInformations;\\r\\n\\r\\n    modifier isVailidAuctionId(uint256 auctionId) {\\r\\n        for (uint256 i = 0; i < s_auctionList.length; i++) {\\r\\n            if (auctionId == s_auctionList[i]) {\\r\\n                revert Auction__InvalidAuctionId();\\r\\n            }\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isExistAuctionId(uint256 auctionId) {\\r\\n        uint256 count = 0;\\r\\n        for (uint256 i = 0; i < s_auctionList.length; i++) {\\r\\n            if (auctionId != s_auctionList[i]) {\\r\\n                count++;\\r\\n            }\\r\\n        }\\r\\n        if (count == s_auctionList.length) {\\r\\n            revert Auction__NotExistAuctionId();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isValidRegistrationTime(uint256 startRegistrationTime, uint256 endRegistrationTime) {\\r\\n        if (\\r\\n            startRegistrationTime < block.timestamp ||\\r\\n            // block.timestamp > endRegistrationTime ||\\r\\n            startRegistrationTime >= endRegistrationTime\\r\\n        ) {\\r\\n            revert Auction__InvalidRegistrationTime();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isValidStartAuctionTime(uint256 endRegistrationTime, uint256 startAuctionTime) {\\r\\n        if (endRegistrationTime >= startAuctionTime) {\\r\\n            revert Auction__InvalidStartAuctionTime();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isValidAuctionTime(uint256 startAuctionTime, uint256 endAuctionTime) {\\r\\n        if (startAuctionTime >= endAuctionTime) {\\r\\n            revert Auction__InvalidAuctionTime();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isValidDuePaymentTime(uint256 endAuctionTime, uint256 duePaymentTime) {\\r\\n        if (endAuctionTime >= duePaymentTime) {\\r\\n            revert Auction__InvalidDuePaymentTime();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isValidRegistrationFee(uint256 registrationFee) {\\r\\n        if (registrationFee <= 0) {\\r\\n            revert Auction__InvalidRegistrationFee();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isValidDepositAmount(uint256 depositAmount) {\\r\\n        if (depositAmount <= 0) {\\r\\n            revert Auction__InvalidDepositAmount();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isValidStartBid(uint256 depositAmount) {\\r\\n        if (depositAmount <= 0) {\\r\\n            revert Auction__InvalidStartBid();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isValidPriceStep(uint256 depositAmount) {\\r\\n        if (depositAmount <= 0) {\\r\\n            revert Auction__InvalidPriceStep();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isAuctionExist(uint256 auctionId) {\\r\\n        uint256 count;\\r\\n        for (uint256 i = 0; i < s_auctionList.length; i++) {\\r\\n            count++;\\r\\n        }\\r\\n        if (count == s_auctionList.length) {\\r\\n            revert Auction__InvalidAuctionId();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isRegistrationTime(uint256 auctionId) {\\r\\n        if (\\r\\n            s_AuctionInformations[auctionId].startRegistrationTime < block.timestamp ||\\r\\n            s_AuctionInformations[auctionId].endRegistrationTime > block.timestamp\\r\\n        ) {\\r\\n            revert Auction__OutOfRegistrationTime();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isAuctionTime(uint256 auctionId) {\\r\\n        if (\\r\\n            s_AuctionInformations[auctionId].startAuctionTime < block.timestamp || s_AuctionInformations[auctionId].endAuctionTime > block.timestamp\\r\\n        ) {\\r\\n            revert Auction__OutOfAuctionTime();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isValidBidAmount(uint256 auctionId, uint256 bidAmount) {\\r\\n        if (\\r\\n            bidAmount < s_AuctionInformations[auctionId].depositAmount ||\\r\\n            bidAmount < getHightestBidOfAuction(auctionId) + s_AuctionInformations[auctionId].priceStep\\r\\n        ) {\\r\\n            revert Auction__InvalidBidAmount();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isRegisteredBidder(uint256 auctionId) {\\r\\n        uint256 count = 0;\\r\\n        for (uint256 i = 0; i < s_BidInformations[auctionId].length; i++) {\\r\\n            if (s_BidInformations[auctionId][i].bidder != msg.sender) {\\r\\n                count++;\\r\\n            }\\r\\n        }\\r\\n        if (count == s_BidInformations[auctionId].length) {\\r\\n            revert Auction__NotRegisteredBidder();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isConfirmationTime(uint256 auctionId) {\\r\\n        if (msg.sender == s_BidInformations[auctionId][getIndexOfHighestBidOfAuction(auctionId)].bidder) {\\r\\n            uint256 dueConfirmationTime = s_AuctionInformations[auctionId].endAuctionTime + CONFIRMATION_TIME;\\r\\n            if (dueConfirmationTime > block.timestamp) {\\r\\n                revert Auction__ConfirmationTimeout();\\r\\n            }\\r\\n        }\\r\\n        if (msg.sender == s_BidInformations[auctionId][getIndexOfSecondWinnerOfAuction(auctionId)].bidder) {\\r\\n            uint256 dueConfirmationTime = s_AuctionInformations[auctionId].endAuctionTime + CONFIRMATION_TIME * 2;\\r\\n            if (dueConfirmationTime > block.timestamp) {\\r\\n                revert Auction__ConfirmationTimeout();\\r\\n            }\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    //check sender is winner or not\\r\\n    modifier isWinnerOfAuction(uint256 auctionId) {\\r\\n        if (s_BidInformations[auctionId][getIndexOfBidder(auctionId)].bidderState != BidderState.WIN) {\\r\\n            revert Auction__NotWinnerOfAuction();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function isValidatedInput(\\r\\n        uint256 auctionId, //need validate\\r\\n        uint256 startRegistrationTime,\\r\\n        uint256 endRegistrationTime,\\r\\n        uint256 startAuctionTime,\\r\\n        uint256 endAuctionTime,\\r\\n        uint256 duePaymentTime,\\r\\n        uint256 registrationFee,\\r\\n        uint256 depositAmount,\\r\\n        uint256 startBid,\\r\\n        uint256 priceStep\\r\\n    )\\r\\n        internal\\r\\n        view\\r\\n        isVailidAuctionId(auctionId)\\r\\n        isValidRegistrationTime(startRegistrationTime, endRegistrationTime)\\r\\n        isValidStartAuctionTime(endRegistrationTime, startAuctionTime)\\r\\n        isValidAuctionTime(startAuctionTime, endAuctionTime)\\r\\n        isValidDuePaymentTime(endAuctionTime, duePaymentTime)\\r\\n        isValidRegistrationFee(registrationFee)\\r\\n        isValidDepositAmount(depositAmount)\\r\\n        isValidStartBid(startBid)\\r\\n        isValidPriceStep(priceStep)\\r\\n        returns (bool)\\r\\n    {\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function createAuction(\\r\\n        uint256 auctionId,\\r\\n        uint256 startRegistrationTime,\\r\\n        uint256 endRegistrationTime,\\r\\n        uint256 startAuctionTime,\\r\\n        uint256 endAuctionTime,\\r\\n        uint256 duePaymentTime,\\r\\n        uint256 registrationFee,\\r\\n        uint256 depositAmount,\\r\\n        uint256 startBid,\\r\\n        uint256 priceStep\\r\\n    ) external payable {\\r\\n        if (\\r\\n            isValidatedInput(\\r\\n                auctionId,\\r\\n                startRegistrationTime,\\r\\n                endRegistrationTime,\\r\\n                startAuctionTime,\\r\\n                endAuctionTime,\\r\\n                duePaymentTime,\\r\\n                registrationFee,\\r\\n                depositAmount,\\r\\n                startBid,\\r\\n                priceStep\\r\\n            )\\r\\n        ) {\\r\\n            AuctionInformation memory auction;\\r\\n            auction.startRegistrationTime = startRegistrationTime;\\r\\n            auction.endRegistrationTime = endRegistrationTime;\\r\\n            auction.startAuctionTime = startAuctionTime;\\r\\n            auction.endAuctionTime = endAuctionTime;\\r\\n            auction.duePaymentTime = duePaymentTime;\\r\\n            auction.registrationFee = registrationFee;\\r\\n            auction.depositAmount = depositAmount;\\r\\n            auction.startBid = startBid;\\r\\n            auction.priceStep = priceStep;\\r\\n            s_AuctionInformations[auctionId] = auction;\\r\\n            s_auctionList.push(auctionId);\\r\\n\\r\\n            emit CreatedAuction(\\r\\n                auctionId,\\r\\n                startRegistrationTime,\\r\\n                endRegistrationTime,\\r\\n                startAuctionTime,\\r\\n                endAuctionTime,\\r\\n                duePaymentTime,\\r\\n                registrationFee,\\r\\n                depositAmount,\\r\\n                startBid,\\r\\n                priceStep\\r\\n            );\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function registerToBid(uint256 auctionId) external payable isVailidAuctionId(auctionId) isRegistrationTime(auctionId) {\\r\\n        uint256 requireAmountToRegister = s_AuctionInformations[auctionId].registrationFee + s_AuctionInformations[auctionId].depositAmount;\\r\\n        if (msg.value < requireAmountToRegister) {\\r\\n            revert Auction__RequireAmountToRegisterNotMet(auctionId, requireAmountToRegister);\\r\\n        }\\r\\n        s_BidInformations[auctionId][s_BidInformations[auctionId].length].bidder = msg.sender;\\r\\n        s_BidInformations[auctionId][s_BidInformations[auctionId].length].bidderState = BidderState.BIDING;\\r\\n        emit RegisteredToBid(auctionId, msg.sender, s_BidInformations[auctionId][s_BidInformations[auctionId].length].bidderState);\\r\\n    }\\r\\n\\r\\n    function getHightestBidOfAuction(uint256 auctionId) public view returns (uint256) {\\r\\n        uint256 highestBid = 0;\\r\\n        for (uint256 i = 0; i < s_BidInformations[auctionId].length; i++) {\\r\\n            if (s_BidInformations[auctionId][i].bidAmount > highestBid) {\\r\\n                highestBid = s_BidInformations[auctionId][i].bidAmount;\\r\\n            }\\r\\n        }\\r\\n        return highestBid;\\r\\n    }\\r\\n\\r\\n    //get index of bidder who is sender\\r\\n    function getIndexOfBidder(uint256 auctionId) public view returns (uint256) {\\r\\n        for (uint256 i = 0; i < s_BidInformations[auctionId].length; i++) {\\r\\n            if (s_BidInformations[auctionId][i].bidder == msg.sender) {\\r\\n                return i;\\r\\n            }\\r\\n        }\\r\\n        return 0;\\r\\n    }\\r\\n\\r\\n    function placeBid(uint256 auctionId, uint256 bidAmount)\\r\\n        external\\r\\n        payable\\r\\n        isAuctionExist(auctionId)\\r\\n        isAuctionTime(auctionId)\\r\\n        isRegisteredBidder(auctionId)\\r\\n        isValidBidAmount(auctionId, bidAmount)\\r\\n    {\\r\\n        s_BidInformations[auctionId][getIndexOfBidder(auctionId)].bidAmount = bidAmount;\\r\\n        emit PlacedBid(auctionId, msg.sender, bidAmount);\\r\\n    }\\r\\n\\r\\n    function getIndexOfHighestBidOfAuction(uint256 auctionId) public view returns (uint256) {\\r\\n        uint256 highestIndex;\\r\\n        for (uint256 i = 0; i < s_BidInformations[auctionId].length; i++) {\\r\\n            if (highestIndex < s_BidInformations[auctionId][i].bidAmount && s_BidInformations[auctionId][i].bidderState != BidderState.CANCEL) {\\r\\n                highestIndex = i;\\r\\n            }\\r\\n        }\\r\\n        return highestIndex;\\r\\n    }\\r\\n\\r\\n    function closeAuction(uint256 auctionId) external isExistAuctionId(auctionId) {\\r\\n        uint256 index = getIndexOfHighestBidOfAuction(auctionId);\\r\\n        s_BidInformations[auctionId][index].bidderState = BidderState.WIN;\\r\\n        uint256 index2 = getIndexOfSecondWinnerOfAuction(auctionId);\\r\\n        s_BidInformations[auctionId][index2].bidderState = BidderState.WAITING;\\r\\n        for (uint256 i = 0; i < s_BidInformations[auctionId].length; i++) {\\r\\n            if (s_BidInformations[auctionId][i].bidderState == BidderState.BIDING) {\\r\\n                s_BidInformations[auctionId][i].bidderState == BidderState.LOSE;\\r\\n            }\\r\\n        }\\r\\n        emit ClosedAuction(auctionId);\\r\\n    }\\r\\n\\r\\n    function cancelAuctionResult(uint256 auctionId) external payable isConfirmationTime(auctionId) isWinnerOfAuction(auctionId) {\\r\\n        if (msg.sender == s_BidInformations[auctionId][getIndexOfHighestBidOfAuction(auctionId)].bidder) {\\r\\n            s_BidInformations[auctionId][getIndexOfHighestBidOfAuction(auctionId)].bidderState = BidderState.CANCEL;\\r\\n            s_BidInformations[auctionId][getIndexOfSecondWinnerOfAuction(auctionId)].bidderState = BidderState.WIN;\\r\\n        } else {\\r\\n            s_BidInformations[auctionId][getIndexOfSecondWinnerOfAuction(auctionId)].bidderState = BidderState.CANCEL;\\r\\n        }\\r\\n        emit CanceledAuctionResult(auctionId, msg.sender, s_BidInformations[auctionId][getIndexOfBidder(auctionId)].bidderState);\\r\\n    }\\r\\n\\r\\n    function getIndexOfSecondWinnerOfAuction(uint256 auctionId) public returns (uint256) {\\r\\n        BidInformation[] storage tempBidInformation = s_BidInformations[auctionId];\\r\\n        uint256 index = getHightestBidOfAuction(auctionId);\\r\\n        require(index < tempBidInformation.length);\\r\\n        tempBidInformation[index] = tempBidInformation[tempBidInformation.length - 1];\\r\\n        tempBidInformation.pop();\\r\\n        uint256 highestIndex;\\r\\n        for (uint256 i = 0; i < tempBidInformation.length; i++) {\\r\\n            if (highestIndex < tempBidInformation[i].bidAmount) {\\r\\n                highestIndex = i;\\r\\n            }\\r\\n        }\\r\\n        return highestIndex;\\r\\n    }\\r\\n\\r\\n    function withdaw(uint256 auctionId) internal {\\r\\n        uint256 depositAmount = s_AuctionInformations[auctionId].depositAmount;\\r\\n        for (uint256 i = 0; i < s_BidInformations[auctionId].length; i++) {\\r\\n            if (s_BidInformations[auctionId][i].bidderState == BidderState.LOSE) {\\r\\n                bool success = payable(s_BidInformations[auctionId][i].bidder).send(depositAmount);\\r\\n                // require(success, \\\"Failed to send Ether\\\");\\r\\n                if (!success) {\\r\\n                    revert Auction__TransferFailed();\\r\\n                } else {\\r\\n                    s_BidInformations[auctionId][i].bidderState = BidderState.WITHDEW;\\r\\n                    emit Withdrew(auctionId, s_BidInformations[auctionId][i].bidder);\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    modifier isValidPaymentAmount(uint256 auctionId) {\\r\\n        uint256 requirePaymentAmount = s_BidInformations[auctionId][getIndexOfBidder(auctionId)].bidAmount -\\r\\n            s_AuctionInformations[auctionId].depositAmount;\\r\\n        if (msg.value != requirePaymentAmount) {\\r\\n            revert Auction__RequireAmountToPaymentNotMet(auctionId, requirePaymentAmount);\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function payment(uint256 auctionId) external payable isWinnerOfAuction(auctionId) isValidPaymentAmount(auctionId) {\\r\\n        s_BidInformations[auctionId][getIndexOfBidder(auctionId)].bidderState = BidderState.PAID;\\r\\n        emit ClosedAuctionSucessfully(auctionId, msg.sender, msg.value);\\r\\n    }\\r\\n\\r\\n    function getListAuctionId() external view returns (uint256[] memory) {\\r\\n        return s_auctionList;\\r\\n    }\\r\\n\\r\\n    function getListAuctionInformationById(uint256 auctionId) external view isExistAuctionId(auctionId) returns (AuctionInformation memory) {\\r\\n        return s_AuctionInformations[auctionId];\\r\\n    }\\r\\n\\r\\n    function getBidInformationByAuctionId(uint256 auctionId) external view isExistAuctionId(auctionId) returns (BidInformation[] memory) {\\r\\n        return s_BidInformations[auctionId];\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xb19e7407a392582d511eac01ae51a3da3b2ba212bcb3c9984ac98c254fccf9b5\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50612716806100206000396000f3fe6080604052600436106100c25760003560e01c8063485f42221161007f5780638b3c99e3116100595780638b3c99e314610263578063c73a090a1461027f578063c832aae8146102bc578063e23d03e6146102d8576100c2565b8063485f4222146101ee578063497c3cc61461020a57806357c90de514610247576100c2565b806319315db2146100c75780631c46583b146100e3578063236ed8f31461010e578063237e81801461013757806332a1b8ad1461017457806342062508146101b1575b600080fd5b6100e160048036038101906100dc9190611f13565b610315565b005b3480156100ef57600080fd5b506100f8610814565b6040516101059190611ffe565b60405180910390f35b34801561011a57600080fd5b5061013560048036038101906101309190611f13565b61086c565b005b34801561014357600080fd5b5061015e60048036038101906101599190611f13565b610b2a565b60405161016b919061202f565b60405180910390f35b34801561018057600080fd5b5061019b60048036038101906101969190611f13565b610c21565b6040516101a8919061202f565b60405180910390f35b3480156101bd57600080fd5b506101d860048036038101906101d39190611f13565b610e29565b6040516101e5919061202f565b60405180910390f35b6102086004803603810190610203919061204a565b610ee6565b005b34801561021657600080fd5b50610231600480360381019061022c9190611f13565b611052565b60405161023e91906122d2565b60405180910390f35b610261600480360381019061025c91906122f4565b6111f9565b005b61027d60048036038101906102789190611f13565b61150c565b005b34801561028b57600080fd5b506102a660048036038101906102a19190611f13565b611709565b6040516102b3919061202f565b60405180910390f35b6102d660048036038101906102d19190611f13565b6117df565b005b3480156102e457600080fd5b506102ff60048036038101906102fa9190611f13565b611ae9565b60405161030c91906123eb565b60405180910390f35b806002600082815260200190815260200160002061033282610b2a565b8154811061034357610342612407565b5b906000526020600020906003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff160361040f57600061012c61ffff1660016000848152602001908152602001600020600301546103d19190612465565b90504281111561040d576040517f49107ff700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505b6002600082815260200190815260200160002061042b82610c21565b8154811061043c5761043b612407565b5b906000526020600020906003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1603610514576000600261012c6104b191906124a7565b61ffff1660016000848152602001908152602001600020600301546104d69190612465565b905042811115610512576040517f49107ff700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505b816002600681111561052957610528612196565b5b6002600083815260200190815260200160002061054583611709565b8154811061055657610555612407565b5b906000526020600020906003020160020160009054906101000a900460ff16600681111561058757610586612196565b5b146105be576040517f7963b56f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600260008481526020019081526020016000206105da84610b2a565b815481106105eb576105ea612407565b5b906000526020600020906003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16036107215760046002600085815260200190815260200160002061066d85610b2a565b8154811061067e5761067d612407565b5b906000526020600020906003020160020160006101000a81548160ff021916908360068111156106b1576106b0612196565b5b021790555060028060008581526020019081526020016000206106d385610c21565b815481106106e4576106e3612407565b5b906000526020600020906003020160020160006101000a81548160ff0219169083600681111561071757610716612196565b5b0217905550610789565b60046002600085815260200190815260200160002061073f85610c21565b815481106107505761074f612407565b5b906000526020600020906003020160020160006101000a81548160ff0219169083600681111561078357610782612196565b5b02179055505b7f1b356cc706b6c1f5ac4ad77235bdfbec3ba7a0bf33c4f3b6130ce36ccac429f98333600260008781526020019081526020016000206107c887611709565b815481106107d9576107d8612407565b5b906000526020600020906003020160020160009054906101000a900460ff1660405161080793929190612502565b60405180910390a1505050565b6060600080548060200260200160405190810160405280929190818152602001828054801561086257602002820191906000526020600020905b81548152602001906001019080831161084e575b5050505050905090565b806000805b6000805490508110156108c5576000818154811061089257610891612407565b5b906000526020600020015483146108b25781806108ae90612539565b9250505b80806108bd90612539565b915050610871565b506000805490508103610904576040517fc1c7f9a100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061090f84610b2a565b90506002806000868152602001908152602001600020828154811061093757610936612407565b5b906000526020600020906003020160020160006101000a81548160ff0219169083600681111561096a57610969612196565b5b0217905550600061097a85610c21565b905060016002600087815260200190815260200160002082815481106109a3576109a2612407565b5b906000526020600020906003020160020160006101000a81548160ff021916908360068111156109d6576109d5612196565b5b021790555060005b6002600087815260200190815260200160002080549050811015610aeb5760006006811115610a1057610a0f612196565b5b600260008881526020019081526020016000208281548110610a3557610a34612407565b5b906000526020600020906003020160020160009054906101000a900460ff166006811115610a6657610a65612196565b5b03610ad85760036006811115610a7f57610a7e612196565b5b600260008881526020019081526020016000208281548110610aa457610aa3612407565b5b906000526020600020906003020160020160009054906101000a900460ff166006811115610ad557610ad4612196565b5b50505b8080610ae390612539565b9150506109de565b507f279c403f9207a168d9dff1055d3fc145405e25a2b26bf9e1f230366f65a651d985604051610b1b919061202f565b60405180910390a15050505050565b60008060005b6002600085815260200190815260200160002080549050811015610c1757600260008581526020019081526020016000208181548110610b7357610b72612407565b5b90600052602060002090600302016001015482108015610bfb575060046006811115610ba257610ba1612196565b5b600260008681526020019081526020016000208281548110610bc757610bc6612407565b5b906000526020600020906003020160020160009054906101000a900460ff166006811115610bf857610bf7612196565b5b14155b15610c04578091505b8080610c0f90612539565b915050610b30565b5080915050919050565b6000806002600084815260200190815260200160002090506000610c4484610e29565b905081805490508110610c5657600080fd5b8160018380549050610c689190612581565b81548110610c7957610c78612407565b5b9060005260206000209060030201828281548110610c9a57610c99612407565b5b90600052602060002090600302016000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600182015481600101556002820160009054906101000a900460ff168160020160006101000a81548160ff02191690836006811115610d5157610d50612196565b5b021790555090505081805480610d6a57610d696125b5565b5b6001900381819060005260206000209060030201600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560018201600090556002820160006101000a81549060ff021916905550509055600080600090505b8380549050811015610e1d57838181548110610ded57610dec612407565b5b906000526020600020906003020160010154821015610e0a578091505b8080610e1590612539565b915050610dce565b50809350505050919050565b6000806000905060005b6002600085815260200190815260200160002080549050811015610edc5781600260008681526020019081526020016000208281548110610e7757610e76612407565b5b9060005260206000209060030201600101541115610ec957600260008581526020019081526020016000208181548110610eb457610eb3612407565b5b90600052602060002090600302016001015491505b8080610ed490612539565b915050610e33565b5080915050919050565b610ef88a8a8a8a8a8a8a8a8a8a611c0b565b1561104657610f05611e8c565b8981600001818152505088816020018181525050878160400181815250508681606001818152505085816080018181525050848160a0018181525050838160c0018181525050828160e0018181525050818161010001818152505080600160008d8152602001908152602001600020600082015181600001556020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005015560c0820151816006015560e08201518160070155610100820151816008015590505060008b90806001815401808255809150506001900390600052602060002001600090919091909150557fbf32ac378b094c01cee4de6b05076ce3628ad0310a89fc49de1a56ff1729b9828b8b8b8b8b8b8b8b8b8b60405161103c9a999897969594939291906125e4565b60405180910390a1505b50505050505050505050565b6060816000805b6000805490508110156110ad576000818154811061107a57611079612407565b5b9060005260206000200154831461109a57818061109690612539565b9250505b80806110a590612539565b915050611059565b5060008054905081036110ec576040517fc1c7f9a100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60026000858152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b828210156111ec57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820160009054906101000a900460ff1660068111156111c7576111c6612196565b5b60068111156111d9576111d8612196565b5b815250508152602001906001019061111f565b5050505092505050919050565b81600080600090505b60008054905081101561123057818061121a90612539565b925050808061122890612539565b915050611202565b50600080549050810361126f576040517f6b9108f800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8342600160008381526020019081526020016000206002015410806112a95750426001600083815260200190815260200160002060030154115b156112e0576040517f355d234800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b846000805b60026000848152602001908152602001600020805490508110156113ae573373ffffffffffffffffffffffffffffffffffffffff1660026000858152602001908152602001600020828154811061133f5761133e612407565b5b906000526020600020906003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461139b57818061139790612539565b9250505b80806113a690612539565b9150506112e5565b50600260008381526020019081526020016000208054905081036113fe576040517f2ffd4a0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8686600160008381526020019081526020016000206006015481108061144c5750600160008381526020019081526020016000206008015461143f83610e29565b6114499190612465565b81105b15611483576040517fabdda60f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b87600260008b81526020019081526020016000206114a08b611709565b815481106114b1576114b0612407565b5b9060005260206000209060030201600101819055507f897645643062f7e221aec187272e76020e3832294b4bf87b8f683c4e3ef8aa6d89338a6040516114f993929190612680565b60405180910390a1505050505050505050565b806002600681111561152157611520612196565b5b6002600083815260200190815260200160002061153d83611709565b8154811061154e5761154d612407565b5b906000526020600020906003020160020160009054906101000a900460ff16600681111561157f5761157e612196565b5b146115b6576040517f7963b56f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8160006001600083815260200190815260200160002060060154600260008481526020019081526020016000206115ec84611709565b815481106115fd576115fc612407565b5b9060005260206000209060030201600101546116199190612581565b90508034146116615781816040517f6b1fb6fc0000000000000000000000000000000000000000000000000000000081526004016116589291906126b7565b60405180910390fd5b60066002600086815260200190815260200160002061167f86611709565b815481106116905761168f612407565b5b906000526020600020906003020160020160006101000a81548160ff021916908360068111156116c3576116c2612196565b5b02179055507f7b5ceba626af36d16f2f87203d946e0ecfb9750e22b32fc636681b9eeeac1fcd8433346040516116fb93929190612680565b60405180910390a150505050565b600080600090505b60026000848152602001908152602001600020805490508110156117d4573373ffffffffffffffffffffffffffffffffffffffff1660026000858152602001908152602001600020828154811061176b5761176a612407565b5b906000526020600020906003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036117c157809150506117da565b80806117cc90612539565b915050611711565b50600090505b919050565b8060005b60008054905081101561185a576000818154811061180457611803612407565b5b90600052602060002001548203611847576040517f6b9108f800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b808061185290612539565b9150506117e3565b508142600160008381526020019081526020016000206000015410806118955750426001600083815260200190815260200160002060010154115b156118cc576040517f60acd97900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600160008581526020019081526020016000206006015460016000868152602001908152602001600020600501546119069190612465565b90508034101561194f5783816040517ffea0958a0000000000000000000000000000000000000000000000000000000081526004016119469291906126b7565b60405180910390fd5b336002600086815260200190815260200160002060026000878152602001908152602001600020805490508154811061198b5761198a612407565b5b906000526020600020906003020160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600060026000868152602001908152602001600020600260008781526020019081526020016000208054905081548110611a1757611a16612407565b5b906000526020600020906003020160020160006101000a81548160ff02191690836006811115611a4a57611a49612196565b5b02179055507fea2bf18cdaf74f8bd6d3fc5c7d0e89165af029961e99d76595e7b03c374aa6b9843360026000888152602001908152602001600020600260008981526020019081526020016000208054905081548110611aad57611aac612407565b5b906000526020600020906003020160020160009054906101000a900460ff16604051611adb93929190612502565b60405180910390a150505050565b611af1611e8c565b816000805b600080549050811015611b4a5760008181548110611b1757611b16612407565b5b90600052602060002001548314611b37578180611b3390612539565b9250505b8080611b4290612539565b915050611af6565b506000805490508103611b89576040517fc1c7f9a100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600085815260200190815260200160002060405180610120016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820154815260200160058201548152602001600682015481526020016007820154815260200160088201548152505092505050919050565b60008a60005b600080549050811015611c885760008181548110611c3257611c31612407565b5b90600052602060002001548203611c75576040517f6b9108f800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8080611c8090612539565b915050611c11565b508a8a42821080611c995750808210155b15611cd0576040517f5e83d5f800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8b8b808210611d0b576040517f7a9971e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8c8c808210611d46576040517fe2049fa500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8d8d808210611d81576040517fcc2116a000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8d60008111611dbc576040517fb25c88c500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8d60008111611df7576040517fb0f07a6300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8d60008111611e32576040517ffb833a9900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8d60008111611e6d576040517fa9ed13a300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60019d50505050505050505050505050509a9950505050505050505050565b6040518061012001604052806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b600080fd5b6000819050919050565b611ef081611edd565b8114611efb57600080fd5b50565b600081359050611f0d81611ee7565b92915050565b600060208284031215611f2957611f28611ed8565b5b6000611f3784828501611efe565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611f7581611edd565b82525050565b6000611f878383611f6c565b60208301905092915050565b6000602082019050919050565b6000611fab82611f40565b611fb58185611f4b565b9350611fc083611f5c565b8060005b83811015611ff1578151611fd88882611f7b565b9750611fe383611f93565b925050600181019050611fc4565b5085935050505092915050565b600060208201905081810360008301526120188184611fa0565b905092915050565b61202981611edd565b82525050565b60006020820190506120446000830184612020565b92915050565b6000806000806000806000806000806101408b8d03121561206e5761206d611ed8565b5b600061207c8d828e01611efe565b9a5050602061208d8d828e01611efe565b995050604061209e8d828e01611efe565b98505060606120af8d828e01611efe565b97505060806120c08d828e01611efe565b96505060a06120d18d828e01611efe565b95505060c06120e28d828e01611efe565b94505060e06120f38d828e01611efe565b9350506101006121058d828e01611efe565b9250506101206121178d828e01611efe565b9150509295989b9194979a5092959850565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061218082612155565b9050919050565b61219081612175565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600781106121d6576121d5612196565b5b50565b60008190506121e7826121c5565b919050565b60006121f7826121d9565b9050919050565b612207816121ec565b82525050565b6060820160008201516122236000850182612187565b5060208201516122366020850182611f6c565b50604082015161224960408501826121fe565b50505050565b600061225b838361220d565b60608301905092915050565b6000602082019050919050565b600061227f82612129565b6122898185612134565b935061229483612145565b8060005b838110156122c55781516122ac888261224f565b97506122b783612267565b925050600181019050612298565b5085935050505092915050565b600060208201905081810360008301526122ec8184612274565b905092915050565b6000806040838503121561230b5761230a611ed8565b5b600061231985828601611efe565b925050602061232a85828601611efe565b9150509250929050565b6101208201600082015161234b6000850182611f6c565b50602082015161235e6020850182611f6c565b5060408201516123716040850182611f6c565b5060608201516123846060850182611f6c565b5060808201516123976080850182611f6c565b5060a08201516123aa60a0850182611f6c565b5060c08201516123bd60c0850182611f6c565b5060e08201516123d060e0850182611f6c565b506101008201516123e5610100850182611f6c565b50505050565b6000610120820190506124016000830184612334565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061247082611edd565b915061247b83611edd565b925082820190508082111561249357612492612436565b5b92915050565b600061ffff82169050919050565b60006124b282612499565b91506124bd83612499565b92508282026124cb81612499565b91508082146124dd576124dc612436565b5b5092915050565b6124ed81612175565b82525050565b6124fc816121ec565b82525050565b60006060820190506125176000830186612020565b61252460208301856124e4565b61253160408301846124f3565b949350505050565b600061254482611edd565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361257657612575612436565b5b600182019050919050565b600061258c82611edd565b915061259783611edd565b92508282039050818111156125af576125ae612436565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b6000610140820190506125fa600083018d612020565b612607602083018c612020565b612614604083018b612020565b612621606083018a612020565b61262e6080830189612020565b61263b60a0830188612020565b61264860c0830187612020565b61265560e0830186612020565b612663610100830185612020565b612671610120830184612020565b9b9a5050505050505050505050565b60006060820190506126956000830186612020565b6126a260208301856124e4565b6126af6040830184612020565b949350505050565b60006040820190506126cc6000830185612020565b6126d96020830184612020565b939250505056fea2646970667358221220e54ace76e71f73b4c99ae24be0b3f2963f1c7c6f1823733fbea88fd801f410ed64736f6c63430008110033",
  "deployedBytecode": "0x6080604052600436106100c25760003560e01c8063485f42221161007f5780638b3c99e3116100595780638b3c99e314610263578063c73a090a1461027f578063c832aae8146102bc578063e23d03e6146102d8576100c2565b8063485f4222146101ee578063497c3cc61461020a57806357c90de514610247576100c2565b806319315db2146100c75780631c46583b146100e3578063236ed8f31461010e578063237e81801461013757806332a1b8ad1461017457806342062508146101b1575b600080fd5b6100e160048036038101906100dc9190611f13565b610315565b005b3480156100ef57600080fd5b506100f8610814565b6040516101059190611ffe565b60405180910390f35b34801561011a57600080fd5b5061013560048036038101906101309190611f13565b61086c565b005b34801561014357600080fd5b5061015e60048036038101906101599190611f13565b610b2a565b60405161016b919061202f565b60405180910390f35b34801561018057600080fd5b5061019b60048036038101906101969190611f13565b610c21565b6040516101a8919061202f565b60405180910390f35b3480156101bd57600080fd5b506101d860048036038101906101d39190611f13565b610e29565b6040516101e5919061202f565b60405180910390f35b6102086004803603810190610203919061204a565b610ee6565b005b34801561021657600080fd5b50610231600480360381019061022c9190611f13565b611052565b60405161023e91906122d2565b60405180910390f35b610261600480360381019061025c91906122f4565b6111f9565b005b61027d60048036038101906102789190611f13565b61150c565b005b34801561028b57600080fd5b506102a660048036038101906102a19190611f13565b611709565b6040516102b3919061202f565b60405180910390f35b6102d660048036038101906102d19190611f13565b6117df565b005b3480156102e457600080fd5b506102ff60048036038101906102fa9190611f13565b611ae9565b60405161030c91906123eb565b60405180910390f35b806002600082815260200190815260200160002061033282610b2a565b8154811061034357610342612407565b5b906000526020600020906003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff160361040f57600061012c61ffff1660016000848152602001908152602001600020600301546103d19190612465565b90504281111561040d576040517f49107ff700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505b6002600082815260200190815260200160002061042b82610c21565b8154811061043c5761043b612407565b5b906000526020600020906003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1603610514576000600261012c6104b191906124a7565b61ffff1660016000848152602001908152602001600020600301546104d69190612465565b905042811115610512576040517f49107ff700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505b816002600681111561052957610528612196565b5b6002600083815260200190815260200160002061054583611709565b8154811061055657610555612407565b5b906000526020600020906003020160020160009054906101000a900460ff16600681111561058757610586612196565b5b146105be576040517f7963b56f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600260008481526020019081526020016000206105da84610b2a565b815481106105eb576105ea612407565b5b906000526020600020906003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16036107215760046002600085815260200190815260200160002061066d85610b2a565b8154811061067e5761067d612407565b5b906000526020600020906003020160020160006101000a81548160ff021916908360068111156106b1576106b0612196565b5b021790555060028060008581526020019081526020016000206106d385610c21565b815481106106e4576106e3612407565b5b906000526020600020906003020160020160006101000a81548160ff0219169083600681111561071757610716612196565b5b0217905550610789565b60046002600085815260200190815260200160002061073f85610c21565b815481106107505761074f612407565b5b906000526020600020906003020160020160006101000a81548160ff0219169083600681111561078357610782612196565b5b02179055505b7f1b356cc706b6c1f5ac4ad77235bdfbec3ba7a0bf33c4f3b6130ce36ccac429f98333600260008781526020019081526020016000206107c887611709565b815481106107d9576107d8612407565b5b906000526020600020906003020160020160009054906101000a900460ff1660405161080793929190612502565b60405180910390a1505050565b6060600080548060200260200160405190810160405280929190818152602001828054801561086257602002820191906000526020600020905b81548152602001906001019080831161084e575b5050505050905090565b806000805b6000805490508110156108c5576000818154811061089257610891612407565b5b906000526020600020015483146108b25781806108ae90612539565b9250505b80806108bd90612539565b915050610871565b506000805490508103610904576040517fc1c7f9a100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061090f84610b2a565b90506002806000868152602001908152602001600020828154811061093757610936612407565b5b906000526020600020906003020160020160006101000a81548160ff0219169083600681111561096a57610969612196565b5b0217905550600061097a85610c21565b905060016002600087815260200190815260200160002082815481106109a3576109a2612407565b5b906000526020600020906003020160020160006101000a81548160ff021916908360068111156109d6576109d5612196565b5b021790555060005b6002600087815260200190815260200160002080549050811015610aeb5760006006811115610a1057610a0f612196565b5b600260008881526020019081526020016000208281548110610a3557610a34612407565b5b906000526020600020906003020160020160009054906101000a900460ff166006811115610a6657610a65612196565b5b03610ad85760036006811115610a7f57610a7e612196565b5b600260008881526020019081526020016000208281548110610aa457610aa3612407565b5b906000526020600020906003020160020160009054906101000a900460ff166006811115610ad557610ad4612196565b5b50505b8080610ae390612539565b9150506109de565b507f279c403f9207a168d9dff1055d3fc145405e25a2b26bf9e1f230366f65a651d985604051610b1b919061202f565b60405180910390a15050505050565b60008060005b6002600085815260200190815260200160002080549050811015610c1757600260008581526020019081526020016000208181548110610b7357610b72612407565b5b90600052602060002090600302016001015482108015610bfb575060046006811115610ba257610ba1612196565b5b600260008681526020019081526020016000208281548110610bc757610bc6612407565b5b906000526020600020906003020160020160009054906101000a900460ff166006811115610bf857610bf7612196565b5b14155b15610c04578091505b8080610c0f90612539565b915050610b30565b5080915050919050565b6000806002600084815260200190815260200160002090506000610c4484610e29565b905081805490508110610c5657600080fd5b8160018380549050610c689190612581565b81548110610c7957610c78612407565b5b9060005260206000209060030201828281548110610c9a57610c99612407565b5b90600052602060002090600302016000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600182015481600101556002820160009054906101000a900460ff168160020160006101000a81548160ff02191690836006811115610d5157610d50612196565b5b021790555090505081805480610d6a57610d696125b5565b5b6001900381819060005260206000209060030201600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560018201600090556002820160006101000a81549060ff021916905550509055600080600090505b8380549050811015610e1d57838181548110610ded57610dec612407565b5b906000526020600020906003020160010154821015610e0a578091505b8080610e1590612539565b915050610dce565b50809350505050919050565b6000806000905060005b6002600085815260200190815260200160002080549050811015610edc5781600260008681526020019081526020016000208281548110610e7757610e76612407565b5b9060005260206000209060030201600101541115610ec957600260008581526020019081526020016000208181548110610eb457610eb3612407565b5b90600052602060002090600302016001015491505b8080610ed490612539565b915050610e33565b5080915050919050565b610ef88a8a8a8a8a8a8a8a8a8a611c0b565b1561104657610f05611e8c565b8981600001818152505088816020018181525050878160400181815250508681606001818152505085816080018181525050848160a0018181525050838160c0018181525050828160e0018181525050818161010001818152505080600160008d8152602001908152602001600020600082015181600001556020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005015560c0820151816006015560e08201518160070155610100820151816008015590505060008b90806001815401808255809150506001900390600052602060002001600090919091909150557fbf32ac378b094c01cee4de6b05076ce3628ad0310a89fc49de1a56ff1729b9828b8b8b8b8b8b8b8b8b8b60405161103c9a999897969594939291906125e4565b60405180910390a1505b50505050505050505050565b6060816000805b6000805490508110156110ad576000818154811061107a57611079612407565b5b9060005260206000200154831461109a57818061109690612539565b9250505b80806110a590612539565b915050611059565b5060008054905081036110ec576040517fc1c7f9a100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60026000858152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b828210156111ec57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820160009054906101000a900460ff1660068111156111c7576111c6612196565b5b60068111156111d9576111d8612196565b5b815250508152602001906001019061111f565b5050505092505050919050565b81600080600090505b60008054905081101561123057818061121a90612539565b925050808061122890612539565b915050611202565b50600080549050810361126f576040517f6b9108f800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8342600160008381526020019081526020016000206002015410806112a95750426001600083815260200190815260200160002060030154115b156112e0576040517f355d234800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b846000805b60026000848152602001908152602001600020805490508110156113ae573373ffffffffffffffffffffffffffffffffffffffff1660026000858152602001908152602001600020828154811061133f5761133e612407565b5b906000526020600020906003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461139b57818061139790612539565b9250505b80806113a690612539565b9150506112e5565b50600260008381526020019081526020016000208054905081036113fe576040517f2ffd4a0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8686600160008381526020019081526020016000206006015481108061144c5750600160008381526020019081526020016000206008015461143f83610e29565b6114499190612465565b81105b15611483576040517fabdda60f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b87600260008b81526020019081526020016000206114a08b611709565b815481106114b1576114b0612407565b5b9060005260206000209060030201600101819055507f897645643062f7e221aec187272e76020e3832294b4bf87b8f683c4e3ef8aa6d89338a6040516114f993929190612680565b60405180910390a1505050505050505050565b806002600681111561152157611520612196565b5b6002600083815260200190815260200160002061153d83611709565b8154811061154e5761154d612407565b5b906000526020600020906003020160020160009054906101000a900460ff16600681111561157f5761157e612196565b5b146115b6576040517f7963b56f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8160006001600083815260200190815260200160002060060154600260008481526020019081526020016000206115ec84611709565b815481106115fd576115fc612407565b5b9060005260206000209060030201600101546116199190612581565b90508034146116615781816040517f6b1fb6fc0000000000000000000000000000000000000000000000000000000081526004016116589291906126b7565b60405180910390fd5b60066002600086815260200190815260200160002061167f86611709565b815481106116905761168f612407565b5b906000526020600020906003020160020160006101000a81548160ff021916908360068111156116c3576116c2612196565b5b02179055507f7b5ceba626af36d16f2f87203d946e0ecfb9750e22b32fc636681b9eeeac1fcd8433346040516116fb93929190612680565b60405180910390a150505050565b600080600090505b60026000848152602001908152602001600020805490508110156117d4573373ffffffffffffffffffffffffffffffffffffffff1660026000858152602001908152602001600020828154811061176b5761176a612407565b5b906000526020600020906003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036117c157809150506117da565b80806117cc90612539565b915050611711565b50600090505b919050565b8060005b60008054905081101561185a576000818154811061180457611803612407565b5b90600052602060002001548203611847576040517f6b9108f800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b808061185290612539565b9150506117e3565b508142600160008381526020019081526020016000206000015410806118955750426001600083815260200190815260200160002060010154115b156118cc576040517f60acd97900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600160008581526020019081526020016000206006015460016000868152602001908152602001600020600501546119069190612465565b90508034101561194f5783816040517ffea0958a0000000000000000000000000000000000000000000000000000000081526004016119469291906126b7565b60405180910390fd5b336002600086815260200190815260200160002060026000878152602001908152602001600020805490508154811061198b5761198a612407565b5b906000526020600020906003020160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600060026000868152602001908152602001600020600260008781526020019081526020016000208054905081548110611a1757611a16612407565b5b906000526020600020906003020160020160006101000a81548160ff02191690836006811115611a4a57611a49612196565b5b02179055507fea2bf18cdaf74f8bd6d3fc5c7d0e89165af029961e99d76595e7b03c374aa6b9843360026000888152602001908152602001600020600260008981526020019081526020016000208054905081548110611aad57611aac612407565b5b906000526020600020906003020160020160009054906101000a900460ff16604051611adb93929190612502565b60405180910390a150505050565b611af1611e8c565b816000805b600080549050811015611b4a5760008181548110611b1757611b16612407565b5b90600052602060002001548314611b37578180611b3390612539565b9250505b8080611b4290612539565b915050611af6565b506000805490508103611b89576040517fc1c7f9a100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600085815260200190815260200160002060405180610120016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820154815260200160058201548152602001600682015481526020016007820154815260200160088201548152505092505050919050565b60008a60005b600080549050811015611c885760008181548110611c3257611c31612407565b5b90600052602060002001548203611c75576040517f6b9108f800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8080611c8090612539565b915050611c11565b508a8a42821080611c995750808210155b15611cd0576040517f5e83d5f800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8b8b808210611d0b576040517f7a9971e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8c8c808210611d46576040517fe2049fa500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8d8d808210611d81576040517fcc2116a000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8d60008111611dbc576040517fb25c88c500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8d60008111611df7576040517fb0f07a6300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8d60008111611e32576040517ffb833a9900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8d60008111611e6d576040517fa9ed13a300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60019d50505050505050505050505050509a9950505050505050505050565b6040518061012001604052806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b600080fd5b6000819050919050565b611ef081611edd565b8114611efb57600080fd5b50565b600081359050611f0d81611ee7565b92915050565b600060208284031215611f2957611f28611ed8565b5b6000611f3784828501611efe565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611f7581611edd565b82525050565b6000611f878383611f6c565b60208301905092915050565b6000602082019050919050565b6000611fab82611f40565b611fb58185611f4b565b9350611fc083611f5c565b8060005b83811015611ff1578151611fd88882611f7b565b9750611fe383611f93565b925050600181019050611fc4565b5085935050505092915050565b600060208201905081810360008301526120188184611fa0565b905092915050565b61202981611edd565b82525050565b60006020820190506120446000830184612020565b92915050565b6000806000806000806000806000806101408b8d03121561206e5761206d611ed8565b5b600061207c8d828e01611efe565b9a5050602061208d8d828e01611efe565b995050604061209e8d828e01611efe565b98505060606120af8d828e01611efe565b97505060806120c08d828e01611efe565b96505060a06120d18d828e01611efe565b95505060c06120e28d828e01611efe565b94505060e06120f38d828e01611efe565b9350506101006121058d828e01611efe565b9250506101206121178d828e01611efe565b9150509295989b9194979a5092959850565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061218082612155565b9050919050565b61219081612175565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600781106121d6576121d5612196565b5b50565b60008190506121e7826121c5565b919050565b60006121f7826121d9565b9050919050565b612207816121ec565b82525050565b6060820160008201516122236000850182612187565b5060208201516122366020850182611f6c565b50604082015161224960408501826121fe565b50505050565b600061225b838361220d565b60608301905092915050565b6000602082019050919050565b600061227f82612129565b6122898185612134565b935061229483612145565b8060005b838110156122c55781516122ac888261224f565b97506122b783612267565b925050600181019050612298565b5085935050505092915050565b600060208201905081810360008301526122ec8184612274565b905092915050565b6000806040838503121561230b5761230a611ed8565b5b600061231985828601611efe565b925050602061232a85828601611efe565b9150509250929050565b6101208201600082015161234b6000850182611f6c565b50602082015161235e6020850182611f6c565b5060408201516123716040850182611f6c565b5060608201516123846060850182611f6c565b5060808201516123976080850182611f6c565b5060a08201516123aa60a0850182611f6c565b5060c08201516123bd60c0850182611f6c565b5060e08201516123d060e0850182611f6c565b506101008201516123e5610100850182611f6c565b50505050565b6000610120820190506124016000830184612334565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061247082611edd565b915061247b83611edd565b925082820190508082111561249357612492612436565b5b92915050565b600061ffff82169050919050565b60006124b282612499565b91506124bd83612499565b92508282026124cb81612499565b91508082146124dd576124dc612436565b5b5092915050565b6124ed81612175565b82525050565b6124fc816121ec565b82525050565b60006060820190506125176000830186612020565b61252460208301856124e4565b61253160408301846124f3565b949350505050565b600061254482611edd565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361257657612575612436565b5b600182019050919050565b600061258c82611edd565b915061259783611edd565b92508282039050818111156125af576125ae612436565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b6000610140820190506125fa600083018d612020565b612607602083018c612020565b612614604083018b612020565b612621606083018a612020565b61262e6080830189612020565b61263b60a0830188612020565b61264860c0830187612020565b61265560e0830186612020565b612663610100830185612020565b612671610120830184612020565b9b9a5050505050505050505050565b60006060820190506126956000830186612020565b6126a260208301856124e4565b6126af6040830184612020565b949350505050565b60006040820190506126cc6000830185612020565b6126d96020830184612020565b939250505056fea2646970667358221220e54ace76e71f73b4c99ae24be0b3f2963f1c7c6f1823733fbea88fd801f410ed64736f6c63430008110033",
  "devdoc": {
    "author": "Nguyen Thanh Trung",
    "details": "This implements the auctioneer job",
    "kind": "dev",
    "methods": {},
    "title": "Decentralized Auction",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "This contract is for Decentralized Auction Platform",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 53,
        "contract": "contracts/Auction.sol:Auction",
        "label": "s_auctionList",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_uint256)dyn_storage"
      },
      {
        "astId": 162,
        "contract": "contracts/Auction.sol:Auction",
        "label": "s_AuctionInformations",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint256,t_struct(AuctionInformation)83_storage)"
      },
      {
        "astId": 168,
        "contract": "contracts/Auction.sol:Auction",
        "label": "s_BidInformations",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_uint256,t_array(t_struct(BidInformation)91_storage)dyn_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(BidInformation)91_storage)dyn_storage": {
        "base": "t_struct(BidInformation)91_storage",
        "encoding": "dynamic_array",
        "label": "struct Auction.BidInformation[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_enum(BidderState)64": {
        "encoding": "inplace",
        "label": "enum Auction.BidderState",
        "numberOfBytes": "1"
      },
      "t_mapping(t_uint256,t_array(t_struct(BidInformation)91_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Auction.BidInformation[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(BidInformation)91_storage)dyn_storage"
      },
      "t_mapping(t_uint256,t_struct(AuctionInformation)83_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Auction.AuctionInformation)",
        "numberOfBytes": "32",
        "value": "t_struct(AuctionInformation)83_storage"
      },
      "t_struct(AuctionInformation)83_storage": {
        "encoding": "inplace",
        "label": "struct Auction.AuctionInformation",
        "members": [
          {
            "astId": 66,
            "contract": "contracts/Auction.sol:Auction",
            "label": "startRegistrationTime",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 68,
            "contract": "contracts/Auction.sol:Auction",
            "label": "endRegistrationTime",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 70,
            "contract": "contracts/Auction.sol:Auction",
            "label": "startAuctionTime",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 72,
            "contract": "contracts/Auction.sol:Auction",
            "label": "endAuctionTime",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 74,
            "contract": "contracts/Auction.sol:Auction",
            "label": "duePaymentTime",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 76,
            "contract": "contracts/Auction.sol:Auction",
            "label": "registrationFee",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 78,
            "contract": "contracts/Auction.sol:Auction",
            "label": "depositAmount",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 80,
            "contract": "contracts/Auction.sol:Auction",
            "label": "startBid",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          },
          {
            "astId": 82,
            "contract": "contracts/Auction.sol:Auction",
            "label": "priceStep",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "288"
      },
      "t_struct(BidInformation)91_storage": {
        "encoding": "inplace",
        "label": "struct Auction.BidInformation",
        "members": [
          {
            "astId": 85,
            "contract": "contracts/Auction.sol:Auction",
            "label": "bidder",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 87,
            "contract": "contracts/Auction.sol:Auction",
            "label": "bidAmount",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 90,
            "contract": "contracts/Auction.sol:Auction",
            "label": "bidderState",
            "offset": 0,
            "slot": "2",
            "type": "t_enum(BidderState)64"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}