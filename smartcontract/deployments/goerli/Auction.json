{
  "address": "0xE4975B0deB48e4Eff7Fd982D48DF19a7BB6F9454",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Auction__AlreadyRegisteredBidder",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__BidderRetractedBid",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__InvalidAuctionId",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__InvalidAuctionTime",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__InvalidBidAmount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__InvalidDepositAmount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__InvalidDuePaymentTime",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__InvalidPriceStep",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__InvalidRegistrationFee",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__InvalidRegistrationTime",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__InvalidStartAuctionTime",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__InvalidStartBid",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__NoProceeds",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__NotExistAuctionId",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__NotRegisteredBidder",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__OutOfAuctionTime",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__OutOfRegistrationTime",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "requireAmountToRegister",
          "type": "uint256"
        }
      ],
      "name": "Auction__RequireAmountToRegisterNotMet",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__WithdrawDeposit",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "bidder",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "enum Auction.BidderState",
          "name": "bidderState",
          "type": "uint8"
        }
      ],
      "name": "CanceledAuctionResult",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        }
      ],
      "name": "ClosedAuction",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "bidder",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "paidAmount",
          "type": "uint256"
        }
      ],
      "name": "ClosedAuctionSuccessful",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startRegistrationTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endRegistrationTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startAuctionTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endAuctionTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "duePaymentTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "registrationFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "depositAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startBid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "priceStep",
          "type": "uint256"
        }
      ],
      "name": "CreatedAuction",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "bidder",
          "type": "address"
        }
      ],
      "name": "Paidback",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "bidder",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "bidAmount",
          "type": "uint256"
        }
      ],
      "name": "PlacedBid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "bidder",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "enum Auction.BidderState",
          "name": "bidderState",
          "type": "uint8"
        }
      ],
      "name": "RegisteredToBid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "bidder",
          "type": "address"
        }
      ],
      "name": "RetractedBid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "bidder",
          "type": "address"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        }
      ],
      "name": "cancelAuctionResult",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "startRegistrationTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endRegistrationTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startAuctionTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endAuctionTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "duePaymentTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "registrationFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "depositAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startBid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "priceStep",
          "type": "uint256"
        }
      ],
      "name": "createAuction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        }
      ],
      "name": "getAuctionInformationById",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startRegistrationTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endRegistrationTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "startAuctionTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endAuctionTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duePaymentTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "registrationFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "depositAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "startBid",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "priceStep",
              "type": "uint256"
            }
          ],
          "internalType": "struct Auction.AuctionInformation",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        }
      ],
      "name": "getBidInformationByAuctionId",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "bidder",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "bidAmount",
              "type": "uint256"
            },
            {
              "internalType": "enum Auction.BidderState",
              "name": "bidderState",
              "type": "uint8"
            }
          ],
          "internalType": "struct Auction.BidInformation[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        }
      ],
      "name": "getHighestBidOfAuction",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getListAuctionId",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getProceeds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        }
      ],
      "name": "payment",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "bidAmount",
          "type": "uint256"
        }
      ],
      "name": "placeBid",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        }
      ],
      "name": "registerToBid",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        }
      ],
      "name": "retractBid",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        }
      ],
      "name": "withdrawDeposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawProceeds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xc58e1826ce1b334d75355619d132e682490add71029b63a357db5103037215fd",
  "receipt": {
    "to": null,
    "from": "0xa3EAe56afb3C7Ad3A45ef2B6aCd3e6e8267AB8b4",
    "contractAddress": "0xE4975B0deB48e4Eff7Fd982D48DF19a7BB6F9454",
    "transactionIndex": 0,
    "gasUsed": "3131327",
    "logsBloom": "0x
    "blockHash": "0x6b6f5b22bc4d78da377f6c840296291fd3d3b85f40694972d34cb00787b5138e",
    "transactionHash": "0xc58e1826ce1b334d75355619d132e682490add71029b63a357db5103037215fd",
    "logs": [],
    "blockNumber": 8397176,
    "cumulativeGasUsed": "3131327",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 5,
  "solcInputHash": "f9fae4d705e67950bae699a189e39447",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Auction__AlreadyRegisteredBidder\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__BidderRetractedBid\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__InvalidAuctionId\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__InvalidAuctionTime\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__InvalidBidAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__InvalidDepositAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__InvalidDuePaymentTime\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__InvalidPriceStep\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__InvalidRegistrationFee\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__InvalidRegistrationTime\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__InvalidStartAuctionTime\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__InvalidStartBid\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__NoProceeds\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__NotExistAuctionId\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__NotRegisteredBidder\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__OutOfAuctionTime\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__OutOfRegistrationTime\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requireAmountToRegister\",\"type\":\"uint256\"}],\"name\":\"Auction__RequireAmountToRegisterNotMet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__WithdrawDeposit\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum Auction.BidderState\",\"name\":\"bidderState\",\"type\":\"uint8\"}],\"name\":\"CanceledAuctionResult\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"}],\"name\":\"ClosedAuction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paidAmount\",\"type\":\"uint256\"}],\"name\":\"ClosedAuctionSuccessful\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startRegistrationTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endRegistrationTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startAuctionTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endAuctionTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"duePaymentTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"registrationFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"depositAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startBid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"priceStep\",\"type\":\"uint256\"}],\"name\":\"CreatedAuction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"}],\"name\":\"Paidback\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bidAmount\",\"type\":\"uint256\"}],\"name\":\"PlacedBid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum Auction.BidderState\",\"name\":\"bidderState\",\"type\":\"uint8\"}],\"name\":\"RegisteredToBid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"}],\"name\":\"RetractedBid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"}],\"name\":\"cancelAuctionResult\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"startRegistrationTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endRegistrationTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startAuctionTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endAuctionTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duePaymentTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"registrationFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"depositAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startBid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priceStep\",\"type\":\"uint256\"}],\"name\":\"createAuction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"}],\"name\":\"getAuctionInformationById\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startRegistrationTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endRegistrationTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startAuctionTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endAuctionTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duePaymentTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"registrationFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"depositAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startBid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priceStep\",\"type\":\"uint256\"}],\"internalType\":\"struct Auction.AuctionInformation\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"}],\"name\":\"getBidInformationByAuctionId\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"bidAmount\",\"type\":\"uint256\"},{\"internalType\":\"enum Auction.BidderState\",\"name\":\"bidderState\",\"type\":\"uint8\"}],\"internalType\":\"struct Auction.BidInformation[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"}],\"name\":\"getHighestBidOfAuction\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getListAuctionId\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProceeds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"}],\"name\":\"payment\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"bidAmount\",\"type\":\"uint256\"}],\"name\":\"placeBid\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"}],\"name\":\"registerToBid\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"}],\"name\":\"retractBid\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"}],\"name\":\"withdrawDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawProceeds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Decentralized Auction Platform Team\",\"details\":\"This implements the auctioneer job\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Decentralized Auction Platform\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This contract is for Decentralized Auction Platform\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Auction.sol\":\"Auction\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Auction.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.17;\\r\\n\\r\\nerror Auction__InvalidRegistrationTime();\\r\\nerror Auction__InvalidAuctionTime();\\r\\nerror Auction__InvalidDuePaymentTime();\\r\\nerror Auction__InvalidStartAuctionTime();\\r\\nerror Auction__InvalidRegistrationFee();\\r\\nerror Auction__InvalidDepositAmount();\\r\\nerror Auction__InvalidStartBid();\\r\\nerror Auction__InvalidPriceStep();\\r\\nerror Auction__InvalidDatetime();\\r\\nerror Auction__InvalidAuctionId();\\r\\nerror Auction__OutOfRegistrationTime();\\r\\nerror Auction__RequireAmountToRegisterNotMet(\\r\\n    string auctionId,\\r\\n    uint256 value,\\r\\n    uint256 requireAmountToRegister\\r\\n);\\r\\nerror Auction__OutOfAuctionTime();\\r\\nerror Auction__InvalidBidAmount();\\r\\nerror Auction__NotRegisteredBidder();\\r\\nerror Auction__NotExistAuctionId();\\r\\nerror Auction__ConfirmationTimeout();\\r\\nerror Auction__NotWinnerOfAuction();\\r\\nerror Auction__TransferFailed();\\r\\nerror Auction__RequireAmountToPaymentNotMet(string auctionId, uint256 requirePaymentAmount);\\r\\nerror Auction__NotExistAuction();\\r\\nerror Auction__NotOwner();\\r\\nerror Auction__AlreadyRegisteredBidder();\\r\\nerror Auction__NoProceeds();\\r\\nerror Auction__WithdrawDeposit();\\r\\nerror Auction__BidderRetractedBid();\\r\\n\\r\\n/**@title Decentralized Auction Platform\\r\\n * @author Decentralized Auction Platform Team\\r\\n * @notice This contract is for Decentralized Auction Platform\\r\\n * @dev This implements the auctioneer job\\r\\n */\\r\\ncontract Auction {\\r\\n    string[] private s_auctionList;\\r\\n    uint256 private s_proceeds;\\r\\n    address private immutable i_owner;\\r\\n    uint16 private constant CONFIRMATION_TIME = 300;\\r\\n    enum BidderState {\\r\\n        BIDING, // registered or bidding\\r\\n        RETRACT, // retract bid\\r\\n        CANCEL, // cancel auction result\\r\\n        WITHDRAW, // withdaw deposit\\r\\n        PAYMENT // payment complete\\r\\n    }\\r\\n\\r\\n    struct AuctionInformation {\\r\\n        uint256 startRegistrationTime;\\r\\n        uint256 endRegistrationTime;\\r\\n        uint256 startAuctionTime;\\r\\n        uint256 endAuctionTime;\\r\\n        uint256 duePaymentTime;\\r\\n        uint256 registrationFee;\\r\\n        uint256 depositAmount;\\r\\n        uint256 startBid;\\r\\n        uint256 priceStep;\\r\\n    }\\r\\n\\r\\n    constructor() {\\r\\n        i_owner = msg.sender;\\r\\n    }\\r\\n\\r\\n    struct BidInformation {\\r\\n        address bidder;\\r\\n        uint256 bidAmount;\\r\\n        BidderState bidderState;\\r\\n    }\\r\\n\\r\\n    event CreatedAuction(\\r\\n        string auctionId,\\r\\n        uint256 startRegistrationTime,\\r\\n        uint256 endRegistrationTime,\\r\\n        uint256 startAuctionTime,\\r\\n        uint256 endAuctionTime,\\r\\n        uint256 duePaymentTime,\\r\\n        uint256 registrationFee,\\r\\n        uint256 depositAmount,\\r\\n        uint256 startBid,\\r\\n        uint256 priceStep\\r\\n    );\\r\\n    event PlacedBid(string auctionId, address bidder, uint256 bidAmount);\\r\\n    event RetractedBid(string auctionId, address bidder);\\r\\n    event RegisteredToBid(string auctionId, address bidder, BidderState bidderState);\\r\\n    event ClosedAuction(string auctionId);\\r\\n    event CanceledAuctionResult(string auctionId, address bidder, BidderState bidderState);\\r\\n    event Paidback(string auctionId, address bidder);\\r\\n    event ClosedAuctionSuccessful(string auctionId, address bidder, uint256 paidAmount);\\r\\n    event Withdraw(string auctionId, address bidder);\\r\\n\\r\\n    mapping(string => AuctionInformation) private s_auctionInformations;\\r\\n    mapping(string => BidInformation[]) private s_bidInformations;\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        if (msg.sender != i_owner) revert Auction__NotOwner();\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isVailidAuctionId(string memory auctionId) {\\r\\n        for (uint256 i = 0; i < s_auctionList.length; i++) {\\r\\n            if (\\r\\n                keccak256(abi.encodePacked(auctionId)) ==\\r\\n                keccak256(abi.encodePacked(s_auctionList[i]))\\r\\n            ) {\\r\\n                revert Auction__InvalidAuctionId();\\r\\n            }\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isExistAuctionId(string memory auctionId) {\\r\\n        uint256 count = 0;\\r\\n        for (uint256 i = 0; i < s_auctionList.length; i++) {\\r\\n            if (\\r\\n                keccak256(abi.encodePacked(auctionId)) !=\\r\\n                keccak256(abi.encodePacked(s_auctionList[i]))\\r\\n            ) {\\r\\n                count++;\\r\\n            }\\r\\n        }\\r\\n        if (count == s_auctionList.length) {\\r\\n            revert Auction__NotExistAuctionId();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isValidRegistrationTime(uint256 startRegistrationTime, uint256 endRegistrationTime) {\\r\\n        if (\\r\\n            startRegistrationTime < block.timestamp || startRegistrationTime >= endRegistrationTime\\r\\n        ) {\\r\\n            revert Auction__InvalidRegistrationTime();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isValidStartAuctionTime(uint256 endRegistrationTime, uint256 startAuctionTime) {\\r\\n        if (endRegistrationTime >= startAuctionTime) {\\r\\n            revert Auction__InvalidStartAuctionTime();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isValidAuctionTime(uint256 startAuctionTime, uint256 endAuctionTime) {\\r\\n        if (startAuctionTime >= endAuctionTime) {\\r\\n            revert Auction__InvalidAuctionTime();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isValidDuePaymentTime(uint256 endAuctionTime, uint256 duePaymentTime) {\\r\\n        if (endAuctionTime >= duePaymentTime) {\\r\\n            revert Auction__InvalidDuePaymentTime();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isValidRegistrationFee(uint256 registrationFee) {\\r\\n        if (registrationFee <= 0) {\\r\\n            revert Auction__InvalidRegistrationFee();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isValidDepositAmount(uint256 depositAmount) {\\r\\n        if (depositAmount <= 0) {\\r\\n            revert Auction__InvalidDepositAmount();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isValidStartBid(uint256 depositAmount) {\\r\\n        if (depositAmount <= 0) {\\r\\n            revert Auction__InvalidStartBid();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isValidPriceStep(uint256 depositAmount) {\\r\\n        if (depositAmount <= 0) {\\r\\n            revert Auction__InvalidPriceStep();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isRegistrationTime(string memory auctionId) {\\r\\n        if (\\r\\n            s_auctionInformations[auctionId].startRegistrationTime > block.timestamp ||\\r\\n            s_auctionInformations[auctionId].endRegistrationTime < block.timestamp\\r\\n        ) {\\r\\n            revert Auction__OutOfRegistrationTime();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isAuctionTime(string memory auctionId) {\\r\\n        if (\\r\\n            s_auctionInformations[auctionId].startAuctionTime > block.timestamp ||\\r\\n            s_auctionInformations[auctionId].endAuctionTime < block.timestamp\\r\\n        ) {\\r\\n            revert Auction__OutOfAuctionTime();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isValidBidAmount(string memory auctionId, uint256 bidAmount) {\\r\\n        if (\\r\\n            bidAmount < s_auctionInformations[auctionId].startBid ||\\r\\n            bidAmount <\\r\\n            getHighestBidOfAuction(auctionId) + s_auctionInformations[auctionId].priceStep\\r\\n        ) {\\r\\n            revert Auction__InvalidBidAmount();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isRegisteredBidder(string memory auctionId) {\\r\\n        uint256 count = 0;\\r\\n        for (uint256 i = 0; i < s_bidInformations[auctionId].length; i++) {\\r\\n            if (\\r\\n                s_bidInformations[auctionId][i].bidder != msg.sender &&\\r\\n                s_bidInformations[auctionId][i].bidderState == BidderState.BIDING\\r\\n            ) {\\r\\n                count++;\\r\\n            }\\r\\n        }\\r\\n        if (count == s_bidInformations[auctionId].length) {\\r\\n            revert Auction__NotRegisteredBidder();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n    modifier isAlreadyRegisteredBidder(string memory auctionId) {\\r\\n        for (uint256 i = 0; i < s_bidInformations[auctionId].length; i++) {\\r\\n            if (s_bidInformations[auctionId][i].bidder == msg.sender) {\\r\\n                revert Auction__AlreadyRegisteredBidder();\\r\\n            }\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n    modifier isConfirmationTime(string memory auctionId) {\\r\\n        if (\\r\\n            msg.sender == s_bidInformations[auctionId][getIndexOfBidder(auctionId)].bidder &&\\r\\n            s_bidInformations[auctionId][getIndexOfBidder(auctionId)].bidAmount ==\\r\\n            s_bidInformations[auctionId][getIndexOfFirstOfAuction(auctionId)].bidAmount\\r\\n        ) {\\r\\n            uint256 dueConfirmationTime = s_auctionInformations[auctionId].endAuctionTime +\\r\\n                CONFIRMATION_TIME;\\r\\n            if (dueConfirmationTime < block.timestamp) {\\r\\n                revert Auction__ConfirmationTimeout();\\r\\n            }\\r\\n        }\\r\\n        _;\\r\\n        if (\\r\\n            msg.sender == s_bidInformations[auctionId][getIndexOfBidder(auctionId)].bidder &&\\r\\n            s_bidInformations[auctionId][getIndexOfBidder(auctionId)].bidAmount ==\\r\\n            s_bidInformations[auctionId][getIndexOfSecondOfAuction(auctionId)].bidAmount\\r\\n        ) {\\r\\n            uint256 dueConfirmationTime = s_auctionInformations[auctionId].endAuctionTime +\\r\\n                CONFIRMATION_TIME *\\r\\n                2;\\r\\n            if (dueConfirmationTime < block.timestamp) {\\r\\n                revert Auction__ConfirmationTimeout();\\r\\n            }\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isWinnerOfAuction(string memory auctionId) {\\r\\n        uint256 index = getIndexOfBidder(auctionId);\\r\\n        if (index == 9999) {\\r\\n            revert Auction__NotRegisteredBidder();\\r\\n        }\\r\\n        _;\\r\\n        if (\\r\\n            s_bidInformations[auctionId][index].bidderState != BidderState.BIDING ||\\r\\n            s_bidInformations[auctionId][index].bidAmount != getHighestBidOfAuction(auctionId)\\r\\n        ) {\\r\\n            revert Auction__NotWinnerOfAuction();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n    modifier isValidPaymentAmount(string memory auctionId) {\\r\\n        uint256 requirePaymentAmount = s_bidInformations[auctionId][getIndexOfBidder(auctionId)]\\r\\n            .bidAmount - s_auctionInformations[auctionId].depositAmount;\\r\\n        if (msg.value < requirePaymentAmount) {\\r\\n            revert Auction__RequireAmountToPaymentNotMet(auctionId, requirePaymentAmount);\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isWithdrawDeposit(string memory auctionId) {\\r\\n        if (\\r\\n            s_bidInformations[auctionId][getIndexOfBidder(auctionId)].bidderState ==\\r\\n            BidderState.WITHDRAW ||\\r\\n            s_bidInformations[auctionId][getIndexOfBidder(auctionId)].bidderState ==\\r\\n            BidderState.CANCEL ||\\r\\n            s_bidInformations[auctionId][getIndexOfBidder(auctionId)].bidderState ==\\r\\n            BidderState.RETRACT ||\\r\\n            s_bidInformations[auctionId][getIndexOfFirstOfAuction(auctionId)].bidder == msg.sender\\r\\n        ) {\\r\\n            revert Auction__WithdrawDeposit();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function isValidatedInput(\\r\\n        string memory auctionId,\\r\\n        uint256 startRegistrationTime,\\r\\n        uint256 endRegistrationTime,\\r\\n        uint256 startAuctionTime,\\r\\n        uint256 endAuctionTime,\\r\\n        uint256 duePaymentTime,\\r\\n        uint256 registrationFee,\\r\\n        uint256 depositAmount,\\r\\n        uint256 startBid,\\r\\n        uint256 priceStep\\r\\n    )\\r\\n        internal\\r\\n        view\\r\\n        isVailidAuctionId(auctionId)\\r\\n        isValidRegistrationTime(startRegistrationTime, endRegistrationTime)\\r\\n        isValidStartAuctionTime(endRegistrationTime, startAuctionTime)\\r\\n        isValidAuctionTime(startAuctionTime, endAuctionTime)\\r\\n        isValidDuePaymentTime(endAuctionTime, duePaymentTime)\\r\\n        isValidRegistrationFee(registrationFee)\\r\\n        isValidDepositAmount(depositAmount)\\r\\n        isValidStartBid(startBid)\\r\\n        isValidPriceStep(priceStep)\\r\\n        returns (bool)\\r\\n    {\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function createAuction(\\r\\n        string memory auctionId,\\r\\n        uint256 startRegistrationTime,\\r\\n        uint256 endRegistrationTime,\\r\\n        uint256 startAuctionTime,\\r\\n        uint256 endAuctionTime,\\r\\n        uint256 duePaymentTime,\\r\\n        uint256 registrationFee,\\r\\n        uint256 depositAmount,\\r\\n        uint256 startBid,\\r\\n        uint256 priceStep\\r\\n    ) external {\\r\\n        if (\\r\\n            isValidatedInput(\\r\\n                auctionId,\\r\\n                startRegistrationTime,\\r\\n                endRegistrationTime,\\r\\n                startAuctionTime,\\r\\n                endAuctionTime,\\r\\n                duePaymentTime,\\r\\n                registrationFee,\\r\\n                depositAmount,\\r\\n                startBid,\\r\\n                priceStep\\r\\n            )\\r\\n        ) {\\r\\n            AuctionInformation memory auction;\\r\\n            auction.startRegistrationTime = startRegistrationTime;\\r\\n            auction.endRegistrationTime = endRegistrationTime;\\r\\n            auction.startAuctionTime = startAuctionTime;\\r\\n            auction.endAuctionTime = endAuctionTime;\\r\\n            auction.duePaymentTime = duePaymentTime;\\r\\n            auction.registrationFee = registrationFee;\\r\\n            auction.depositAmount = depositAmount;\\r\\n            auction.startBid = startBid;\\r\\n            auction.priceStep = priceStep;\\r\\n            s_auctionInformations[auctionId] = auction;\\r\\n            s_auctionList.push(auctionId);\\r\\n\\r\\n            emit CreatedAuction(\\r\\n                auctionId,\\r\\n                startRegistrationTime,\\r\\n                endRegistrationTime,\\r\\n                startAuctionTime,\\r\\n                endAuctionTime,\\r\\n                duePaymentTime,\\r\\n                registrationFee,\\r\\n                depositAmount,\\r\\n                startBid,\\r\\n                priceStep\\r\\n            );\\r\\n        }\\r\\n    }\\r\\n\\r\\n    modifier isStateBidding(string memory auctionId) {\\r\\n        if (\\r\\n            s_bidInformations[auctionId][getIndexOfBidder(auctionId)].bidderState !=\\r\\n            BidderState.BIDING\\r\\n        ) {\\r\\n            revert Auction__BidderRetractedBid();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function registerToBid(string memory auctionId)\\r\\n        external\\r\\n        payable\\r\\n        isExistAuctionId(auctionId)\\r\\n        isRegistrationTime(auctionId)\\r\\n        isAlreadyRegisteredBidder(auctionId)\\r\\n    {\\r\\n        uint256 requireAmountToRegister = s_auctionInformations[auctionId].registrationFee +\\r\\n            s_auctionInformations[auctionId].depositAmount;\\r\\n        if (msg.value != requireAmountToRegister) {\\r\\n            revert Auction__RequireAmountToRegisterNotMet(\\r\\n                auctionId,\\r\\n                msg.value,\\r\\n                requireAmountToRegister\\r\\n            );\\r\\n        }\\r\\n        BidInformation memory bidInformation;\\r\\n        bidInformation.bidder = msg.sender;\\r\\n        bidInformation.bidderState = BidderState.BIDING;\\r\\n        s_bidInformations[auctionId].push(bidInformation);\\r\\n        s_proceeds += s_auctionInformations[auctionId].registrationFee;\\r\\n        emit RegisteredToBid(auctionId, bidInformation.bidder, bidInformation.bidderState);\\r\\n    }\\r\\n\\r\\n    function placeBid(string memory auctionId, uint256 bidAmount)\\r\\n        external\\r\\n        payable\\r\\n        isExistAuctionId(auctionId)\\r\\n        isAuctionTime(auctionId)\\r\\n        isRegisteredBidder(auctionId)\\r\\n        isValidBidAmount(auctionId, bidAmount)\\r\\n        isStateBidding(auctionId)\\r\\n    {\\r\\n        s_bidInformations[auctionId][getIndexOfBidder(auctionId)].bidAmount = bidAmount;\\r\\n        emit PlacedBid(auctionId, msg.sender, bidAmount);\\r\\n    }\\r\\n\\r\\n    function retractBid(string memory auctionId)\\r\\n        external\\r\\n        payable\\r\\n        isExistAuctionId(auctionId)\\r\\n        isAuctionTime(auctionId)\\r\\n        isRegisteredBidder(auctionId)\\r\\n        isStateBidding(auctionId)\\r\\n    {\\r\\n        s_bidInformations[auctionId][getIndexOfBidder(auctionId)].bidderState = BidderState.RETRACT;\\r\\n        s_proceeds += s_auctionInformations[auctionId].depositAmount;\\r\\n        emit RetractedBid(auctionId, msg.sender);\\r\\n    }\\r\\n\\r\\n    function cancelAuctionResult(string memory auctionId)\\r\\n        external\\r\\n        payable\\r\\n    // isWinnerOfAuction(auctionId)\\r\\n    // isRegisteredBidder(auctionId)\\r\\n    // isConfirmationTime(auctionId)\\r\\n    {\\r\\n        // if (\\r\\n        //     s_bidInformations[auctionId][getIndexOfBidder(auctionId)].bidAmount ==\\r\\n        //     s_bidInformations[auctionId][getIndexOfFirstOfAuction(auctionId)].bidAmount ||\\r\\n        //     s_bidInformations[auctionId][getIndexOfBidder(auctionId)].bidAmount ==\\r\\n        //     s_bidInformations[auctionId][getIndexOfSecondOfAuction(auctionId)].bidAmount\\r\\n        // ) {\\r\\n        s_bidInformations[auctionId][getIndexOfBidder(auctionId)].bidderState = BidderState.CANCEL;\\r\\n        s_proceeds += s_auctionInformations[auctionId].depositAmount;\\r\\n        // }\\r\\n        emit CanceledAuctionResult(\\r\\n            auctionId,\\r\\n            msg.sender,\\r\\n            s_bidInformations[auctionId][getIndexOfBidder(auctionId)].bidderState\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function withdraw() external onlyOwner {\\r\\n        (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\r\\n        require(success, \\\"Transfer failed\\\");\\r\\n    }\\r\\n\\r\\n    function withdrawProceeds() external onlyOwner {\\r\\n        if (s_proceeds <= 0) {\\r\\n            revert Auction__NoProceeds();\\r\\n        }\\r\\n        (bool success, ) = i_owner.call{value: s_proceeds}(\\\"\\\");\\r\\n        require(success, \\\"Transfer failed\\\");\\r\\n    }\\r\\n\\r\\n    function withdrawDeposit(string memory auctionId) external isWithdrawDeposit(auctionId) {\\r\\n        uint256 value = s_auctionInformations[auctionId].depositAmount;\\r\\n        s_bidInformations[auctionId][getIndexOfBidder(auctionId)].bidderState = BidderState\\r\\n            .WITHDRAW;\\r\\n        (bool success, ) = payable(msg.sender).call{value: value}(\\\"\\\");\\r\\n        require(success, \\\"Transfer failed\\\");\\r\\n        emit Withdraw(auctionId, msg.sender);\\r\\n    }\\r\\n\\r\\n    function payment(\\r\\n        string memory auctionId // isWinnerOfAuction(auctionId)\\r\\n    ) external payable // isValidPaymentAmount(auctionId)\\r\\n    {\\r\\n        s_bidInformations[auctionId][getIndexOfBidder(auctionId)].bidderState = BidderState.PAYMENT;\\r\\n        s_proceeds += s_auctionInformations[auctionId].depositAmount;\\r\\n        s_proceeds += msg.value;\\r\\n        emit ClosedAuctionSuccessful(auctionId, msg.sender, msg.value);\\r\\n    }\\r\\n\\r\\n    function getHighestBidOfAuction(string memory auctionId) public view returns (uint256) {\\r\\n        uint256 highestBid = 0;\\r\\n        for (uint256 i = 0; i < s_bidInformations[auctionId].length; i++) {\\r\\n            if (\\r\\n                s_bidInformations[auctionId][i].bidAmount > highestBid &&\\r\\n                s_bidInformations[auctionId][i].bidderState != BidderState.RETRACT &&\\r\\n                s_bidInformations[auctionId][i].bidderState != BidderState.CANCEL\\r\\n            ) {\\r\\n                highestBid = s_bidInformations[auctionId][i].bidAmount;\\r\\n            }\\r\\n        }\\r\\n        return highestBid;\\r\\n    }\\r\\n\\r\\n    //get index of bidder who is sender\\r\\n    function getIndexOfBidder(string memory auctionId) internal view returns (uint256) {\\r\\n        for (uint256 i = 0; i < s_bidInformations[auctionId].length; i++) {\\r\\n            if (s_bidInformations[auctionId][i].bidder == msg.sender) {\\r\\n                return i;\\r\\n            }\\r\\n        }\\r\\n        return 9999;\\r\\n    }\\r\\n\\r\\n    function getIndexOfSecondOfAuction(string memory auctionId) private returns (uint256) {\\r\\n        BidInformation[] storage tempBidInformation = s_bidInformations[auctionId];\\r\\n        uint256 index = getHighestBidOfAuction(auctionId);\\r\\n        require(index < tempBidInformation.length);\\r\\n        tempBidInformation[index] = tempBidInformation[tempBidInformation.length - 1];\\r\\n        tempBidInformation.pop();\\r\\n        uint256 highestIndex;\\r\\n        for (uint256 i = 0; i < tempBidInformation.length; i++) {\\r\\n            if (\\r\\n                highestIndex < tempBidInformation[i].bidAmount &&\\r\\n                tempBidInformation[i].bidderState == BidderState.BIDING\\r\\n            ) {\\r\\n                highestIndex = i;\\r\\n            }\\r\\n        }\\r\\n        return highestIndex;\\r\\n    }\\r\\n\\r\\n    function getIndexOfFirstOfAuction(string memory auctionId) private view returns (uint256) {\\r\\n        uint256 highestIndex;\\r\\n        for (uint256 i = 0; i < s_bidInformations[auctionId].length; i++) {\\r\\n            if (\\r\\n                highestIndex < s_bidInformations[auctionId][i].bidAmount &&\\r\\n                s_bidInformations[auctionId][i].bidderState != BidderState.CANCEL &&\\r\\n                s_bidInformations[auctionId][i].bidderState != BidderState.RETRACT\\r\\n            ) {\\r\\n                highestIndex = i;\\r\\n            }\\r\\n        }\\r\\n        return highestIndex;\\r\\n    }\\r\\n\\r\\n    function getListAuctionId() external view returns (string[] memory) {\\r\\n        return s_auctionList;\\r\\n    }\\r\\n\\r\\n    function getAuctionInformationById(string memory auctionId)\\r\\n        external\\r\\n        view\\r\\n        isExistAuctionId(auctionId)\\r\\n        returns (AuctionInformation memory)\\r\\n    {\\r\\n        return s_auctionInformations[auctionId];\\r\\n    }\\r\\n\\r\\n    function getBidInformationByAuctionId(string memory auctionId)\\r\\n        external\\r\\n        view\\r\\n        isExistAuctionId(auctionId)\\r\\n        returns (BidInformation[] memory)\\r\\n    {\\r\\n        return s_bidInformations[auctionId];\\r\\n    }\\r\\n\\r\\n    function getBalance() external view returns (uint256) {\\r\\n        return address(this).balance;\\r\\n    }\\r\\n\\r\\n    function getOwner() public view returns (address) {\\r\\n        return i_owner;\\r\\n    }\\r\\n\\r\\n    function getProceeds() public view returns (uint256) {\\r\\n        return s_proceeds;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xad9dd557b665ca273400a14f1c0691a589239f85eec9ceab5285b8cf4e63e5c8\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250506080516137eb61007c6000396000818161044a015281816104d10152818161114a01528181611170015261123301526137eb6000f3fe6080604052600436106100f35760003560e01c806383bd95871161008a578063af6fd4a711610059578063af6fd4a7146102ea578063daddf71714610306578063e4ece6b014610322578063f05981fa1461034b576100f3565b806383bd958714610261578063893d20e81461028c5780639038e693146102b7578063a7eaa241146102ce576100f3565b80636821fe22116100c65780636821fe22146101a257806373e295ea146101df5780637ea717ff146101fb5780638166697114610238576100f3565b806312065fe0146100f85780631c46583b146101235780633ccfd60b1461014e578063615adb6a14610165575b600080fd5b34801561010457600080fd5b5061010d610367565b60405161011a91906128fd565b60405180910390f35b34801561012f57600080fd5b5061013861036f565b6040516101459190612a6a565b60405180910390f35b34801561015a57600080fd5b50610163610448565b005b34801561017157600080fd5b5061018c60048036038101906101879190612bd5565b61059c565b6040516101999190612ce4565b60405180910390f35b3480156101ae57600080fd5b506101c960048036038101906101c49190612bd5565b610714565b6040516101d69190612ea9565b60405180910390f35b6101f960048036038101906101f49190612bd5565b610911565b005b34801561020757600080fd5b50610222600480360381019061021d9190612bd5565b610ddd565b60405161022f91906128fd565b60405180910390f35b34801561024457600080fd5b5061025f600480360381019061025a9190612ef7565b610fb9565b005b34801561026d57600080fd5b5061027661113c565b60405161028391906128fd565b60405180910390f35b34801561029857600080fd5b506102a1611146565b6040516102ae9190613001565b60405180910390f35b3480156102c357600080fd5b506102cc61116e565b005b6102e860048036038101906102e3919061301c565b611300565b005b61030460048036038101906102ff9190612bd5565b61180e565b005b610320600480360381019061031b9190612bd5565b611911565b005b34801561032e57600080fd5b5061034960048036038101906103449190612bd5565b611dde565b005b61036560048036038101906103609190612bd5565b6121bf565b005b600047905090565b60606000805480602002602001604051908101604052809291908181526020016000905b8282101561043f5783829060005260206000200180546103b2906130a7565b80601f01602080910402602001604051908101604052809291908181526020018280546103de906130a7565b801561042b5780601f106104005761010080835404028352916020019161042b565b820191906000526020600020905b81548152906001019060200180831161040e57829003601f168201915b505050505081526020019060010190610393565b50505050905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104cd576040517f3e77415600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161051390613109565b60006040518083038185875af1925050503d8060008114610550576040519150601f19603f3d011682016040523d82523d6000602084013e610555565b606091505b5050905080610599576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105909061317b565b60405180910390fd5b50565b6105a461284f565b816000805b60008054905081101561064857600081815481106105ca576105c961319b565b5b906000526020600020016040516020016105e4919061326d565b604051602081830303815290604052805190602001208360405160200161060b91906132b5565b6040516020818303038152906040528051906020012014610635578180610631906132fb565b9250505b8080610640906132fb565b9150506105a9565b506000805490508103610687576040517fc1c7f9a100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60028460405161069791906132b5565b908152602001604051809103902060405180610120016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820154815260200160058201548152602001600682015481526020016007820154815260200160088201548152505092505050919050565b6060816000805b6000805490508110156107ba576000818154811061073c5761073b61319b565b5b90600052602060002001604051602001610756919061326d565b604051602081830303815290604052805190602001208360405160200161077d91906132b5565b60405160208183030381529060405280519060200120146107a75781806107a3906132fb565b9250505b80806107b2906132fb565b91505061071b565b5060008054905081036107f9576040517fc1c7f9a100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60038460405161080991906132b5565b9081526020016040518091039020805480602002602001604051908101604052809291908181526020016000905b8282101561090457838290600052602060002090600302016040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820160009054906101000a900460ff1660048111156108df576108de612d6d565b5b60048111156108f1576108f0612d6d565b5b8152505081526020019060010190610837565b5050505092505050919050565b806000805b6000805490508110156109b557600081815481106109375761093661319b565b5b90600052602060002001604051602001610951919061326d565b604051602081830303815290604052805190602001208360405160200161097891906132b5565b60405160208183030381529060405280519060200120146109a257818061099e906132fb565b9250505b80806109ad906132fb565b915050610916565b5060008054905081036109f4576040517fc1c7f9a100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8242600282604051610a0691906132b5565b9081526020016040518091039020600201541180610a44575042600282604051610a3091906132b5565b908152602001604051809103902060030154105b15610a7b576040517f355d234800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b836000805b600383604051610a9091906132b5565b908152602001604051809103902080549050811015610bdf573373ffffffffffffffffffffffffffffffffffffffff16600384604051610ad091906132b5565b90815260200160405180910390208281548110610af057610aef61319b565b5b906000526020600020906003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614158015610bb8575060006004811115610b5557610b54612d6d565b5b600384604051610b6591906132b5565b90815260200160405180910390208281548110610b8557610b8461319b565b5b906000526020600020906003020160020160009054906101000a900460ff166004811115610bb657610bb5612d6d565b5b145b15610bcc578180610bc8906132fb565b9250505b8080610bd7906132fb565b915050610a80565b50600382604051610bf091906132b5565b9081526020016040518091039020805490508103610c3a576040517f2ffd4a0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8560006004811115610c4f57610c4e612d6d565b5b600382604051610c5f91906132b5565b9081526020016040518091039020610c76836122ff565b81548110610c8757610c8661319b565b5b906000526020600020906003020160020160009054906101000a900460ff166004811115610cb857610cb7612d6d565b5b14610cef576040517fd5556f7600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600388604051610d0191906132b5565b9081526020016040518091039020610d18896122ff565b81548110610d2957610d2861319b565b5b906000526020600020906003020160020160006101000a81548160ff02191690836004811115610d5c57610d5b612d6d565b5b0217905550600287604051610d7191906132b5565b90815260200160405180910390206006015460016000828254610d949190613343565b925050819055507f34a0a77595fe52e5375623399b257387f5de5854fd9f102d981e81214835a4108733604051610dcc9291906133b0565b60405180910390a150505050505050565b6000806000905060005b600384604051610df791906132b5565b908152602001604051809103902080549050811015610faf5781600385604051610e2191906132b5565b90815260200160405180910390208281548110610e4157610e4061319b565b5b906000526020600020906003020160010154118015610ed3575060016004811115610e6f57610e6e612d6d565b5b600385604051610e7f91906132b5565b90815260200160405180910390208281548110610e9f57610e9e61319b565b5b906000526020600020906003020160020160009054906101000a900460ff166004811115610ed057610ecf612d6d565b5b14155b8015610f52575060026004811115610eee57610eed612d6d565b5b600385604051610efe91906132b5565b90815260200160405180910390208281548110610f1e57610f1d61319b565b5b906000526020600020906003020160020160009054906101000a900460ff166004811115610f4f57610f4e612d6d565b5b14155b15610f9c57600384604051610f6791906132b5565b90815260200160405180910390208181548110610f8757610f8661319b565b5b90600052602060002090600302016001015491505b8080610fa7906132fb565b915050610de7565b5080915050919050565b610fcb8a8a8a8a8a8a8a8a8a8a6123ec565b1561113057610fd861284f565b8981600001818152505088816020018181525050878160400181815250508681606001818152505085816080018181525050848160a0018181525050838160c0018181525050828160e001818152505081816101000181815250508060028c60405161104491906132b5565b9081526020016040518091039020600082015181600001556020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005015560c0820151816006015560e08201518160070155610100820151816008015590505060008b9080600181540180825580915050600190039060005260206000200160009091909190915090816110e49190613577565b507fe5549b694e8ea655c231f5d255127cf7c0f14997a411ccdf6577e3b9911674428b8b8b8b8b8b8b8b8b8b6040516111269a99989796959493929190613649565b60405180910390a1505b50505050505050505050565b6000600154905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146111f3576040517f3e77415600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006001541161122f576040517f9bfe640f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1660015460405161127790613109565b60006040518083038185875af1925050503d80600081146112b4576040519150601f19603f3d011682016040523d82523d6000602084013e6112b9565b606091505b50509050806112fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112f49061317b565b60405180910390fd5b50565b816000805b6000805490508110156113a457600081815481106113265761132561319b565b5b90600052602060002001604051602001611340919061326d565b604051602081830303815290604052805190602001208360405160200161136791906132b5565b604051602081830303815290604052805190602001201461139157818061138d906132fb565b9250505b808061139c906132fb565b915050611305565b5060008054905081036113e3576040517fc1c7f9a100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b83426002826040516113f591906132b5565b908152602001604051809103902060020154118061143357504260028260405161141f91906132b5565b908152602001604051809103902060030154105b1561146a576040517f355d234800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b846000805b60038360405161147f91906132b5565b9081526020016040518091039020805490508110156115ce573373ffffffffffffffffffffffffffffffffffffffff166003846040516114bf91906132b5565b908152602001604051809103902082815481106114df576114de61319b565b5b906000526020600020906003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141580156115a757506000600481111561154457611543612d6d565b5b60038460405161155491906132b5565b908152602001604051809103902082815481106115745761157361319b565b5b906000526020600020906003020160020160009054906101000a900460ff1660048111156115a5576115a4612d6d565b5b145b156115bb5781806115b7906132fb565b9250505b80806115c6906132fb565b91505061146f565b506003826040516115df91906132b5565b9081526020016040518091039020805490508103611629576040517f2ffd4a0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b868660028260405161163b91906132b5565b90815260200160405180910390206007015481108061168d575060028260405161166591906132b5565b90815260200160405180910390206008015461168083610ddd565b61168a9190613343565b81105b156116c4576040517fabdda60f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b88600060048111156116d9576116d8612d6d565b5b6003826040516116e991906132b5565b9081526020016040518091039020611700836122ff565b815481106117115761171061319b565b5b906000526020600020906003020160020160009054906101000a900460ff16600481111561174257611741612d6d565b5b14611779576040517fd5556f7600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8860038b60405161178a91906132b5565b90815260200160405180910390206117a18c6122ff565b815481106117b2576117b161319b565b5b9060005260206000209060030201600101819055507fe886416816c234ad984c20a40b4480b0e1dc31a4da3edbab50626e575b7dbe058a338b6040516117fa939291906136ec565b60405180910390a150505050505050505050565b600460038260405161182091906132b5565b9081526020016040518091039020611837836122ff565b815481106118485761184761319b565b5b906000526020600020906003020160020160006101000a81548160ff0219169083600481111561187b5761187a612d6d565b5b021790555060028160405161189091906132b5565b908152602001604051809103902060060154600160008282546118b39190613343565b9250508190555034600160008282546118cc9190613343565b925050819055507f4e7fdc53ffd8c036522f5a17b0e77cafac1fb09ae2222e4f34b0b95eb3fa3ef5813334604051611906939291906136ec565b60405180910390a150565b806000805b6000805490508110156119b557600081815481106119375761193661319b565b5b90600052602060002001604051602001611951919061326d565b604051602081830303815290604052805190602001208360405160200161197891906132b5565b60405160208183030381529060405280519060200120146119a257818061199e906132fb565b9250505b80806119ad906132fb565b915050611916565b5060008054905081036119f4576040517fc1c7f9a100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8242600282604051611a0691906132b5565b9081526020016040518091039020600001541180611a44575042600282604051611a3091906132b5565b908152602001604051809103902060010154105b15611a7b576040517f60acd97900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8360005b600382604051611a8f91906132b5565b908152602001604051809103902080549050811015611b81573373ffffffffffffffffffffffffffffffffffffffff16600383604051611acf91906132b5565b90815260200160405180910390208281548110611aef57611aee61319b565b5b906000526020600020906003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603611b6e576040517fd0335efa00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8080611b79906132fb565b915050611a7f565b506000600286604051611b9491906132b5565b908152602001604051809103902060060154600287604051611bb691906132b5565b908152602001604051809103902060050154611bd29190613343565b9050803414611c1c578534826040517fa60b61bc000000000000000000000000000000000000000000000000000000008152600401611c139392919061372a565b60405180910390fd5b611c2461289b565b33816000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600081604001906004811115611c7557611c74612d6d565b5b90816004811115611c8957611c88612d6d565b5b81525050600387604051611c9d91906132b5565b908152602001604051809103902081908060018154018082558091505060019003906000526020600020906003020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020160006101000a81548160ff02191690836004811115611d5157611d50612d6d565b5b02179055505050600287604051611d6891906132b5565b90815260200160405180910390206005015460016000828254611d8b9190613343565b925050819055507f3d91795a8d93a82cebcc92ac50f202b5aa73244f00228e1cc9cbdafbbdf8fe9b8782600001518360400151604051611dcd93929190613777565b60405180910390a150505050505050565b8060036004811115611df357611df2612d6d565b5b600382604051611e0391906132b5565b9081526020016040518091039020611e1a836122ff565b81548110611e2b57611e2a61319b565b5b906000526020600020906003020160020160009054906101000a900460ff166004811115611e5c57611e5b612d6d565b5b1480611ee2575060026004811115611e7757611e76612d6d565b5b600382604051611e8791906132b5565b9081526020016040518091039020611e9e836122ff565b81548110611eaf57611eae61319b565b5b906000526020600020906003020160020160009054906101000a900460ff166004811115611ee057611edf612d6d565b5b145b80611f67575060016004811115611efc57611efb612d6d565b5b600382604051611f0c91906132b5565b9081526020016040518091039020611f23836122ff565b81548110611f3457611f3361319b565b5b906000526020600020906003020160020160009054906101000a900460ff166004811115611f6557611f64612d6d565b5b145b8061200657503373ffffffffffffffffffffffffffffffffffffffff16600382604051611f9491906132b5565b9081526020016040518091039020611fab836126b8565b81548110611fbc57611fbb61319b565b5b906000526020600020906003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b1561203d576040517f68c4171400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060028360405161204f91906132b5565b90815260200160405180910390206006015490506003808460405161207491906132b5565b908152602001604051809103902061208b856122ff565b8154811061209c5761209b61319b565b5b906000526020600020906003020160020160006101000a81548160ff021916908360048111156120cf576120ce612d6d565b5b021790555060003373ffffffffffffffffffffffffffffffffffffffff16826040516120fa90613109565b60006040518083038185875af1925050503d8060008114612137576040519150601f19603f3d011682016040523d82523d6000602084013e61213c565b606091505b5050905080612180576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121779061317b565b60405180910390fd5b7f8703deb082bbe9dd18bf858af977f1d7ced58bd7803c949a6e1011ae2d79f1ac84336040516121b19291906133b0565b60405180910390a150505050565b60026003826040516121d191906132b5565b90815260200160405180910390206121e8836122ff565b815481106121f9576121f861319b565b5b906000526020600020906003020160020160006101000a81548160ff0219169083600481111561222c5761222b612d6d565b5b021790555060028160405161224191906132b5565b908152602001604051809103902060060154600160008282546122649190613343565b925050819055507f87182aaac5dd5ec80140f092551157b9dc8f704ab22b683dc628b3099676d730813360038460405161229e91906132b5565b90815260200160405180910390206122b5856122ff565b815481106122c6576122c561319b565b5b906000526020600020906003020160020160009054906101000a900460ff166040516122f493929190613777565b60405180910390a150565b600080600090505b60038360405161231791906132b5565b9081526020016040518091039020805490508110156123e0573373ffffffffffffffffffffffffffffffffffffffff1660038460405161235791906132b5565b908152602001604051809103902082815481106123775761237661319b565b5b906000526020600020906003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036123cd57809150506123e7565b80806123d8906132fb565b915050612307565b5061270f90505b919050565b60008a60005b6000805490508110156124b457600081815481106124135761241261319b565b5b9060005260206000200160405160200161242d919061326d565b604051602081830303815290604052805190602001208260405160200161245491906132b5565b60405160208183030381529060405280519060200120036124a1576040517f6b9108f800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80806124ac906132fb565b9150506123f2565b508a8a428210806124c55750808210155b156124fc576040517f5e83d5f800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8b8b808210612537576040517f7a9971e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8c8c808210612572576040517fe2049fa500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8d8d8082106125ad576040517fcc2116a000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8d600081116125e8576040517fb25c88c500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8d60008111612623576040517fb0f07a6300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8d6000811161265e576040517ffb833a9900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8d60008111612699576040517fa9ed13a300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60019d50505050505050505050505050509a9950505050505050505050565b60008060005b6003846040516126ce91906132b5565b908152602001604051809103902080549050811015612845576003846040516126f791906132b5565b908152602001604051809103902081815481106127175761271661319b565b5b906000526020600020906003020160010154821080156127aa57506002600481111561274657612745612d6d565b5b60038560405161275691906132b5565b908152602001604051809103902082815481106127765761277561319b565b5b906000526020600020906003020160020160009054906101000a900460ff1660048111156127a7576127a6612d6d565b5b14155b80156128295750600160048111156127c5576127c4612d6d565b5b6003856040516127d591906132b5565b908152602001604051809103902082815481106127f5576127f461319b565b5b906000526020600020906003020160020160009054906101000a900460ff16600481111561282657612825612d6d565b5b14155b15612832578091505b808061283d906132fb565b9150506126be565b5080915050919050565b6040518061012001604052806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600060048111156128de576128dd612d6d565b5b81525090565b6000819050919050565b6128f7816128e4565b82525050565b600060208201905061291260008301846128ee565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561297e578082015181840152602081019050612963565b60008484015250505050565b6000601f19601f8301169050919050565b60006129a682612944565b6129b0818561294f565b93506129c0818560208601612960565b6129c98161298a565b840191505092915050565b60006129e0838361299b565b905092915050565b6000602082019050919050565b6000612a0082612918565b612a0a8185612923565b935083602082028501612a1c85612934565b8060005b85811015612a585784840389528151612a3985826129d4565b9450612a44836129e8565b925060208a01995050600181019050612a20565b50829750879550505050505092915050565b60006020820190508181036000830152612a8481846129f5565b905092915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b612ae28261298a565b810181811067ffffffffffffffff82111715612b0157612b00612aaa565b5b80604052505050565b6000612b14612a8c565b9050612b208282612ad9565b919050565b600067ffffffffffffffff821115612b4057612b3f612aaa565b5b612b498261298a565b9050602081019050919050565b82818337600083830152505050565b6000612b78612b7384612b25565b612b0a565b905082815260208101848484011115612b9457612b93612aa5565b5b612b9f848285612b56565b509392505050565b600082601f830112612bbc57612bbb612aa0565b5b8135612bcc848260208601612b65565b91505092915050565b600060208284031215612beb57612bea612a96565b5b600082013567ffffffffffffffff811115612c0957612c08612a9b565b5b612c1584828501612ba7565b91505092915050565b612c27816128e4565b82525050565b61012082016000820151612c446000850182612c1e565b506020820151612c576020850182612c1e565b506040820151612c6a6040850182612c1e565b506060820151612c7d6060850182612c1e565b506080820151612c906080850182612c1e565b5060a0820151612ca360a0850182612c1e565b5060c0820151612cb660c0850182612c1e565b5060e0820151612cc960e0850182612c1e565b50610100820151612cde610100850182612c1e565b50505050565b600061012082019050612cfa6000830184612c2d565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612d5782612d2c565b9050919050565b612d6781612d4c565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60058110612dad57612dac612d6d565b5b50565b6000819050612dbe82612d9c565b919050565b6000612dce82612db0565b9050919050565b612dde81612dc3565b82525050565b606082016000820151612dfa6000850182612d5e565b506020820151612e0d6020850182612c1e565b506040820151612e206040850182612dd5565b50505050565b6000612e328383612de4565b60608301905092915050565b6000602082019050919050565b6000612e5682612d00565b612e608185612d0b565b9350612e6b83612d1c565b8060005b83811015612e9c578151612e838882612e26565b9750612e8e83612e3e565b925050600181019050612e6f565b5085935050505092915050565b60006020820190508181036000830152612ec38184612e4b565b905092915050565b612ed4816128e4565b8114612edf57600080fd5b50565b600081359050612ef181612ecb565b92915050565b6000806000806000806000806000806101408b8d031215612f1b57612f1a612a96565b5b60008b013567ffffffffffffffff811115612f3957612f38612a9b565b5b612f458d828e01612ba7565b9a50506020612f568d828e01612ee2565b9950506040612f678d828e01612ee2565b9850506060612f788d828e01612ee2565b9750506080612f898d828e01612ee2565b96505060a0612f9a8d828e01612ee2565b95505060c0612fab8d828e01612ee2565b94505060e0612fbc8d828e01612ee2565b935050610100612fce8d828e01612ee2565b925050610120612fe08d828e01612ee2565b9150509295989b9194979a5092959850565b612ffb81612d4c565b82525050565b60006020820190506130166000830184612ff2565b92915050565b6000806040838503121561303357613032612a96565b5b600083013567ffffffffffffffff81111561305157613050612a9b565b5b61305d85828601612ba7565b925050602061306e85828601612ee2565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806130bf57607f821691505b6020821081036130d2576130d1613078565b5b50919050565b600081905092915050565b50565b60006130f36000836130d8565b91506130fe826130e3565b600082019050919050565b6000613114826130e6565b9150819050919050565b600082825260208201905092915050565b7f5472616e73666572206661696c65640000000000000000000000000000000000600082015250565b6000613165600f8361311e565b91506131708261312f565b602082019050919050565b6000602082019050818103600083015261319481613158565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081905092915050565b60008190508160005260206000209050919050565b600081546131f7816130a7565b61320181866131ca565b9450600182166000811461321c576001811461323157613264565b60ff1983168652811515820286019350613264565b61323a856131d5565b60005b8381101561325c5781548189015260018201915060208101905061323d565b838801955050505b50505092915050565b600061327982846131ea565b915081905092915050565b600061328f82612944565b61329981856131ca565b93506132a9818560208601612960565b80840191505092915050565b60006132c18284613284565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000613306826128e4565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203613338576133376132cc565b5b600182019050919050565b600061334e826128e4565b9150613359836128e4565b9250828201905080821115613371576133706132cc565b5b92915050565b600061338282612944565b61338c818561311e565b935061339c818560208601612960565b6133a58161298a565b840191505092915050565b600060408201905081810360008301526133ca8185613377565b90506133d96020830184612ff2565b9392505050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261342d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826133f0565b61343786836133f0565b95508019841693508086168417925050509392505050565b6000819050919050565b600061347461346f61346a846128e4565b61344f565b6128e4565b9050919050565b6000819050919050565b61348e83613459565b6134a261349a8261347b565b8484546133fd565b825550505050565b600090565b6134b76134aa565b6134c2818484613485565b505050565b5b818110156134e6576134db6000826134af565b6001810190506134c8565b5050565b601f82111561352b576134fc816131d5565b613505846133e0565b81016020851015613514578190505b613528613520856133e0565b8301826134c7565b50505b505050565b600082821c905092915050565b600061354e60001984600802613530565b1980831691505092915050565b6000613567838361353d565b9150826002028217905092915050565b61358082612944565b67ffffffffffffffff81111561359957613598612aaa565b5b6135a382546130a7565b6135ae8282856134ea565b600060209050601f8311600181146135e157600084156135cf578287015190505b6135d9858261355b565b865550613641565b601f1984166135ef866131d5565b60005b82811015613617578489015182556001820191506020850194506020810190506135f2565b868310156136345784890151613630601f89168261353d565b8355505b6001600288020188555050505b505050505050565b6000610140820190508181036000830152613664818d613377565b9050613673602083018c6128ee565b613680604083018b6128ee565b61368d606083018a6128ee565b61369a60808301896128ee565b6136a760a08301886128ee565b6136b460c08301876128ee565b6136c160e08301866128ee565b6136cf6101008301856128ee565b6136dd6101208301846128ee565b9b9a5050505050505050505050565b600060608201905081810360008301526137068186613377565b90506137156020830185612ff2565b61372260408301846128ee565b949350505050565b600060608201905081810360008301526137448186613377565b905061375360208301856128ee565b61376060408301846128ee565b949350505050565b61377181612dc3565b82525050565b600060608201905081810360008301526137918186613377565b90506137a06020830185612ff2565b6137ad6040830184613768565b94935050505056fea264697066735822122034f13e12dd47bb1d8478e269c9a3689806e0a05706d4da74cbbac8d54bdda7a364736f6c63430008110033",
  "deployedBytecode": "",
  "devdoc": {
    "author": "Decentralized Auction Platform Team",
    "details": "This implements the auctioneer job",
    "kind": "dev",
    "methods": {},
    "title": "Decentralized Auction Platform",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "This contract is for Decentralized Auction Platform",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 67,
        "contract": "contracts/Auction.sol:Auction",
        "label": "s_auctionList",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_string_storage)dyn_storage"
      },
      {
        "astId": 69,
        "contract": "contracts/Auction.sol:Auction",
        "label": "s_proceeds",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 199,
        "contract": "contracts/Auction.sol:Auction",
        "label": "s_auctionInformations",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_string_memory_ptr,t_struct(AuctionInformation)99_storage)"
      },
      {
        "astId": 205,
        "contract": "contracts/Auction.sol:Auction",
        "label": "s_bidInformations",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_string_memory_ptr,t_array(t_struct(BidInformation)116_storage)dyn_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_string_storage)dyn_storage": {
        "base": "t_string_storage",
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(BidInformation)116_storage)dyn_storage": {
        "base": "t_struct(BidInformation)116_storage",
        "encoding": "dynamic_array",
        "label": "struct Auction.BidInformation[]",
        "numberOfBytes": "32"
      },
      "t_enum(BidderState)80": {
        "encoding": "inplace",
        "label": "enum Auction.BidderState",
        "numberOfBytes": "1"
      },
      "t_mapping(t_string_memory_ptr,t_array(t_struct(BidInformation)116_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct Auction.BidInformation[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(BidInformation)116_storage)dyn_storage"
      },
      "t_mapping(t_string_memory_ptr,t_struct(AuctionInformation)99_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct Auction.AuctionInformation)",
        "numberOfBytes": "32",
        "value": "t_struct(AuctionInformation)99_storage"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(AuctionInformation)99_storage": {
        "encoding": "inplace",
        "label": "struct Auction.AuctionInformation",
        "members": [
          {
            "astId": 82,
            "contract": "contracts/Auction.sol:Auction",
            "label": "startRegistrationTime",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 84,
            "contract": "contracts/Auction.sol:Auction",
            "label": "endRegistrationTime",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 86,
            "contract": "contracts/Auction.sol:Auction",
            "label": "startAuctionTime",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 88,
            "contract": "contracts/Auction.sol:Auction",
            "label": "endAuctionTime",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 90,
            "contract": "contracts/Auction.sol:Auction",
            "label": "duePaymentTime",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 92,
            "contract": "contracts/Auction.sol:Auction",
            "label": "registrationFee",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 94,
            "contract": "contracts/Auction.sol:Auction",
            "label": "depositAmount",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 96,
            "contract": "contracts/Auction.sol:Auction",
            "label": "startBid",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          },
          {
            "astId": 98,
            "contract": "contracts/Auction.sol:Auction",
            "label": "priceStep",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "288"
      },
      "t_struct(BidInformation)116_storage": {
        "encoding": "inplace",
        "label": "struct Auction.BidInformation",
        "members": [
          {
            "astId": 110,
            "contract": "contracts/Auction.sol:Auction",
            "label": "bidder",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 112,
            "contract": "contracts/Auction.sol:Auction",
            "label": "bidAmount",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 115,
            "contract": "contracts/Auction.sol:Auction",
            "label": "bidderState",
            "offset": 0,
            "slot": "2",
            "type": "t_enum(BidderState)80"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}