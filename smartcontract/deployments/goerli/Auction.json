{
  "address": "0xd6657123Ba93f6AD5a47E3d90029483ddB7D90cF",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Auction__AlreadyRegisteredBidder",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__BidderRetractedBid",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__ConfirmationTimeout",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__InvalidAuctionId",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__InvalidAuctionTime",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__InvalidBidAmount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__InvalidDepositAmount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__InvalidDuePaymentTime",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__InvalidPriceStep",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__InvalidRegistrationFee",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__InvalidRegistrationTime",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__InvalidStartAuctionTime",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__InvalidStartBid",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__NoProceeds",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__NotExistAuctionId",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__NotRegisteredBidder",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__NotWinnerOfAuction",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__OutOfAuctionTime",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__OutOfRegistrationTime",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "requirePaymentAmount",
          "type": "uint256"
        }
      ],
      "name": "Auction__RequireAmountToPaymentNotMet",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "requireAmountToRegister",
          "type": "uint256"
        }
      ],
      "name": "Auction__RequireAmountToRegisterNotMet",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__WithdrawDeposit",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "bidder",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "enum Auction.BidderState",
          "name": "bidderState",
          "type": "uint8"
        }
      ],
      "name": "CanceledAuctionResult",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        }
      ],
      "name": "ClosedAuction",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "bidder",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "paidAmount",
          "type": "uint256"
        }
      ],
      "name": "ClosedAuctionSuccessful",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startRegistrationTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endRegistrationTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startAuctionTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endAuctionTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "duePaymentTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "registrationFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "depositAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startBid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "priceStep",
          "type": "uint256"
        }
      ],
      "name": "CreatedAuction",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "bidder",
          "type": "address"
        }
      ],
      "name": "Paidback",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "bidder",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "bidAmount",
          "type": "uint256"
        }
      ],
      "name": "PlacedBid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "bidder",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "enum Auction.BidderState",
          "name": "bidderState",
          "type": "uint8"
        }
      ],
      "name": "RegisteredToBid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "bidder",
          "type": "address"
        }
      ],
      "name": "RetractedBid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "bidder",
          "type": "address"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        }
      ],
      "name": "cancelAuctionResult",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "startRegistrationTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endRegistrationTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startAuctionTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endAuctionTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "duePaymentTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "registrationFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "depositAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startBid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "priceStep",
          "type": "uint256"
        }
      ],
      "name": "createAuction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        }
      ],
      "name": "getAuctionInformationById",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startRegistrationTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endRegistrationTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "startAuctionTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endAuctionTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duePaymentTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "registrationFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "depositAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "startBid",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "priceStep",
              "type": "uint256"
            }
          ],
          "internalType": "struct Auction.AuctionInformation",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        }
      ],
      "name": "getBidInformationByAuctionId",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "bidder",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "bidAmount",
              "type": "uint256"
            },
            {
              "internalType": "enum Auction.BidderState",
              "name": "bidderState",
              "type": "uint8"
            }
          ],
          "internalType": "struct Auction.BidInformation[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        }
      ],
      "name": "getHighestBidOfAuction",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getListAuctionId",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getProceeds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        }
      ],
      "name": "payment",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "bidAmount",
          "type": "uint256"
        }
      ],
      "name": "placeBid",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        }
      ],
      "name": "registerToBid",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        }
      ],
      "name": "retractBid",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        }
      ],
      "name": "withdrawDeposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawProceeds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x299d23d7467c9555cc0261834d83eb8376c2d6d53975cefde348446f88229df7",
  "receipt": {
    "to": null,
    "from": "0xa3EAe56afb3C7Ad3A45ef2B6aCd3e6e8267AB8b4",
    "contractAddress": "0xd6657123Ba93f6AD5a47E3d90029483ddB7D90cF",
    "transactionIndex": 1,
    "gasUsed": "4444950",
    "logsBloom": "0x
    "blockHash": "0x240af79003a14dcf4f028bafc5e18fb2bb114ce04e66d7334fe5012767d35bd8",
    "transactionHash": "0x299d23d7467c9555cc0261834d83eb8376c2d6d53975cefde348446f88229df7",
    "logs": [],
    "blockNumber": 8396801,
    "cumulativeGasUsed": "4493464",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 2,
  "solcInputHash": "730e4ddde9720e87209a4dae582fa604",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Auction__AlreadyRegisteredBidder\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__BidderRetractedBid\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__ConfirmationTimeout\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__InvalidAuctionId\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__InvalidAuctionTime\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__InvalidBidAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__InvalidDepositAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__InvalidDuePaymentTime\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__InvalidPriceStep\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__InvalidRegistrationFee\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__InvalidRegistrationTime\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__InvalidStartAuctionTime\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__InvalidStartBid\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__NoProceeds\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__NotExistAuctionId\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__NotRegisteredBidder\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__NotWinnerOfAuction\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__OutOfAuctionTime\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__OutOfRegistrationTime\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"requirePaymentAmount\",\"type\":\"uint256\"}],\"name\":\"Auction__RequireAmountToPaymentNotMet\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requireAmountToRegister\",\"type\":\"uint256\"}],\"name\":\"Auction__RequireAmountToRegisterNotMet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__WithdrawDeposit\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum Auction.BidderState\",\"name\":\"bidderState\",\"type\":\"uint8\"}],\"name\":\"CanceledAuctionResult\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"}],\"name\":\"ClosedAuction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paidAmount\",\"type\":\"uint256\"}],\"name\":\"ClosedAuctionSuccessful\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startRegistrationTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endRegistrationTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startAuctionTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endAuctionTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"duePaymentTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"registrationFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"depositAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startBid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"priceStep\",\"type\":\"uint256\"}],\"name\":\"CreatedAuction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"}],\"name\":\"Paidback\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bidAmount\",\"type\":\"uint256\"}],\"name\":\"PlacedBid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum Auction.BidderState\",\"name\":\"bidderState\",\"type\":\"uint8\"}],\"name\":\"RegisteredToBid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"}],\"name\":\"RetractedBid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"}],\"name\":\"cancelAuctionResult\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"startRegistrationTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endRegistrationTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startAuctionTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endAuctionTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duePaymentTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"registrationFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"depositAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startBid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priceStep\",\"type\":\"uint256\"}],\"name\":\"createAuction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"}],\"name\":\"getAuctionInformationById\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startRegistrationTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endRegistrationTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startAuctionTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endAuctionTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duePaymentTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"registrationFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"depositAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startBid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priceStep\",\"type\":\"uint256\"}],\"internalType\":\"struct Auction.AuctionInformation\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"}],\"name\":\"getBidInformationByAuctionId\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"bidAmount\",\"type\":\"uint256\"},{\"internalType\":\"enum Auction.BidderState\",\"name\":\"bidderState\",\"type\":\"uint8\"}],\"internalType\":\"struct Auction.BidInformation[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"}],\"name\":\"getHighestBidOfAuction\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getListAuctionId\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProceeds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"}],\"name\":\"payment\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"bidAmount\",\"type\":\"uint256\"}],\"name\":\"placeBid\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"}],\"name\":\"registerToBid\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"}],\"name\":\"retractBid\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"}],\"name\":\"withdrawDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawProceeds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Decentralized Auction Platform Team\",\"details\":\"This implements the auctioneer job\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Decentralized Auction Platform\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This contract is for Decentralized Auction Platform\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Auction.sol\":\"Auction\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Auction.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.17;\\r\\n\\r\\nerror Auction__InvalidRegistrationTime();\\r\\nerror Auction__InvalidAuctionTime();\\r\\nerror Auction__InvalidDuePaymentTime();\\r\\nerror Auction__InvalidStartAuctionTime();\\r\\nerror Auction__InvalidRegistrationFee();\\r\\nerror Auction__InvalidDepositAmount();\\r\\nerror Auction__InvalidStartBid();\\r\\nerror Auction__InvalidPriceStep();\\r\\nerror Auction__InvalidDatetime();\\r\\nerror Auction__InvalidAuctionId();\\r\\nerror Auction__OutOfRegistrationTime();\\r\\nerror Auction__RequireAmountToRegisterNotMet(\\r\\n    string auctionId,\\r\\n    uint256 value,\\r\\n    uint256 requireAmountToRegister\\r\\n);\\r\\nerror Auction__OutOfAuctionTime();\\r\\nerror Auction__InvalidBidAmount();\\r\\nerror Auction__NotRegisteredBidder();\\r\\nerror Auction__NotExistAuctionId();\\r\\nerror Auction__ConfirmationTimeout();\\r\\nerror Auction__NotWinnerOfAuction();\\r\\nerror Auction__TransferFailed();\\r\\nerror Auction__RequireAmountToPaymentNotMet(string auctionId, uint256 requirePaymentAmount);\\r\\nerror Auction__NotExistAuction();\\r\\nerror Auction__NotOwner();\\r\\nerror Auction__AlreadyRegisteredBidder();\\r\\nerror Auction__NoProceeds();\\r\\nerror Auction__WithdrawDeposit();\\r\\nerror Auction__BidderRetractedBid();\\r\\n\\r\\n/**@title Decentralized Auction Platform\\r\\n * @author Decentralized Auction Platform Team\\r\\n * @notice This contract is for Decentralized Auction Platform\\r\\n * @dev This implements the auctioneer job\\r\\n */\\r\\ncontract Auction {\\r\\n    string[] private s_auctionList;\\r\\n    uint256 private s_proceeds;\\r\\n    address private immutable i_owner;\\r\\n    uint16 private constant CONFIRMATION_TIME = 300;\\r\\n    enum BidderState {\\r\\n        BIDING, // registered or bidding\\r\\n        RETRACT, // retract bid\\r\\n        CANCEL, // cancel auction result\\r\\n        WITHDRAW, // withdaw deposit\\r\\n        PAYMENT // payment complete\\r\\n    }\\r\\n\\r\\n    struct AuctionInformation {\\r\\n        uint256 startRegistrationTime;\\r\\n        uint256 endRegistrationTime;\\r\\n        uint256 startAuctionTime;\\r\\n        uint256 endAuctionTime;\\r\\n        uint256 duePaymentTime;\\r\\n        uint256 registrationFee;\\r\\n        uint256 depositAmount;\\r\\n        uint256 startBid;\\r\\n        uint256 priceStep;\\r\\n    }\\r\\n\\r\\n    constructor() {\\r\\n        i_owner = msg.sender;\\r\\n    }\\r\\n\\r\\n    struct BidInformation {\\r\\n        address bidder;\\r\\n        uint256 bidAmount;\\r\\n        BidderState bidderState;\\r\\n    }\\r\\n\\r\\n    event CreatedAuction(\\r\\n        string auctionId,\\r\\n        uint256 startRegistrationTime,\\r\\n        uint256 endRegistrationTime,\\r\\n        uint256 startAuctionTime,\\r\\n        uint256 endAuctionTime,\\r\\n        uint256 duePaymentTime,\\r\\n        uint256 registrationFee,\\r\\n        uint256 depositAmount,\\r\\n        uint256 startBid,\\r\\n        uint256 priceStep\\r\\n    );\\r\\n    event PlacedBid(string auctionId, address bidder, uint256 bidAmount);\\r\\n    event RetractedBid(string auctionId, address bidder);\\r\\n    event RegisteredToBid(string auctionId, address bidder, BidderState bidderState);\\r\\n    event ClosedAuction(string auctionId);\\r\\n    event CanceledAuctionResult(string auctionId, address bidder, BidderState bidderState);\\r\\n    event Paidback(string auctionId, address bidder);\\r\\n    event ClosedAuctionSuccessful(string auctionId, address bidder, uint256 paidAmount);\\r\\n    event Withdraw(string auctionId, address bidder);\\r\\n\\r\\n    mapping(string => AuctionInformation) private s_auctionInformations;\\r\\n    mapping(string => BidInformation[]) private s_bidInformations;\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        if (msg.sender != i_owner) revert Auction__NotOwner();\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isVailidAuctionId(string memory auctionId) {\\r\\n        for (uint256 i = 0; i < s_auctionList.length; i++) {\\r\\n            if (\\r\\n                keccak256(abi.encodePacked(auctionId)) ==\\r\\n                keccak256(abi.encodePacked(s_auctionList[i]))\\r\\n            ) {\\r\\n                revert Auction__InvalidAuctionId();\\r\\n            }\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isExistAuctionId(string memory auctionId) {\\r\\n        uint256 count = 0;\\r\\n        for (uint256 i = 0; i < s_auctionList.length; i++) {\\r\\n            if (\\r\\n                keccak256(abi.encodePacked(auctionId)) !=\\r\\n                keccak256(abi.encodePacked(s_auctionList[i]))\\r\\n            ) {\\r\\n                count++;\\r\\n            }\\r\\n        }\\r\\n        if (count == s_auctionList.length) {\\r\\n            revert Auction__NotExistAuctionId();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isValidRegistrationTime(uint256 startRegistrationTime, uint256 endRegistrationTime) {\\r\\n        if (\\r\\n            startRegistrationTime < block.timestamp || startRegistrationTime >= endRegistrationTime\\r\\n        ) {\\r\\n            revert Auction__InvalidRegistrationTime();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isValidStartAuctionTime(uint256 endRegistrationTime, uint256 startAuctionTime) {\\r\\n        if (endRegistrationTime >= startAuctionTime) {\\r\\n            revert Auction__InvalidStartAuctionTime();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isValidAuctionTime(uint256 startAuctionTime, uint256 endAuctionTime) {\\r\\n        if (startAuctionTime >= endAuctionTime) {\\r\\n            revert Auction__InvalidAuctionTime();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isValidDuePaymentTime(uint256 endAuctionTime, uint256 duePaymentTime) {\\r\\n        if (endAuctionTime >= duePaymentTime) {\\r\\n            revert Auction__InvalidDuePaymentTime();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isValidRegistrationFee(uint256 registrationFee) {\\r\\n        if (registrationFee <= 0) {\\r\\n            revert Auction__InvalidRegistrationFee();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isValidDepositAmount(uint256 depositAmount) {\\r\\n        if (depositAmount <= 0) {\\r\\n            revert Auction__InvalidDepositAmount();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isValidStartBid(uint256 depositAmount) {\\r\\n        if (depositAmount <= 0) {\\r\\n            revert Auction__InvalidStartBid();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isValidPriceStep(uint256 depositAmount) {\\r\\n        if (depositAmount <= 0) {\\r\\n            revert Auction__InvalidPriceStep();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isRegistrationTime(string memory auctionId) {\\r\\n        if (\\r\\n            s_auctionInformations[auctionId].startRegistrationTime > block.timestamp ||\\r\\n            s_auctionInformations[auctionId].endRegistrationTime < block.timestamp\\r\\n        ) {\\r\\n            revert Auction__OutOfRegistrationTime();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isAuctionTime(string memory auctionId) {\\r\\n        if (\\r\\n            s_auctionInformations[auctionId].startAuctionTime > block.timestamp ||\\r\\n            s_auctionInformations[auctionId].endAuctionTime < block.timestamp\\r\\n        ) {\\r\\n            revert Auction__OutOfAuctionTime();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isValidBidAmount(string memory auctionId, uint256 bidAmount) {\\r\\n        if (\\r\\n            bidAmount < s_auctionInformations[auctionId].startBid ||\\r\\n            bidAmount <\\r\\n            getHighestBidOfAuction(auctionId) + s_auctionInformations[auctionId].priceStep\\r\\n        ) {\\r\\n            revert Auction__InvalidBidAmount();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isRegisteredBidder(string memory auctionId) {\\r\\n        uint256 count = 0;\\r\\n        for (uint256 i = 0; i < s_bidInformations[auctionId].length; i++) {\\r\\n            if (\\r\\n                s_bidInformations[auctionId][i].bidder != msg.sender &&\\r\\n                s_bidInformations[auctionId][i].bidderState == BidderState.BIDING\\r\\n            ) {\\r\\n                count++;\\r\\n            }\\r\\n        }\\r\\n        if (count == s_bidInformations[auctionId].length) {\\r\\n            revert Auction__NotRegisteredBidder();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n    modifier isAlreadyRegisteredBidder(string memory auctionId) {\\r\\n        for (uint256 i = 0; i < s_bidInformations[auctionId].length; i++) {\\r\\n            if (s_bidInformations[auctionId][i].bidder == msg.sender) {\\r\\n                revert Auction__AlreadyRegisteredBidder();\\r\\n            }\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n    modifier isConfirmationTime(string memory auctionId) {\\r\\n        if (\\r\\n            msg.sender == s_bidInformations[auctionId][getIndexOfBidder(auctionId)].bidder &&\\r\\n            s_bidInformations[auctionId][getIndexOfBidder(auctionId)].bidAmount ==\\r\\n            s_bidInformations[auctionId][getIndexOfFirstOfAuction(auctionId)].bidAmount\\r\\n        ) {\\r\\n            uint256 dueConfirmationTime = s_auctionInformations[auctionId].endAuctionTime +\\r\\n                CONFIRMATION_TIME;\\r\\n            if (dueConfirmationTime < block.timestamp) {\\r\\n                revert Auction__ConfirmationTimeout();\\r\\n            }\\r\\n        }\\r\\n        _;\\r\\n        if (\\r\\n            msg.sender == s_bidInformations[auctionId][getIndexOfBidder(auctionId)].bidder &&\\r\\n            s_bidInformations[auctionId][getIndexOfBidder(auctionId)].bidAmount ==\\r\\n            s_bidInformations[auctionId][getIndexOfSecondOfAuction(auctionId)].bidAmount\\r\\n        ) {\\r\\n            uint256 dueConfirmationTime = s_auctionInformations[auctionId].endAuctionTime +\\r\\n                CONFIRMATION_TIME *\\r\\n                2;\\r\\n            if (dueConfirmationTime < block.timestamp) {\\r\\n                revert Auction__ConfirmationTimeout();\\r\\n            }\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isWinnerOfAuction(string memory auctionId) {\\r\\n        uint256 index = getIndexOfBidder(auctionId);\\r\\n        if (index == 9999) {\\r\\n            revert Auction__NotRegisteredBidder();\\r\\n        }\\r\\n        _;\\r\\n        if (\\r\\n            s_bidInformations[auctionId][index].bidderState != BidderState.BIDING ||\\r\\n            s_bidInformations[auctionId][index].bidAmount != getHighestBidOfAuction(auctionId)\\r\\n        ) {\\r\\n            revert Auction__NotWinnerOfAuction();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n    modifier isValidPaymentAmount(string memory auctionId) {\\r\\n        uint256 requirePaymentAmount = s_bidInformations[auctionId][getIndexOfBidder(auctionId)]\\r\\n            .bidAmount - s_auctionInformations[auctionId].depositAmount;\\r\\n        if (msg.value != requirePaymentAmount) {\\r\\n            revert Auction__RequireAmountToPaymentNotMet(auctionId, requirePaymentAmount);\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isWithdrawDeposit(string memory auctionId) {\\r\\n        if (\\r\\n            s_bidInformations[auctionId][getIndexOfBidder(auctionId)].bidderState ==\\r\\n            BidderState.WITHDRAW ||\\r\\n            s_bidInformations[auctionId][getIndexOfBidder(auctionId)].bidderState ==\\r\\n            BidderState.CANCEL ||\\r\\n            s_bidInformations[auctionId][getIndexOfBidder(auctionId)].bidderState ==\\r\\n            BidderState.RETRACT ||\\r\\n            s_bidInformations[auctionId][getIndexOfFirstOfAuction(auctionId)].bidder == msg.sender\\r\\n        ) {\\r\\n            revert Auction__WithdrawDeposit();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function isValidatedInput(\\r\\n        string memory auctionId,\\r\\n        uint256 startRegistrationTime,\\r\\n        uint256 endRegistrationTime,\\r\\n        uint256 startAuctionTime,\\r\\n        uint256 endAuctionTime,\\r\\n        uint256 duePaymentTime,\\r\\n        uint256 registrationFee,\\r\\n        uint256 depositAmount,\\r\\n        uint256 startBid,\\r\\n        uint256 priceStep\\r\\n    )\\r\\n        internal\\r\\n        view\\r\\n        isVailidAuctionId(auctionId)\\r\\n        isValidRegistrationTime(startRegistrationTime, endRegistrationTime)\\r\\n        isValidStartAuctionTime(endRegistrationTime, startAuctionTime)\\r\\n        isValidAuctionTime(startAuctionTime, endAuctionTime)\\r\\n        isValidDuePaymentTime(endAuctionTime, duePaymentTime)\\r\\n        isValidRegistrationFee(registrationFee)\\r\\n        isValidDepositAmount(depositAmount)\\r\\n        isValidStartBid(startBid)\\r\\n        isValidPriceStep(priceStep)\\r\\n        returns (bool)\\r\\n    {\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function createAuction(\\r\\n        string memory auctionId,\\r\\n        uint256 startRegistrationTime,\\r\\n        uint256 endRegistrationTime,\\r\\n        uint256 startAuctionTime,\\r\\n        uint256 endAuctionTime,\\r\\n        uint256 duePaymentTime,\\r\\n        uint256 registrationFee,\\r\\n        uint256 depositAmount,\\r\\n        uint256 startBid,\\r\\n        uint256 priceStep\\r\\n    ) external {\\r\\n        if (\\r\\n            isValidatedInput(\\r\\n                auctionId,\\r\\n                startRegistrationTime,\\r\\n                endRegistrationTime,\\r\\n                startAuctionTime,\\r\\n                endAuctionTime,\\r\\n                duePaymentTime,\\r\\n                registrationFee,\\r\\n                depositAmount,\\r\\n                startBid,\\r\\n                priceStep\\r\\n            )\\r\\n        ) {\\r\\n            AuctionInformation memory auction;\\r\\n            auction.startRegistrationTime = startRegistrationTime;\\r\\n            auction.endRegistrationTime = endRegistrationTime;\\r\\n            auction.startAuctionTime = startAuctionTime;\\r\\n            auction.endAuctionTime = endAuctionTime;\\r\\n            auction.duePaymentTime = duePaymentTime;\\r\\n            auction.registrationFee = registrationFee;\\r\\n            auction.depositAmount = depositAmount;\\r\\n            auction.startBid = startBid;\\r\\n            auction.priceStep = priceStep;\\r\\n            s_auctionInformations[auctionId] = auction;\\r\\n            s_auctionList.push(auctionId);\\r\\n\\r\\n            emit CreatedAuction(\\r\\n                auctionId,\\r\\n                startRegistrationTime,\\r\\n                endRegistrationTime,\\r\\n                startAuctionTime,\\r\\n                endAuctionTime,\\r\\n                duePaymentTime,\\r\\n                registrationFee,\\r\\n                depositAmount,\\r\\n                startBid,\\r\\n                priceStep\\r\\n            );\\r\\n        }\\r\\n    }\\r\\n\\r\\n    modifier isStateBidding(string memory auctionId) {\\r\\n        if (\\r\\n            s_bidInformations[auctionId][getIndexOfBidder(auctionId)].bidderState !=\\r\\n            BidderState.BIDING\\r\\n        ) {\\r\\n            revert Auction__BidderRetractedBid();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function registerToBid(string memory auctionId)\\r\\n        external\\r\\n        payable\\r\\n        isExistAuctionId(auctionId)\\r\\n        isRegistrationTime(auctionId)\\r\\n        isAlreadyRegisteredBidder(auctionId)\\r\\n    {\\r\\n        uint256 requireAmountToRegister = s_auctionInformations[auctionId].registrationFee +\\r\\n            s_auctionInformations[auctionId].depositAmount;\\r\\n        if (msg.value != requireAmountToRegister) {\\r\\n            revert Auction__RequireAmountToRegisterNotMet(\\r\\n                auctionId,\\r\\n                msg.value,\\r\\n                requireAmountToRegister\\r\\n            );\\r\\n        }\\r\\n        BidInformation memory bidInformation;\\r\\n        bidInformation.bidder = msg.sender;\\r\\n        bidInformation.bidderState = BidderState.BIDING;\\r\\n        s_bidInformations[auctionId].push(bidInformation);\\r\\n        s_proceeds += s_auctionInformations[auctionId].registrationFee;\\r\\n        emit RegisteredToBid(auctionId, bidInformation.bidder, bidInformation.bidderState);\\r\\n    }\\r\\n\\r\\n    function placeBid(string memory auctionId, uint256 bidAmount)\\r\\n        external\\r\\n        payable\\r\\n        isExistAuctionId(auctionId)\\r\\n        isAuctionTime(auctionId)\\r\\n        isRegisteredBidder(auctionId)\\r\\n        isValidBidAmount(auctionId, bidAmount)\\r\\n        isStateBidding(auctionId)\\r\\n    {\\r\\n        s_bidInformations[auctionId][getIndexOfBidder(auctionId)].bidAmount = bidAmount;\\r\\n        emit PlacedBid(auctionId, msg.sender, bidAmount);\\r\\n    }\\r\\n\\r\\n    function retractBid(string memory auctionId)\\r\\n        external\\r\\n        payable\\r\\n        isExistAuctionId(auctionId)\\r\\n        isAuctionTime(auctionId)\\r\\n        isRegisteredBidder(auctionId)\\r\\n        isStateBidding(auctionId)\\r\\n    {\\r\\n        s_bidInformations[auctionId][getIndexOfBidder(auctionId)].bidderState = BidderState.RETRACT;\\r\\n        s_proceeds += s_auctionInformations[auctionId].depositAmount;\\r\\n        emit RetractedBid(auctionId, msg.sender);\\r\\n    }\\r\\n\\r\\n    function cancelAuctionResult(string memory auctionId)\\r\\n        external\\r\\n        payable\\r\\n        isWinnerOfAuction(auctionId)\\r\\n        isConfirmationTime(auctionId)\\r\\n    {\\r\\n        if (\\r\\n            s_bidInformations[auctionId][getIndexOfBidder(auctionId)].bidAmount ==\\r\\n            s_bidInformations[auctionId][getIndexOfFirstOfAuction(auctionId)].bidAmount ||\\r\\n            s_bidInformations[auctionId][getIndexOfBidder(auctionId)].bidAmount ==\\r\\n            s_bidInformations[auctionId][getIndexOfSecondOfAuction(auctionId)].bidAmount\\r\\n        ) {\\r\\n            s_bidInformations[auctionId][getIndexOfBidder(auctionId)].bidderState = BidderState\\r\\n                .CANCEL;\\r\\n            s_proceeds += s_auctionInformations[auctionId].depositAmount;\\r\\n        }\\r\\n        emit CanceledAuctionResult(\\r\\n            auctionId,\\r\\n            msg.sender,\\r\\n            s_bidInformations[auctionId][getIndexOfBidder(auctionId)].bidderState\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function withdraw() external onlyOwner {\\r\\n        (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\r\\n        require(success, \\\"Transfer failed\\\");\\r\\n    }\\r\\n\\r\\n    function withdrawProceeds() external onlyOwner {\\r\\n        if (s_proceeds <= 0) {\\r\\n            revert Auction__NoProceeds();\\r\\n        }\\r\\n        (bool success, ) = i_owner.call{value: s_proceeds}(\\\"\\\");\\r\\n        require(success, \\\"Transfer failed\\\");\\r\\n    }\\r\\n\\r\\n    function withdrawDeposit(string memory auctionId) external isWithdrawDeposit(auctionId) {\\r\\n        uint256 value = s_auctionInformations[auctionId].depositAmount;\\r\\n        s_bidInformations[auctionId][getIndexOfBidder(auctionId)].bidderState = BidderState\\r\\n            .WITHDRAW;\\r\\n        (bool success, ) = payable(msg.sender).call{value: value}(\\\"\\\");\\r\\n        require(success, \\\"Transfer failed\\\");\\r\\n        emit Withdraw(auctionId, msg.sender);\\r\\n    }\\r\\n\\r\\n    function payment(string memory auctionId)\\r\\n        external\\r\\n        payable\\r\\n        isWinnerOfAuction(auctionId)\\r\\n        isValidPaymentAmount(auctionId)\\r\\n    {\\r\\n        s_bidInformations[auctionId][getIndexOfBidder(auctionId)].bidderState = BidderState.PAYMENT;\\r\\n        s_proceeds += s_auctionInformations[auctionId].depositAmount;\\r\\n        s_proceeds += msg.value;\\r\\n        emit ClosedAuctionSuccessful(auctionId, msg.sender, msg.value);\\r\\n    }\\r\\n\\r\\n    function getHighestBidOfAuction(string memory auctionId) public view returns (uint256) {\\r\\n        uint256 highestBid = 0;\\r\\n        for (uint256 i = 0; i < s_bidInformations[auctionId].length; i++) {\\r\\n            if (\\r\\n                s_bidInformations[auctionId][i].bidAmount > highestBid &&\\r\\n                s_bidInformations[auctionId][i].bidderState != BidderState.RETRACT &&\\r\\n                s_bidInformations[auctionId][i].bidderState != BidderState.CANCEL\\r\\n            ) {\\r\\n                highestBid = s_bidInformations[auctionId][i].bidAmount;\\r\\n            }\\r\\n        }\\r\\n        return highestBid;\\r\\n    }\\r\\n\\r\\n    //get index of bidder who is sender\\r\\n    function getIndexOfBidder(string memory auctionId) internal view returns (uint256) {\\r\\n        for (uint256 i = 0; i < s_bidInformations[auctionId].length; i++) {\\r\\n            if (s_bidInformations[auctionId][i].bidder == msg.sender) {\\r\\n                return i;\\r\\n            }\\r\\n        }\\r\\n        return 9999;\\r\\n    }\\r\\n\\r\\n    function getIndexOfSecondOfAuction(string memory auctionId) private returns (uint256) {\\r\\n        BidInformation[] storage tempBidInformation = s_bidInformations[auctionId];\\r\\n        uint256 index = getHighestBidOfAuction(auctionId);\\r\\n        require(index < tempBidInformation.length);\\r\\n        tempBidInformation[index] = tempBidInformation[tempBidInformation.length - 1];\\r\\n        tempBidInformation.pop();\\r\\n        uint256 highestIndex;\\r\\n        for (uint256 i = 0; i < tempBidInformation.length; i++) {\\r\\n            if (\\r\\n                highestIndex < tempBidInformation[i].bidAmount &&\\r\\n                tempBidInformation[i].bidderState == BidderState.BIDING\\r\\n            ) {\\r\\n                highestIndex = i;\\r\\n            }\\r\\n        }\\r\\n        return highestIndex;\\r\\n    }\\r\\n\\r\\n    function getIndexOfFirstOfAuction(string memory auctionId) private view returns (uint256) {\\r\\n        uint256 highestIndex;\\r\\n        for (uint256 i = 0; i < s_bidInformations[auctionId].length; i++) {\\r\\n            if (\\r\\n                highestIndex < s_bidInformations[auctionId][i].bidAmount &&\\r\\n                s_bidInformations[auctionId][i].bidderState != BidderState.CANCEL &&\\r\\n                s_bidInformations[auctionId][i].bidderState != BidderState.RETRACT\\r\\n            ) {\\r\\n                highestIndex = i;\\r\\n            }\\r\\n        }\\r\\n        return highestIndex;\\r\\n    }\\r\\n\\r\\n    function getListAuctionId() external view returns (string[] memory) {\\r\\n        return s_auctionList;\\r\\n    }\\r\\n\\r\\n    function getAuctionInformationById(string memory auctionId)\\r\\n        external\\r\\n        view\\r\\n        isExistAuctionId(auctionId)\\r\\n        returns (AuctionInformation memory)\\r\\n    {\\r\\n        return s_auctionInformations[auctionId];\\r\\n    }\\r\\n\\r\\n    function getBidInformationByAuctionId(string memory auctionId)\\r\\n        external\\r\\n        view\\r\\n        isExistAuctionId(auctionId)\\r\\n        returns (BidInformation[] memory)\\r\\n    {\\r\\n        return s_bidInformations[auctionId];\\r\\n    }\\r\\n\\r\\n    function getBalance() external view returns (uint256) {\\r\\n        return address(this).balance;\\r\\n    }\\r\\n\\r\\n    function getOwner() public view returns (address) {\\r\\n        return i_owner;\\r\\n    }\\r\\n\\r\\n    function getProceeds() public view returns (uint256) {\\r\\n        return s_proceeds;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xb52519a926f093348c677b2a68952f01c3fdd138380f6549f065af768e32daf7\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106100f35760003560e01c806383bd95871161008a578063af6fd4a711610059578063af6fd4a7146102ea578063daddf71714610306578063e4ece6b014610322578063f05981fa1461034b576100f3565b806383bd958714610261578063893d20e81461028c5780639038e693146102b7578063a7eaa241146102ce576100f3565b80636821fe22116100c65780636821fe22146101a257806373e295ea146101df5780637ea717ff146101fb5780638166697114610238576100f3565b806312065fe0146100f85780631c46583b146101235780633ccfd60b1461014e578063615adb6a14610165575b600080fd5b34801561010457600080fd5b5061010d610367565b60405161011a9190613ff4565b60405180910390f35b34801561012f57600080fd5b5061013861036f565b6040516101459190614161565b60405180910390f35b34801561015a57600080fd5b50610163610448565b005b34801561017157600080fd5b5061018c600480360381019061018791906142cc565b61059c565b60405161019991906143db565b60405180910390f35b3480156101ae57600080fd5b506101c960048036038101906101c491906142cc565b610714565b6040516101d691906145a0565b60405180910390f35b6101f960048036038101906101f491906142cc565b610911565b005b34801561020757600080fd5b50610222600480360381019061021d91906142cc565b610ddd565b60405161022f9190613ff4565b60405180910390f35b34801561024457600080fd5b5061025f600480360381019061025a91906145ee565b610fb9565b005b34801561026d57600080fd5b5061027661113c565b6040516102839190613ff4565b60405180910390f35b34801561029857600080fd5b506102a1611146565b6040516102ae91906146f8565b60405180910390f35b3480156102c357600080fd5b506102cc61116e565b005b6102e860048036038101906102e39190614713565b611300565b005b61030460048036038101906102ff91906142cc565b61180e565b005b610320600480360381019061031b91906142cc565b611ce4565b005b34801561032e57600080fd5b50610349600480360381019061034491906142cc565b6121b1565b005b610365600480360381019061036091906142cc565b612592565b005b600047905090565b60606000805480602002602001604051908101604052809291908181526020016000905b8282101561043f5783829060005260206000200180546103b29061479e565b80601f01602080910402602001604051908101604052809291908181526020018280546103de9061479e565b801561042b5780601f106104005761010080835404028352916020019161042b565b820191906000526020600020905b81548152906001019060200180831161040e57829003601f168201915b505050505081526020019060010190610393565b50505050905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104cd576040517f3e77415600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161051390614800565b60006040518083038185875af1925050503d8060008114610550576040519150601f19603f3d011682016040523d82523d6000602084013e610555565b606091505b5050905080610599576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059090614872565b60405180910390fd5b50565b6105a4613f46565b816000805b60008054905081101561064857600081815481106105ca576105c9614892565b5b906000526020600020016040516020016105e49190614964565b604051602081830303815290604052805190602001208360405160200161060b91906149ac565b6040516020818303038152906040528051906020012014610635578180610631906149f2565b9250505b8080610640906149f2565b9150506105a9565b506000805490508103610687576040517fc1c7f9a100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60028460405161069791906149ac565b908152602001604051809103902060405180610120016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820154815260200160058201548152602001600682015481526020016007820154815260200160088201548152505092505050919050565b6060816000805b6000805490508110156107ba576000818154811061073c5761073b614892565b5b906000526020600020016040516020016107569190614964565b604051602081830303815290604052805190602001208360405160200161077d91906149ac565b60405160208183030381529060405280519060200120146107a75781806107a3906149f2565b9250505b80806107b2906149f2565b91505061071b565b5060008054905081036107f9576040517fc1c7f9a100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60038460405161080991906149ac565b9081526020016040518091039020805480602002602001604051908101604052809291908181526020016000905b8282101561090457838290600052602060002090600302016040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820160009054906101000a900460ff1660048111156108df576108de614464565b5b60048111156108f1576108f0614464565b5b8152505081526020019060010190610837565b5050505092505050919050565b806000805b6000805490508110156109b5576000818154811061093757610936614892565b5b906000526020600020016040516020016109519190614964565b604051602081830303815290604052805190602001208360405160200161097891906149ac565b60405160208183030381529060405280519060200120146109a257818061099e906149f2565b9250505b80806109ad906149f2565b915050610916565b5060008054905081036109f4576040517fc1c7f9a100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8242600282604051610a0691906149ac565b9081526020016040518091039020600201541180610a44575042600282604051610a3091906149ac565b908152602001604051809103902060030154105b15610a7b576040517f355d234800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b836000805b600383604051610a9091906149ac565b908152602001604051809103902080549050811015610bdf573373ffffffffffffffffffffffffffffffffffffffff16600384604051610ad091906149ac565b90815260200160405180910390208281548110610af057610aef614892565b5b906000526020600020906003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614158015610bb8575060006004811115610b5557610b54614464565b5b600384604051610b6591906149ac565b90815260200160405180910390208281548110610b8557610b84614892565b5b906000526020600020906003020160020160009054906101000a900460ff166004811115610bb657610bb5614464565b5b145b15610bcc578180610bc8906149f2565b9250505b8080610bd7906149f2565b915050610a80565b50600382604051610bf091906149ac565b9081526020016040518091039020805490508103610c3a576040517f2ffd4a0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8560006004811115610c4f57610c4e614464565b5b600382604051610c5f91906149ac565b9081526020016040518091039020610c7683613782565b81548110610c8757610c86614892565b5b906000526020600020906003020160020160009054906101000a900460ff166004811115610cb857610cb7614464565b5b14610cef576040517fd5556f7600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600388604051610d0191906149ac565b9081526020016040518091039020610d1889613782565b81548110610d2957610d28614892565b5b906000526020600020906003020160020160006101000a81548160ff02191690836004811115610d5c57610d5b614464565b5b0217905550600287604051610d7191906149ac565b90815260200160405180910390206006015460016000828254610d949190614a3a565b925050819055507f34a0a77595fe52e5375623399b257387f5de5854fd9f102d981e81214835a4108733604051610dcc929190614aa7565b60405180910390a150505050505050565b6000806000905060005b600384604051610df791906149ac565b908152602001604051809103902080549050811015610faf5781600385604051610e2191906149ac565b90815260200160405180910390208281548110610e4157610e40614892565b5b906000526020600020906003020160010154118015610ed3575060016004811115610e6f57610e6e614464565b5b600385604051610e7f91906149ac565b90815260200160405180910390208281548110610e9f57610e9e614892565b5b906000526020600020906003020160020160009054906101000a900460ff166004811115610ed057610ecf614464565b5b14155b8015610f52575060026004811115610eee57610eed614464565b5b600385604051610efe91906149ac565b90815260200160405180910390208281548110610f1e57610f1d614892565b5b906000526020600020906003020160020160009054906101000a900460ff166004811115610f4f57610f4e614464565b5b14155b15610f9c57600384604051610f6791906149ac565b90815260200160405180910390208181548110610f8757610f86614892565b5b90600052602060002090600302016001015491505b8080610fa7906149f2565b915050610de7565b5080915050919050565b610fcb8a8a8a8a8a8a8a8a8a8a61386f565b1561113057610fd8613f46565b8981600001818152505088816020018181525050878160400181815250508681606001818152505085816080018181525050848160a0018181525050838160c0018181525050828160e001818152505081816101000181815250508060028c60405161104491906149ac565b9081526020016040518091039020600082015181600001556020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005015560c0820151816006015560e08201518160070155610100820151816008015590505060008b9080600181540180825580915050600190039060005260206000200160009091909190915090816110e49190614c6e565b507fe5549b694e8ea655c231f5d255127cf7c0f14997a411ccdf6577e3b9911674428b8b8b8b8b8b8b8b8b8b6040516111269a99989796959493929190614d40565b60405180910390a1505b50505050505050505050565b6000600154905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146111f3576040517f3e77415600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006001541161122f576040517f9bfe640f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1660015460405161127790614800565b60006040518083038185875af1925050503d80600081146112b4576040519150601f19603f3d011682016040523d82523d6000602084013e6112b9565b606091505b50509050806112fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112f490614872565b60405180910390fd5b50565b816000805b6000805490508110156113a4576000818154811061132657611325614892565b5b906000526020600020016040516020016113409190614964565b604051602081830303815290604052805190602001208360405160200161136791906149ac565b604051602081830303815290604052805190602001201461139157818061138d906149f2565b9250505b808061139c906149f2565b915050611305565b5060008054905081036113e3576040517fc1c7f9a100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b83426002826040516113f591906149ac565b908152602001604051809103902060020154118061143357504260028260405161141f91906149ac565b908152602001604051809103902060030154105b1561146a576040517f355d234800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b846000805b60038360405161147f91906149ac565b9081526020016040518091039020805490508110156115ce573373ffffffffffffffffffffffffffffffffffffffff166003846040516114bf91906149ac565b908152602001604051809103902082815481106114df576114de614892565b5b906000526020600020906003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141580156115a757506000600481111561154457611543614464565b5b60038460405161155491906149ac565b9081526020016040518091039020828154811061157457611573614892565b5b906000526020600020906003020160020160009054906101000a900460ff1660048111156115a5576115a4614464565b5b145b156115bb5781806115b7906149f2565b9250505b80806115c6906149f2565b91505061146f565b506003826040516115df91906149ac565b9081526020016040518091039020805490508103611629576040517f2ffd4a0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b868660028260405161163b91906149ac565b90815260200160405180910390206007015481108061168d575060028260405161166591906149ac565b90815260200160405180910390206008015461168083610ddd565b61168a9190614a3a565b81105b156116c4576040517fabdda60f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b88600060048111156116d9576116d8614464565b5b6003826040516116e991906149ac565b908152602001604051809103902061170083613782565b8154811061171157611710614892565b5b906000526020600020906003020160020160009054906101000a900460ff16600481111561174257611741614464565b5b14611779576040517fd5556f7600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8860038b60405161178a91906149ac565b90815260200160405180910390206117a18c613782565b815481106117b2576117b1614892565b5b9060005260206000209060030201600101819055507fe886416816c234ad984c20a40b4480b0e1dc31a4da3edbab50626e575b7dbe058a338b6040516117fa93929190614de3565b60405180910390a150505050505050505050565b80600061181a82613782565b905061270f8103611857576040517f2ffd4a0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b82600060028260405161186a91906149ac565b90815260200160405180910390206006015460038360405161188c91906149ac565b90815260200160405180910390206118a384613782565b815481106118b4576118b3614892565b5b9060005260206000209060030201600101546118d09190614e21565b90508034146119185781816040517f1abcbf8700000000000000000000000000000000000000000000000000000000815260040161190f929190614e55565b60405180910390fd5b600460038660405161192a91906149ac565b908152602001604051809103902061194187613782565b8154811061195257611951614892565b5b906000526020600020906003020160020160006101000a81548160ff0219169083600481111561198557611984614464565b5b021790555060028560405161199a91906149ac565b908152602001604051809103902060060154600160008282546119bd9190614a3a565b9250508190555034600160008282546119d69190614a3a565b925050819055507f4e7fdc53ffd8c036522f5a17b0e77cafac1fb09ae2222e4f34b0b95eb3fa3ef5853334604051611a1093929190614de3565b60405180910390a1505060006004811115611a2e57611a2d614464565b5b600383604051611a3e91906149ac565b90815260200160405180910390208281548110611a5e57611a5d614892565b5b906000526020600020906003020160020160009054906101000a900460ff166004811115611a8f57611a8e614464565b5b141580611ae55750611aa082610ddd565b600383604051611ab091906149ac565b90815260200160405180910390208281548110611ad057611acf614892565b5b90600052602060002090600302016001015414155b15611b1c576040517f7963b56f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b826000600282604051611b2f91906149ac565b908152602001604051809103902060060154600383604051611b5191906149ac565b9081526020016040518091039020611b6884613782565b81548110611b7957611b78614892565b5b906000526020600020906003020160010154611b959190614e21565b9050803414611bdd5781816040517f1abcbf87000000000000000000000000000000000000000000000000000000008152600401611bd4929190614e55565b60405180910390fd5b6004600386604051611bef91906149ac565b9081526020016040518091039020611c0687613782565b81548110611c1757611c16614892565b5b906000526020600020906003020160020160006101000a81548160ff02191690836004811115611c4a57611c49614464565b5b0217905550600285604051611c5f91906149ac565b90815260200160405180910390206006015460016000828254611c829190614a3a565b925050819055503460016000828254611c9b9190614a3a565b925050819055507f4e7fdc53ffd8c036522f5a17b0e77cafac1fb09ae2222e4f34b0b95eb3fa3ef5853334604051611cd593929190614de3565b60405180910390a15050505050565b806000805b600080549050811015611d885760008181548110611d0a57611d09614892565b5b90600052602060002001604051602001611d249190614964565b6040516020818303038152906040528051906020012083604051602001611d4b91906149ac565b6040516020818303038152906040528051906020012014611d75578180611d71906149f2565b9250505b8080611d80906149f2565b915050611ce9565b506000805490508103611dc7576040517fc1c7f9a100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8242600282604051611dd991906149ac565b9081526020016040518091039020600001541180611e17575042600282604051611e0391906149ac565b908152602001604051809103902060010154105b15611e4e576040517f60acd97900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8360005b600382604051611e6291906149ac565b908152602001604051809103902080549050811015611f54573373ffffffffffffffffffffffffffffffffffffffff16600383604051611ea291906149ac565b90815260200160405180910390208281548110611ec257611ec1614892565b5b906000526020600020906003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603611f41576040517fd0335efa00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8080611f4c906149f2565b915050611e52565b506000600286604051611f6791906149ac565b908152602001604051809103902060060154600287604051611f8991906149ac565b908152602001604051809103902060050154611fa59190614a3a565b9050803414611fef578534826040517fa60b61bc000000000000000000000000000000000000000000000000000000008152600401611fe693929190614e85565b60405180910390fd5b611ff7613f92565b33816000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060008160400190600481111561204857612047614464565b5b9081600481111561205c5761205b614464565b5b8152505060038760405161207091906149ac565b908152602001604051809103902081908060018154018082558091505060019003906000526020600020906003020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020160006101000a81548160ff0219169083600481111561212457612123614464565b5b0217905550505060028760405161213b91906149ac565b9081526020016040518091039020600501546001600082825461215e9190614a3a565b925050819055507f3d91795a8d93a82cebcc92ac50f202b5aa73244f00228e1cc9cbdafbbdf8fe9b87826000015183604001516040516121a093929190614ed2565b60405180910390a150505050505050565b80600360048111156121c6576121c5614464565b5b6003826040516121d691906149ac565b90815260200160405180910390206121ed83613782565b815481106121fe576121fd614892565b5b906000526020600020906003020160020160009054906101000a900460ff16600481111561222f5761222e614464565b5b14806122b557506002600481111561224a57612249614464565b5b60038260405161225a91906149ac565b908152602001604051809103902061227183613782565b8154811061228257612281614892565b5b906000526020600020906003020160020160009054906101000a900460ff1660048111156122b3576122b2614464565b5b145b8061233a5750600160048111156122cf576122ce614464565b5b6003826040516122df91906149ac565b90815260200160405180910390206122f683613782565b8154811061230757612306614892565b5b906000526020600020906003020160020160009054906101000a900460ff16600481111561233857612337614464565b5b145b806123d957503373ffffffffffffffffffffffffffffffffffffffff1660038260405161236791906149ac565b908152602001604051809103902061237e83613b3b565b8154811061238f5761238e614892565b5b906000526020600020906003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b15612410576040517f68c4171400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060028360405161242291906149ac565b90815260200160405180910390206006015490506003808460405161244791906149ac565b908152602001604051809103902061245e85613782565b8154811061246f5761246e614892565b5b906000526020600020906003020160020160006101000a81548160ff021916908360048111156124a2576124a1614464565b5b021790555060003373ffffffffffffffffffffffffffffffffffffffff16826040516124cd90614800565b60006040518083038185875af1925050503d806000811461250a576040519150601f19603f3d011682016040523d82523d6000602084013e61250f565b606091505b5050905080612553576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161254a90614872565b60405180910390fd5b7f8703deb082bbe9dd18bf858af977f1d7ced58bd7803c949a6e1011ae2d79f1ac8433604051612584929190614aa7565b60405180910390a150505050565b80600061259e82613782565b905061270f81036125db576040517f2ffd4a0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b826003816040516125ec91906149ac565b908152602001604051809103902061260382613782565b8154811061261457612613614892565b5b906000526020600020906003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148015612711575060038160405161268b91906149ac565b90815260200160405180910390206126a282613b3b565b815481106126b3576126b2614892565b5b9060005260206000209060030201600101546003826040516126d591906149ac565b90815260200160405180910390206126ec83613782565b815481106126fd576126fc614892565b5b906000526020600020906003020160010154145b1561278957600061012c61ffff1660028360405161272f91906149ac565b90815260200160405180910390206003015461274b9190614a3a565b905042811015612787576040517f49107ff700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505b60038460405161279991906149ac565b90815260200160405180910390206127b085613b3b565b815481106127c1576127c0614892565b5b9060005260206000209060030201600101546003856040516127e391906149ac565b90815260200160405180910390206127fa86613782565b8154811061280b5761280a614892565b5b90600052602060002090600302016001015414806128ba575060038460405161283491906149ac565b908152602001604051809103902061284b85613cd2565b8154811061285c5761285b614892565b5b90600052602060002090600302016001015460038560405161287e91906149ac565b908152602001604051809103902061289586613782565b815481106128a6576128a5614892565b5b906000526020600020906003020160010154145b1561296c5760026003856040516128d191906149ac565b90815260200160405180910390206128e886613782565b815481106128f9576128f8614892565b5b906000526020600020906003020160020160006101000a81548160ff0219169083600481111561292c5761292b614464565b5b021790555060028460405161294191906149ac565b908152602001604051809103902060060154600160008282546129649190614a3a565b925050819055505b7f87182aaac5dd5ec80140f092551157b9dc8f704ab22b683dc628b3099676d730843360038760405161299f91906149ac565b90815260200160405180910390206129b688613782565b815481106129c7576129c6614892565b5b906000526020600020906003020160020160009054906101000a900460ff166040516129f593929190614ed2565b60405180910390a1600381604051612a0d91906149ac565b9081526020016040518091039020612a2482613782565b81548110612a3557612a34614892565b5b906000526020600020906003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148015612b325750600381604051612aac91906149ac565b9081526020016040518091039020612ac382613cd2565b81548110612ad457612ad3614892565b5b906000526020600020906003020160010154600382604051612af691906149ac565b9081526020016040518091039020612b0d83613782565b81548110612b1e57612b1d614892565b5b906000526020600020906003020160010154145b15612bb6576000600261012c612b489190614f1e565b61ffff16600283604051612b5c91906149ac565b908152602001604051809103902060030154612b789190614a3a565b905042811015612bb4576040517f49107ff700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505b600384604051612bc691906149ac565b9081526020016040518091039020612bdd85613b3b565b81548110612bee57612bed614892565b5b906000526020600020906003020160010154600385604051612c1091906149ac565b9081526020016040518091039020612c2786613782565b81548110612c3857612c37614892565b5b9060005260206000209060030201600101541480612ce75750600384604051612c6191906149ac565b9081526020016040518091039020612c7885613cd2565b81548110612c8957612c88614892565b5b906000526020600020906003020160010154600385604051612cab91906149ac565b9081526020016040518091039020612cc286613782565b81548110612cd357612cd2614892565b5b906000526020600020906003020160010154145b15612d99576002600385604051612cfe91906149ac565b9081526020016040518091039020612d1586613782565b81548110612d2657612d25614892565b5b906000526020600020906003020160020160006101000a81548160ff02191690836004811115612d5957612d58614464565b5b0217905550600284604051612d6e91906149ac565b90815260200160405180910390206006015460016000828254612d919190614a3a565b925050819055505b7f87182aaac5dd5ec80140f092551157b9dc8f704ab22b683dc628b3099676d7308433600387604051612dcc91906149ac565b9081526020016040518091039020612de388613782565b81548110612df457612df3614892565b5b906000526020600020906003020160020160009054906101000a900460ff16604051612e2293929190614ed2565b60405180910390a15060006004811115612e3f57612e3e614464565b5b600383604051612e4f91906149ac565b90815260200160405180910390208281548110612e6f57612e6e614892565b5b906000526020600020906003020160020160009054906101000a900460ff166004811115612ea057612e9f614464565b5b141580612ef65750612eb182610ddd565b600383604051612ec191906149ac565b90815260200160405180910390208281548110612ee157612ee0614892565b5b90600052602060002090600302016001015414155b15612f2d576040517f7963b56f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b82600381604051612f3e91906149ac565b9081526020016040518091039020612f5582613782565b81548110612f6657612f65614892565b5b906000526020600020906003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480156130635750600381604051612fdd91906149ac565b9081526020016040518091039020612ff482613b3b565b8154811061300557613004614892565b5b90600052602060002090600302016001015460038260405161302791906149ac565b908152602001604051809103902061303e83613782565b8154811061304f5761304e614892565b5b906000526020600020906003020160010154145b156130db57600061012c61ffff1660028360405161308191906149ac565b90815260200160405180910390206003015461309d9190614a3a565b9050428110156130d9576040517f49107ff700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505b6003846040516130eb91906149ac565b908152602001604051809103902061310285613b3b565b8154811061311357613112614892565b5b90600052602060002090600302016001015460038560405161313591906149ac565b908152602001604051809103902061314c86613782565b8154811061315d5761315c614892565b5b906000526020600020906003020160010154148061320c575060038460405161318691906149ac565b908152602001604051809103902061319d85613cd2565b815481106131ae576131ad614892565b5b9060005260206000209060030201600101546003856040516131d091906149ac565b90815260200160405180910390206131e786613782565b815481106131f8576131f7614892565b5b906000526020600020906003020160010154145b156132be57600260038560405161322391906149ac565b908152602001604051809103902061323a86613782565b8154811061324b5761324a614892565b5b906000526020600020906003020160020160006101000a81548160ff0219169083600481111561327e5761327d614464565b5b021790555060028460405161329391906149ac565b908152602001604051809103902060060154600160008282546132b69190614a3a565b925050819055505b7f87182aaac5dd5ec80140f092551157b9dc8f704ab22b683dc628b3099676d73084336003876040516132f191906149ac565b908152602001604051809103902061330888613782565b8154811061331957613318614892565b5b906000526020600020906003020160020160009054906101000a900460ff1660405161334793929190614ed2565b60405180910390a160038160405161335f91906149ac565b908152602001604051809103902061337682613782565b8154811061338757613386614892565b5b906000526020600020906003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614801561348457506003816040516133fe91906149ac565b908152602001604051809103902061341582613cd2565b8154811061342657613425614892565b5b90600052602060002090600302016001015460038260405161344891906149ac565b908152602001604051809103902061345f83613782565b815481106134705761346f614892565b5b906000526020600020906003020160010154145b15613508576000600261012c61349a9190614f1e565b61ffff166002836040516134ae91906149ac565b9081526020016040518091039020600301546134ca9190614a3a565b905042811015613506576040517f49107ff700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505b60038460405161351891906149ac565b908152602001604051809103902061352f85613b3b565b815481106135405761353f614892565b5b90600052602060002090600302016001015460038560405161356291906149ac565b908152602001604051809103902061357986613782565b8154811061358a57613589614892565b5b906000526020600020906003020160010154148061363957506003846040516135b391906149ac565b90815260200160405180910390206135ca85613cd2565b815481106135db576135da614892565b5b9060005260206000209060030201600101546003856040516135fd91906149ac565b908152602001604051809103902061361486613782565b8154811061362557613624614892565b5b906000526020600020906003020160010154145b156136eb57600260038560405161365091906149ac565b908152602001604051809103902061366786613782565b8154811061367857613677614892565b5b906000526020600020906003020160020160006101000a81548160ff021916908360048111156136ab576136aa614464565b5b02179055506002846040516136c091906149ac565b908152602001604051809103902060060154600160008282546136e39190614a3a565b925050819055505b7f87182aaac5dd5ec80140f092551157b9dc8f704ab22b683dc628b3099676d730843360038760405161371e91906149ac565b908152602001604051809103902061373588613782565b8154811061374657613745614892565b5b906000526020600020906003020160020160009054906101000a900460ff1660405161377493929190614ed2565b60405180910390a150505050565b600080600090505b60038360405161379a91906149ac565b908152602001604051809103902080549050811015613863573373ffffffffffffffffffffffffffffffffffffffff166003846040516137da91906149ac565b908152602001604051809103902082815481106137fa576137f9614892565b5b906000526020600020906003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603613850578091505061386a565b808061385b906149f2565b91505061378a565b5061270f90505b919050565b60008a60005b600080549050811015613937576000818154811061389657613895614892565b5b906000526020600020016040516020016138b09190614964565b60405160208183030381529060405280519060200120826040516020016138d791906149ac565b6040516020818303038152906040528051906020012003613924576040517f6b9108f800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b808061392f906149f2565b915050613875565b508a8a428210806139485750808210155b1561397f576040517f5e83d5f800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8b8b8082106139ba576040517f7a9971e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8c8c8082106139f5576040517fe2049fa500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8d8d808210613a30576040517fcc2116a000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8d60008111613a6b576040517fb25c88c500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8d60008111613aa6576040517fb0f07a6300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8d60008111613ae1576040517ffb833a9900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8d60008111613b1c576040517fa9ed13a300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60019d50505050505050505050505050509a9950505050505050505050565b60008060005b600384604051613b5191906149ac565b908152602001604051809103902080549050811015613cc857600384604051613b7a91906149ac565b90815260200160405180910390208181548110613b9a57613b99614892565b5b90600052602060002090600302016001015482108015613c2d575060026004811115613bc957613bc8614464565b5b600385604051613bd991906149ac565b90815260200160405180910390208281548110613bf957613bf8614892565b5b906000526020600020906003020160020160009054906101000a900460ff166004811115613c2a57613c29614464565b5b14155b8015613cac575060016004811115613c4857613c47614464565b5b600385604051613c5891906149ac565b90815260200160405180910390208281548110613c7857613c77614892565b5b906000526020600020906003020160020160009054906101000a900460ff166004811115613ca957613ca8614464565b5b14155b15613cb5578091505b8080613cc0906149f2565b915050613b41565b5080915050919050565b600080600383604051613ce591906149ac565b908152602001604051809103902090506000613d0084610ddd565b905081805490508110613d1257600080fd5b8160018380549050613d249190614e21565b81548110613d3557613d34614892565b5b9060005260206000209060030201828281548110613d5657613d55614892565b5b90600052602060002090600302016000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600182015481600101556002820160009054906101000a900460ff168160020160006101000a81548160ff02191690836004811115613e0d57613e0c614464565b5b021790555090505081805480613e2657613e25614f5b565b5b6001900381819060005260206000209060030201600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560018201600090556002820160006101000a81549060ff021916905550509055600080600090505b8380549050811015613f3a57838181548110613ea957613ea8614892565b5b90600052602060002090600302016001015482108015613f1e575060006004811115613ed857613ed7614464565b5b848281548110613eeb57613eea614892565b5b906000526020600020906003020160020160009054906101000a900460ff166004811115613f1c57613f1b614464565b5b145b15613f27578091505b8080613f32906149f2565b915050613e8a565b50809350505050919050565b6040518061012001604052806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160006004811115613fd557613fd4614464565b5b81525090565b6000819050919050565b613fee81613fdb565b82525050565b60006020820190506140096000830184613fe5565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561407557808201518184015260208101905061405a565b60008484015250505050565b6000601f19601f8301169050919050565b600061409d8261403b565b6140a78185614046565b93506140b7818560208601614057565b6140c081614081565b840191505092915050565b60006140d78383614092565b905092915050565b6000602082019050919050565b60006140f78261400f565b614101818561401a565b9350836020820285016141138561402b565b8060005b8581101561414f578484038952815161413085826140cb565b945061413b836140df565b925060208a01995050600181019050614117565b50829750879550505050505092915050565b6000602082019050818103600083015261417b81846140ec565b905092915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6141d982614081565b810181811067ffffffffffffffff821117156141f8576141f76141a1565b5b80604052505050565b600061420b614183565b905061421782826141d0565b919050565b600067ffffffffffffffff821115614237576142366141a1565b5b61424082614081565b9050602081019050919050565b82818337600083830152505050565b600061426f61426a8461421c565b614201565b90508281526020810184848401111561428b5761428a61419c565b5b61429684828561424d565b509392505050565b600082601f8301126142b3576142b2614197565b5b81356142c384826020860161425c565b91505092915050565b6000602082840312156142e2576142e161418d565b5b600082013567ffffffffffffffff811115614300576142ff614192565b5b61430c8482850161429e565b91505092915050565b61431e81613fdb565b82525050565b6101208201600082015161433b6000850182614315565b50602082015161434e6020850182614315565b5060408201516143616040850182614315565b5060608201516143746060850182614315565b5060808201516143876080850182614315565b5060a082015161439a60a0850182614315565b5060c08201516143ad60c0850182614315565b5060e08201516143c060e0850182614315565b506101008201516143d5610100850182614315565b50505050565b6000610120820190506143f16000830184614324565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061444e82614423565b9050919050565b61445e81614443565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600581106144a4576144a3614464565b5b50565b60008190506144b582614493565b919050565b60006144c5826144a7565b9050919050565b6144d5816144ba565b82525050565b6060820160008201516144f16000850182614455565b5060208201516145046020850182614315565b50604082015161451760408501826144cc565b50505050565b600061452983836144db565b60608301905092915050565b6000602082019050919050565b600061454d826143f7565b6145578185614402565b935061456283614413565b8060005b8381101561459357815161457a888261451d565b975061458583614535565b925050600181019050614566565b5085935050505092915050565b600060208201905081810360008301526145ba8184614542565b905092915050565b6145cb81613fdb565b81146145d657600080fd5b50565b6000813590506145e8816145c2565b92915050565b6000806000806000806000806000806101408b8d0312156146125761461161418d565b5b60008b013567ffffffffffffffff8111156146305761462f614192565b5b61463c8d828e0161429e565b9a5050602061464d8d828e016145d9565b995050604061465e8d828e016145d9565b985050606061466f8d828e016145d9565b97505060806146808d828e016145d9565b96505060a06146918d828e016145d9565b95505060c06146a28d828e016145d9565b94505060e06146b38d828e016145d9565b9350506101006146c58d828e016145d9565b9250506101206146d78d828e016145d9565b9150509295989b9194979a5092959850565b6146f281614443565b82525050565b600060208201905061470d60008301846146e9565b92915050565b6000806040838503121561472a5761472961418d565b5b600083013567ffffffffffffffff81111561474857614747614192565b5b6147548582860161429e565b9250506020614765858286016145d9565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806147b657607f821691505b6020821081036147c9576147c861476f565b5b50919050565b600081905092915050565b50565b60006147ea6000836147cf565b91506147f5826147da565b600082019050919050565b600061480b826147dd565b9150819050919050565b600082825260208201905092915050565b7f5472616e73666572206661696c65640000000000000000000000000000000000600082015250565b600061485c600f83614815565b915061486782614826565b602082019050919050565b6000602082019050818103600083015261488b8161484f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081905092915050565b60008190508160005260206000209050919050565b600081546148ee8161479e565b6148f881866148c1565b9450600182166000811461491357600181146149285761495b565b60ff198316865281151582028601935061495b565b614931856148cc565b60005b8381101561495357815481890152600182019150602081019050614934565b838801955050505b50505092915050565b600061497082846148e1565b915081905092915050565b60006149868261403b565b61499081856148c1565b93506149a0818560208601614057565b80840191505092915050565b60006149b8828461497b565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006149fd82613fdb565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203614a2f57614a2e6149c3565b5b600182019050919050565b6000614a4582613fdb565b9150614a5083613fdb565b9250828201905080821115614a6857614a676149c3565b5b92915050565b6000614a798261403b565b614a838185614815565b9350614a93818560208601614057565b614a9c81614081565b840191505092915050565b60006040820190508181036000830152614ac18185614a6e565b9050614ad060208301846146e9565b9392505050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302614b247fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82614ae7565b614b2e8683614ae7565b95508019841693508086168417925050509392505050565b6000819050919050565b6000614b6b614b66614b6184613fdb565b614b46565b613fdb565b9050919050565b6000819050919050565b614b8583614b50565b614b99614b9182614b72565b848454614af4565b825550505050565b600090565b614bae614ba1565b614bb9818484614b7c565b505050565b5b81811015614bdd57614bd2600082614ba6565b600181019050614bbf565b5050565b601f821115614c2257614bf3816148cc565b614bfc84614ad7565b81016020851015614c0b578190505b614c1f614c1785614ad7565b830182614bbe565b50505b505050565b600082821c905092915050565b6000614c4560001984600802614c27565b1980831691505092915050565b6000614c5e8383614c34565b9150826002028217905092915050565b614c778261403b565b67ffffffffffffffff811115614c9057614c8f6141a1565b5b614c9a825461479e565b614ca5828285614be1565b600060209050601f831160018114614cd85760008415614cc6578287015190505b614cd08582614c52565b865550614d38565b601f198416614ce6866148cc565b60005b82811015614d0e57848901518255600182019150602085019450602081019050614ce9565b86831015614d2b5784890151614d27601f891682614c34565b8355505b6001600288020188555050505b505050505050565b6000610140820190508181036000830152614d5b818d614a6e565b9050614d6a602083018c613fe5565b614d77604083018b613fe5565b614d84606083018a613fe5565b614d916080830189613fe5565b614d9e60a0830188613fe5565b614dab60c0830187613fe5565b614db860e0830186613fe5565b614dc6610100830185613fe5565b614dd4610120830184613fe5565b9b9a5050505050505050505050565b60006060820190508181036000830152614dfd8186614a6e565b9050614e0c60208301856146e9565b614e196040830184613fe5565b949350505050565b6000614e2c82613fdb565b9150614e3783613fdb565b9250828203905081811115614e4f57614e4e6149c3565b5b92915050565b60006040820190508181036000830152614e6f8185614a6e565b9050614e7e6020830184613fe5565b9392505050565b60006060820190508181036000830152614e9f8186614a6e565b9050614eae6020830185613fe5565b614ebb6040830184613fe5565b949350505050565b614ecc816144ba565b82525050565b60006060820190508181036000830152614eec8186614a6e565b9050614efb60208301856146e9565b614f086040830184614ec3565b949350505050565b600061ffff82169050919050565b6000614f2982614f10565b9150614f3483614f10565b9250828202614f4281614f10565b9150808214614f5457614f536149c3565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea2646970667358221220290d5bd0100f4fc192275cae60fae75e9454fc7ddabe91a3694be1c1c01f3ab864736f6c63430008110033",
  "devdoc": {
    "author": "Decentralized Auction Platform Team",
    "details": "This implements the auctioneer job",
    "kind": "dev",
    "methods": {},
    "title": "Decentralized Auction Platform",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "This contract is for Decentralized Auction Platform",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 67,
        "contract": "contracts/Auction.sol:Auction",
        "label": "s_auctionList",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_string_storage)dyn_storage"
      },
      {
        "astId": 69,
        "contract": "contracts/Auction.sol:Auction",
        "label": "s_proceeds",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 199,
        "contract": "contracts/Auction.sol:Auction",
        "label": "s_auctionInformations",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_string_memory_ptr,t_struct(AuctionInformation)99_storage)"
      },
      {
        "astId": 205,
        "contract": "contracts/Auction.sol:Auction",
        "label": "s_bidInformations",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_string_memory_ptr,t_array(t_struct(BidInformation)116_storage)dyn_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_string_storage)dyn_storage": {
        "base": "t_string_storage",
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(BidInformation)116_storage)dyn_storage": {
        "base": "t_struct(BidInformation)116_storage",
        "encoding": "dynamic_array",
        "label": "struct Auction.BidInformation[]",
        "numberOfBytes": "32"
      },
      "t_enum(BidderState)80": {
        "encoding": "inplace",
        "label": "enum Auction.BidderState",
        "numberOfBytes": "1"
      },
      "t_mapping(t_string_memory_ptr,t_array(t_struct(BidInformation)116_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct Auction.BidInformation[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(BidInformation)116_storage)dyn_storage"
      },
      "t_mapping(t_string_memory_ptr,t_struct(AuctionInformation)99_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct Auction.AuctionInformation)",
        "numberOfBytes": "32",
        "value": "t_struct(AuctionInformation)99_storage"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(AuctionInformation)99_storage": {
        "encoding": "inplace",
        "label": "struct Auction.AuctionInformation",
        "members": [
          {
            "astId": 82,
            "contract": "contracts/Auction.sol:Auction",
            "label": "startRegistrationTime",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 84,
            "contract": "contracts/Auction.sol:Auction",
            "label": "endRegistrationTime",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 86,
            "contract": "contracts/Auction.sol:Auction",
            "label": "startAuctionTime",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 88,
            "contract": "contracts/Auction.sol:Auction",
            "label": "endAuctionTime",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 90,
            "contract": "contracts/Auction.sol:Auction",
            "label": "duePaymentTime",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 92,
            "contract": "contracts/Auction.sol:Auction",
            "label": "registrationFee",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 94,
            "contract": "contracts/Auction.sol:Auction",
            "label": "depositAmount",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 96,
            "contract": "contracts/Auction.sol:Auction",
            "label": "startBid",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          },
          {
            "astId": 98,
            "contract": "contracts/Auction.sol:Auction",
            "label": "priceStep",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "288"
      },
      "t_struct(BidInformation)116_storage": {
        "encoding": "inplace",
        "label": "struct Auction.BidInformation",
        "members": [
          {
            "astId": 110,
            "contract": "contracts/Auction.sol:Auction",
            "label": "bidder",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 112,
            "contract": "contracts/Auction.sol:Auction",
            "label": "bidAmount",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 115,
            "contract": "contracts/Auction.sol:Auction",
            "label": "bidderState",
            "offset": 0,
            "slot": "2",
            "type": "t_enum(BidderState)80"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}