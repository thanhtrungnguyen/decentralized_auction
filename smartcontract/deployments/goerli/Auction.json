{
  "address": "0xaf87d5EF22D5d5f1f6C7983236E9D8AA6D681b50",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Auction__AlreadyRegisteredBidder",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__BidderRetractedBid",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__ConfirmationTimeout",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__InvalidAuctionId",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__InvalidAuctionTime",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__InvalidBidAmount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__InvalidDepositAmount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__InvalidDuePaymentTime",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__InvalidPriceStep",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__InvalidRegistrationFee",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__InvalidRegistrationTime",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__InvalidStartAuctionTime",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__InvalidStartBid",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__NoProceeds",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__NotExistAuctionId",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__NotRegisteredBidder",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__NotWinnerOfAuction",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__OutOfAuctionTime",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__OutOfRegistrationTime",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "requirePaymentAmount",
          "type": "uint256"
        }
      ],
      "name": "Auction__RequireAmountToPaymentNotMet",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "requireAmountToRegister",
          "type": "uint256"
        }
      ],
      "name": "Auction__RequireAmountToRegisterNotMet",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__WithdrawDeposit",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "bidder",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "enum Auction.BidderState",
          "name": "bidderState",
          "type": "uint8"
        }
      ],
      "name": "CanceledAuctionResult",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        }
      ],
      "name": "ClosedAuction",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "bidder",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "paidAmount",
          "type": "uint256"
        }
      ],
      "name": "ClosedAuctionSuccessful",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startRegistrationTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endRegistrationTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startAuctionTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endAuctionTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "duePaymentTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "registrationFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "depositAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startBid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "priceStep",
          "type": "uint256"
        }
      ],
      "name": "CreatedAuction",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "bidder",
          "type": "address"
        }
      ],
      "name": "Paidback",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "bidder",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "bidAmount",
          "type": "uint256"
        }
      ],
      "name": "PlacedBid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "bidder",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "enum Auction.BidderState",
          "name": "bidderState",
          "type": "uint8"
        }
      ],
      "name": "RegisteredToBid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "bidder",
          "type": "address"
        }
      ],
      "name": "RetractedBid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "bidder",
          "type": "address"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        }
      ],
      "name": "cancelAuctionResult",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "startRegistrationTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endRegistrationTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startAuctionTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endAuctionTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "duePaymentTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "registrationFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "depositAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startBid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "priceStep",
          "type": "uint256"
        }
      ],
      "name": "createAuction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        }
      ],
      "name": "getAuctionInformationById",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startRegistrationTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endRegistrationTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "startAuctionTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endAuctionTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duePaymentTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "registrationFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "depositAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "startBid",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "priceStep",
              "type": "uint256"
            }
          ],
          "internalType": "struct Auction.AuctionInformation",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        }
      ],
      "name": "getBidInformationByAuctionId",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "bidder",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "bidAmount",
              "type": "uint256"
            },
            {
              "internalType": "enum Auction.BidderState",
              "name": "bidderState",
              "type": "uint8"
            }
          ],
          "internalType": "struct Auction.BidInformation[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        }
      ],
      "name": "getHighestBidOfAuction",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getListAuctionId",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getProceeds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        }
      ],
      "name": "payment",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "bidAmount",
          "type": "uint256"
        }
      ],
      "name": "placeBid",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        }
      ],
      "name": "registerToBid",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        }
      ],
      "name": "retractBid",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        }
      ],
      "name": "withdrawDeposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawProceeds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x80d8d268e436cbae136ce31c18fa42a5ab9a86cb6182faef28cc038dd3091bf8",
  "receipt": {
    "to": null,
    "from": "0x26594a6109a5154C8E10765C5f15F4B7F54e0420",
    "contractAddress": "0xaf87d5EF22D5d5f1f6C7983236E9D8AA6D681b50",
    "transactionIndex": 79,
    "gasUsed": "3864830",
    "logsBloom": "0x
    "blockHash": "0xaaa83ce80f59fd863c752458a1e32b1285aef255fe5213c83ba8a431a5f974ca",
    "transactionHash": "0x80d8d268e436cbae136ce31c18fa42a5ab9a86cb6182faef28cc038dd3091bf8",
    "logs": [],
    "blockNumber": 8282070,
    "cumulativeGasUsed": "27951768",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "88d246205e466ffbf892ef155ce78a13",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Auction__AlreadyRegisteredBidder\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__BidderRetractedBid\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__ConfirmationTimeout\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__InvalidAuctionId\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__InvalidAuctionTime\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__InvalidBidAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__InvalidDepositAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__InvalidDuePaymentTime\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__InvalidPriceStep\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__InvalidRegistrationFee\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__InvalidRegistrationTime\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__InvalidStartAuctionTime\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__InvalidStartBid\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__NoProceeds\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__NotExistAuctionId\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__NotRegisteredBidder\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__NotWinnerOfAuction\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__OutOfAuctionTime\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__OutOfRegistrationTime\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"requirePaymentAmount\",\"type\":\"uint256\"}],\"name\":\"Auction__RequireAmountToPaymentNotMet\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requireAmountToRegister\",\"type\":\"uint256\"}],\"name\":\"Auction__RequireAmountToRegisterNotMet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__WithdrawDeposit\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum Auction.BidderState\",\"name\":\"bidderState\",\"type\":\"uint8\"}],\"name\":\"CanceledAuctionResult\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"}],\"name\":\"ClosedAuction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paidAmount\",\"type\":\"uint256\"}],\"name\":\"ClosedAuctionSuccessful\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startRegistrationTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endRegistrationTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startAuctionTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endAuctionTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"duePaymentTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"registrationFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"depositAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startBid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"priceStep\",\"type\":\"uint256\"}],\"name\":\"CreatedAuction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"}],\"name\":\"Paidback\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bidAmount\",\"type\":\"uint256\"}],\"name\":\"PlacedBid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum Auction.BidderState\",\"name\":\"bidderState\",\"type\":\"uint8\"}],\"name\":\"RegisteredToBid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"}],\"name\":\"RetractedBid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"}],\"name\":\"cancelAuctionResult\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"startRegistrationTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endRegistrationTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startAuctionTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endAuctionTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duePaymentTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"registrationFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"depositAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startBid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priceStep\",\"type\":\"uint256\"}],\"name\":\"createAuction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"}],\"name\":\"getAuctionInformationById\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startRegistrationTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endRegistrationTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startAuctionTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endAuctionTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duePaymentTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"registrationFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"depositAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startBid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priceStep\",\"type\":\"uint256\"}],\"internalType\":\"struct Auction.AuctionInformation\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"}],\"name\":\"getBidInformationByAuctionId\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"bidAmount\",\"type\":\"uint256\"},{\"internalType\":\"enum Auction.BidderState\",\"name\":\"bidderState\",\"type\":\"uint8\"}],\"internalType\":\"struct Auction.BidInformation[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"}],\"name\":\"getHighestBidOfAuction\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getListAuctionId\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProceeds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"}],\"name\":\"payment\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"bidAmount\",\"type\":\"uint256\"}],\"name\":\"placeBid\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"}],\"name\":\"registerToBid\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"}],\"name\":\"retractBid\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"}],\"name\":\"withdrawDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawProceeds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Decentralized Auction Platform Team\",\"details\":\"This implements the auctioneer job\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Decentralized Auction Platform\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This contract is for Decentralized Auction Platform\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Auction.sol\":\"Auction\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Auction.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.17;\\r\\n\\r\\nerror Auction__InvalidRegistrationTime();\\r\\nerror Auction__InvalidAuctionTime();\\r\\nerror Auction__InvalidDuePaymentTime();\\r\\nerror Auction__InvalidStartAuctionTime();\\r\\nerror Auction__InvalidRegistrationFee();\\r\\nerror Auction__InvalidDepositAmount();\\r\\nerror Auction__InvalidStartBid();\\r\\nerror Auction__InvalidPriceStep();\\r\\nerror Auction__InvalidDatetime();\\r\\nerror Auction__InvalidAuctionId();\\r\\nerror Auction__OutOfRegistrationTime();\\r\\nerror Auction__RequireAmountToRegisterNotMet(\\r\\n    string auctionId,\\r\\n    uint256 value,\\r\\n    uint256 requireAmountToRegister\\r\\n);\\r\\nerror Auction__OutOfAuctionTime();\\r\\nerror Auction__InvalidBidAmount();\\r\\nerror Auction__NotRegisteredBidder();\\r\\nerror Auction__NotExistAuctionId();\\r\\nerror Auction__ConfirmationTimeout();\\r\\nerror Auction__NotWinnerOfAuction();\\r\\nerror Auction__TransferFailed();\\r\\nerror Auction__RequireAmountToPaymentNotMet(string auctionId, uint256 requirePaymentAmount);\\r\\nerror Auction__NotExistAuction();\\r\\nerror Auction__NotOwner();\\r\\nerror Auction__AlreadyRegisteredBidder();\\r\\nerror Auction__NoProceeds();\\r\\nerror Auction__WithdrawDeposit();\\r\\nerror Auction__BidderRetractedBid();\\r\\n\\r\\n/**@title Decentralized Auction Platform\\r\\n * @author Decentralized Auction Platform Team\\r\\n * @notice This contract is for Decentralized Auction Platform\\r\\n * @dev This implements the auctioneer job\\r\\n */\\r\\ncontract Auction {\\r\\n    string[] private s_auctionList;\\r\\n    uint256 private s_proceeds;\\r\\n    address private immutable i_owner;\\r\\n    uint16 private constant CONFIRMATION_TIME = 300;\\r\\n    enum BidderState {\\r\\n        BIDING, // registered or bidding\\r\\n        RETRACT, // retract bid\\r\\n        CANCEL, // cancel auction result\\r\\n        WITHDRAW, // withdaw deposit\\r\\n        PAYMENT // payment complete\\r\\n    }\\r\\n\\r\\n    struct AuctionInformation {\\r\\n        uint256 startRegistrationTime;\\r\\n        uint256 endRegistrationTime;\\r\\n        uint256 startAuctionTime;\\r\\n        uint256 endAuctionTime;\\r\\n        uint256 duePaymentTime;\\r\\n        uint256 registrationFee;\\r\\n        uint256 depositAmount;\\r\\n        uint256 startBid;\\r\\n        uint256 priceStep;\\r\\n    }\\r\\n\\r\\n    constructor() {\\r\\n        i_owner = msg.sender;\\r\\n    }\\r\\n\\r\\n    struct BidInformation {\\r\\n        address bidder;\\r\\n        uint256 bidAmount;\\r\\n        BidderState bidderState;\\r\\n    }\\r\\n\\r\\n    event CreatedAuction(\\r\\n        string auctionId,\\r\\n        uint256 startRegistrationTime,\\r\\n        uint256 endRegistrationTime,\\r\\n        uint256 startAuctionTime,\\r\\n        uint256 endAuctionTime,\\r\\n        uint256 duePaymentTime,\\r\\n        uint256 registrationFee,\\r\\n        uint256 depositAmount,\\r\\n        uint256 startBid,\\r\\n        uint256 priceStep\\r\\n    );\\r\\n    event PlacedBid(string auctionId, address bidder, uint256 bidAmount);\\r\\n    event RetractedBid(string auctionId, address bidder);\\r\\n    event RegisteredToBid(string auctionId, address bidder, BidderState bidderState);\\r\\n    event ClosedAuction(string auctionId);\\r\\n    event CanceledAuctionResult(string auctionId, address bidder, BidderState bidderState);\\r\\n    event Paidback(string auctionId, address bidder);\\r\\n    event ClosedAuctionSuccessful(string auctionId, address bidder, uint256 paidAmount);\\r\\n    event Withdraw(string auctionId, address bidder);\\r\\n\\r\\n    mapping(string => AuctionInformation) private s_auctionInformations;\\r\\n    mapping(string => BidInformation[]) private s_bidInformations;\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        if (msg.sender != i_owner) revert Auction__NotOwner();\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isVailidAuctionId(string memory auctionId) {\\r\\n        for (uint256 i = 0; i < s_auctionList.length; i++) {\\r\\n            if (\\r\\n                keccak256(abi.encodePacked(auctionId)) ==\\r\\n                keccak256(abi.encodePacked(s_auctionList[i]))\\r\\n            ) {\\r\\n                revert Auction__InvalidAuctionId();\\r\\n            }\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isExistAuctionId(string memory auctionId) {\\r\\n        uint256 count = 0;\\r\\n        for (uint256 i = 0; i < s_auctionList.length; i++) {\\r\\n            if (\\r\\n                keccak256(abi.encodePacked(auctionId)) !=\\r\\n                keccak256(abi.encodePacked(s_auctionList[i]))\\r\\n            ) {\\r\\n                count++;\\r\\n            }\\r\\n        }\\r\\n        if (count == s_auctionList.length) {\\r\\n            revert Auction__NotExistAuctionId();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isValidRegistrationTime(uint256 startRegistrationTime, uint256 endRegistrationTime) {\\r\\n        if (\\r\\n            startRegistrationTime < block.timestamp || startRegistrationTime >= endRegistrationTime\\r\\n        ) {\\r\\n            revert Auction__InvalidRegistrationTime();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isValidStartAuctionTime(uint256 endRegistrationTime, uint256 startAuctionTime) {\\r\\n        if (endRegistrationTime >= startAuctionTime) {\\r\\n            revert Auction__InvalidStartAuctionTime();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isValidAuctionTime(uint256 startAuctionTime, uint256 endAuctionTime) {\\r\\n        if (startAuctionTime >= endAuctionTime) {\\r\\n            revert Auction__InvalidAuctionTime();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isValidDuePaymentTime(uint256 endAuctionTime, uint256 duePaymentTime) {\\r\\n        if (endAuctionTime >= duePaymentTime) {\\r\\n            revert Auction__InvalidDuePaymentTime();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isValidRegistrationFee(uint256 registrationFee) {\\r\\n        if (registrationFee <= 0) {\\r\\n            revert Auction__InvalidRegistrationFee();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isValidDepositAmount(uint256 depositAmount) {\\r\\n        if (depositAmount <= 0) {\\r\\n            revert Auction__InvalidDepositAmount();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isValidStartBid(uint256 depositAmount) {\\r\\n        if (depositAmount <= 0) {\\r\\n            revert Auction__InvalidStartBid();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isValidPriceStep(uint256 depositAmount) {\\r\\n        if (depositAmount <= 0) {\\r\\n            revert Auction__InvalidPriceStep();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isRegistrationTime(string memory auctionId) {\\r\\n        if (\\r\\n            s_auctionInformations[auctionId].startRegistrationTime > block.timestamp ||\\r\\n            s_auctionInformations[auctionId].endRegistrationTime < block.timestamp\\r\\n        ) {\\r\\n            revert Auction__OutOfRegistrationTime();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isAuctionTime(string memory auctionId) {\\r\\n        if (\\r\\n            s_auctionInformations[auctionId].startAuctionTime > block.timestamp ||\\r\\n            s_auctionInformations[auctionId].endAuctionTime < block.timestamp\\r\\n        ) {\\r\\n            revert Auction__OutOfAuctionTime();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isValidBidAmount(string memory auctionId, uint256 bidAmount) {\\r\\n        if (\\r\\n            bidAmount < s_auctionInformations[auctionId].startBid ||\\r\\n            bidAmount <\\r\\n            getHighestBidOfAuction(auctionId) + s_auctionInformations[auctionId].priceStep\\r\\n        ) {\\r\\n            revert Auction__InvalidBidAmount();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isRegisteredBidder(string memory auctionId) {\\r\\n        uint256 count = 0;\\r\\n        for (uint256 i = 0; i < s_bidInformations[auctionId].length; i++) {\\r\\n            if (\\r\\n                s_bidInformations[auctionId][i].bidder != msg.sender &&\\r\\n                s_bidInformations[auctionId][i].bidderState == BidderState.BIDING\\r\\n            ) {\\r\\n                count++;\\r\\n            }\\r\\n        }\\r\\n        if (count == s_bidInformations[auctionId].length) {\\r\\n            revert Auction__NotRegisteredBidder();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n    modifier isAlreadyRegisteredBidder(string memory auctionId) {\\r\\n        for (uint256 i = 0; i < s_bidInformations[auctionId].length; i++) {\\r\\n            if (s_bidInformations[auctionId][i].bidder == msg.sender) {\\r\\n                revert Auction__AlreadyRegisteredBidder();\\r\\n            }\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n    modifier isConfirmationTime(string memory auctionId) {\\r\\n        if (\\r\\n            msg.sender == s_bidInformations[auctionId][getIndexOfBidder(auctionId)].bidder &&\\r\\n            s_bidInformations[auctionId][getIndexOfBidder(auctionId)].bidAmount ==\\r\\n            s_bidInformations[auctionId][getIndexOfFirstOfAuction(auctionId)].bidAmount\\r\\n        ) {\\r\\n            uint256 dueConfirmationTime = s_auctionInformations[auctionId].endAuctionTime +\\r\\n                CONFIRMATION_TIME;\\r\\n            if (dueConfirmationTime > block.timestamp) {\\r\\n                revert Auction__ConfirmationTimeout();\\r\\n            }\\r\\n        }\\r\\n        _;\\r\\n        if (\\r\\n            msg.sender == s_bidInformations[auctionId][getIndexOfBidder(auctionId)].bidder &&\\r\\n            s_bidInformations[auctionId][getIndexOfBidder(auctionId)].bidAmount ==\\r\\n            s_bidInformations[auctionId][getIndexOfSecondOfAuction(auctionId)].bidAmount\\r\\n        ) {\\r\\n            uint256 dueConfirmationTime = s_auctionInformations[auctionId].endAuctionTime +\\r\\n                CONFIRMATION_TIME *\\r\\n                2;\\r\\n            if (dueConfirmationTime > block.timestamp) {\\r\\n                revert Auction__ConfirmationTimeout();\\r\\n            }\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isWinnerOfAuction(string memory auctionId) {\\r\\n        if (\\r\\n            s_bidInformations[auctionId][getIndexOfBidder(auctionId)].bidderState !=\\r\\n            BidderState.BIDING ||\\r\\n            s_bidInformations[auctionId][getIndexOfBidder(auctionId)].bidAmount !=\\r\\n            getHighestBidOfAuction(auctionId)\\r\\n        ) {\\r\\n            revert Auction__NotWinnerOfAuction();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n    modifier isValidPaymentAmount(string memory auctionId) {\\r\\n        uint256 requirePaymentAmount = s_bidInformations[auctionId][getIndexOfBidder(auctionId)]\\r\\n            .bidAmount - s_auctionInformations[auctionId].depositAmount;\\r\\n        if (msg.value != requirePaymentAmount) {\\r\\n            revert Auction__RequireAmountToPaymentNotMet(auctionId, requirePaymentAmount);\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isWithdrawDeposit(string memory auctionId) {\\r\\n        if (\\r\\n            s_bidInformations[auctionId][getIndexOfBidder(auctionId)].bidderState ==\\r\\n            BidderState.WITHDRAW ||\\r\\n            s_bidInformations[auctionId][getIndexOfBidder(auctionId)].bidderState ==\\r\\n            BidderState.CANCEL ||\\r\\n            s_bidInformations[auctionId][getIndexOfBidder(auctionId)].bidderState ==\\r\\n            BidderState.RETRACT ||\\r\\n            s_bidInformations[auctionId][getIndexOfFirstOfAuction(auctionId)].bidder == msg.sender\\r\\n        ) {\\r\\n            revert Auction__WithdrawDeposit();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function isValidatedInput(\\r\\n        string memory auctionId,\\r\\n        uint256 startRegistrationTime,\\r\\n        uint256 endRegistrationTime,\\r\\n        uint256 startAuctionTime,\\r\\n        uint256 endAuctionTime,\\r\\n        uint256 duePaymentTime,\\r\\n        uint256 registrationFee,\\r\\n        uint256 depositAmount,\\r\\n        uint256 startBid,\\r\\n        uint256 priceStep\\r\\n    )\\r\\n        internal\\r\\n        view\\r\\n        isVailidAuctionId(auctionId)\\r\\n        isValidRegistrationTime(startRegistrationTime, endRegistrationTime)\\r\\n        isValidStartAuctionTime(endRegistrationTime, startAuctionTime)\\r\\n        isValidAuctionTime(startAuctionTime, endAuctionTime)\\r\\n        isValidDuePaymentTime(endAuctionTime, duePaymentTime)\\r\\n        isValidRegistrationFee(registrationFee)\\r\\n        isValidDepositAmount(depositAmount)\\r\\n        isValidStartBid(startBid)\\r\\n        isValidPriceStep(priceStep)\\r\\n        returns (bool)\\r\\n    {\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function createAuction(\\r\\n        string memory auctionId,\\r\\n        uint256 startRegistrationTime,\\r\\n        uint256 endRegistrationTime,\\r\\n        uint256 startAuctionTime,\\r\\n        uint256 endAuctionTime,\\r\\n        uint256 duePaymentTime,\\r\\n        uint256 registrationFee,\\r\\n        uint256 depositAmount,\\r\\n        uint256 startBid,\\r\\n        uint256 priceStep\\r\\n    ) external {\\r\\n        if (\\r\\n            isValidatedInput(\\r\\n                auctionId,\\r\\n                startRegistrationTime,\\r\\n                endRegistrationTime,\\r\\n                startAuctionTime,\\r\\n                endAuctionTime,\\r\\n                duePaymentTime,\\r\\n                registrationFee,\\r\\n                depositAmount,\\r\\n                startBid,\\r\\n                priceStep\\r\\n            )\\r\\n        ) {\\r\\n            AuctionInformation memory auction;\\r\\n            auction.startRegistrationTime = startRegistrationTime;\\r\\n            auction.endRegistrationTime = endRegistrationTime;\\r\\n            auction.startAuctionTime = startAuctionTime;\\r\\n            auction.endAuctionTime = endAuctionTime;\\r\\n            auction.duePaymentTime = duePaymentTime;\\r\\n            auction.registrationFee = registrationFee;\\r\\n            auction.depositAmount = depositAmount;\\r\\n            auction.startBid = startBid;\\r\\n            auction.priceStep = priceStep;\\r\\n            s_auctionInformations[auctionId] = auction;\\r\\n            s_auctionList.push(auctionId);\\r\\n\\r\\n            emit CreatedAuction(\\r\\n                auctionId,\\r\\n                startRegistrationTime,\\r\\n                endRegistrationTime,\\r\\n                startAuctionTime,\\r\\n                endAuctionTime,\\r\\n                duePaymentTime,\\r\\n                registrationFee,\\r\\n                depositAmount,\\r\\n                startBid,\\r\\n                priceStep\\r\\n            );\\r\\n        }\\r\\n    }\\r\\n\\r\\n    modifier isStateBidding(string memory auctionId) {\\r\\n        if (\\r\\n            s_bidInformations[auctionId][getIndexOfBidder(auctionId)].bidderState !=\\r\\n            BidderState.BIDING\\r\\n        ) {\\r\\n            revert Auction__BidderRetractedBid();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function registerToBid(string memory auctionId)\\r\\n        external\\r\\n        payable\\r\\n        isExistAuctionId(auctionId)\\r\\n        isRegistrationTime(auctionId)\\r\\n        isAlreadyRegisteredBidder(auctionId)\\r\\n    {\\r\\n        uint256 requireAmountToRegister = s_auctionInformations[auctionId].registrationFee +\\r\\n            s_auctionInformations[auctionId].depositAmount;\\r\\n        if (msg.value != requireAmountToRegister) {\\r\\n            revert Auction__RequireAmountToRegisterNotMet(\\r\\n                auctionId,\\r\\n                msg.value,\\r\\n                requireAmountToRegister\\r\\n            );\\r\\n        }\\r\\n        BidInformation memory bidInformation;\\r\\n        bidInformation.bidder = msg.sender;\\r\\n        bidInformation.bidderState = BidderState.BIDING;\\r\\n        s_bidInformations[auctionId].push(bidInformation);\\r\\n        s_proceeds += s_auctionInformations[auctionId].registrationFee;\\r\\n        emit RegisteredToBid(auctionId, bidInformation.bidder, bidInformation.bidderState);\\r\\n    }\\r\\n\\r\\n    function placeBid(string memory auctionId, uint256 bidAmount)\\r\\n        external\\r\\n        payable\\r\\n        isExistAuctionId(auctionId)\\r\\n        isAuctionTime(auctionId)\\r\\n        isRegisteredBidder(auctionId)\\r\\n        isValidBidAmount(auctionId, bidAmount)\\r\\n        isStateBidding(auctionId)\\r\\n    {\\r\\n        s_bidInformations[auctionId][getIndexOfBidder(auctionId)].bidAmount = bidAmount;\\r\\n        emit PlacedBid(auctionId, msg.sender, bidAmount);\\r\\n    }\\r\\n\\r\\n    function retractBid(string memory auctionId)\\r\\n        external\\r\\n        payable\\r\\n        isExistAuctionId(auctionId)\\r\\n        isAuctionTime(auctionId)\\r\\n        isRegisteredBidder(auctionId)\\r\\n        isStateBidding(auctionId)\\r\\n    {\\r\\n        s_bidInformations[auctionId][getIndexOfBidder(auctionId)].bidderState = BidderState.RETRACT;\\r\\n        s_proceeds += s_auctionInformations[auctionId].depositAmount;\\r\\n        emit RetractedBid(auctionId, msg.sender);\\r\\n    }\\r\\n\\r\\n    function cancelAuctionResult(string memory auctionId)\\r\\n        external\\r\\n        payable\\r\\n        isWinnerOfAuction(auctionId)\\r\\n        isConfirmationTime(auctionId)\\r\\n    {\\r\\n        if (\\r\\n            s_bidInformations[auctionId][getIndexOfBidder(auctionId)].bidAmount ==\\r\\n            s_bidInformations[auctionId][getIndexOfFirstOfAuction(auctionId)].bidAmount ||\\r\\n            s_bidInformations[auctionId][getIndexOfBidder(auctionId)].bidAmount ==\\r\\n            s_bidInformations[auctionId][getIndexOfSecondOfAuction(auctionId)].bidAmount\\r\\n        ) {\\r\\n            s_bidInformations[auctionId][getIndexOfBidder(auctionId)].bidderState = BidderState\\r\\n                .CANCEL;\\r\\n            s_proceeds += s_auctionInformations[auctionId].depositAmount;\\r\\n        }\\r\\n        emit CanceledAuctionResult(\\r\\n            auctionId,\\r\\n            msg.sender,\\r\\n            s_bidInformations[auctionId][getIndexOfBidder(auctionId)].bidderState\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function withdraw() external onlyOwner {\\r\\n        (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\r\\n        require(success, \\\"Transfer failed\\\");\\r\\n    }\\r\\n\\r\\n    function withdrawProceeds() external onlyOwner {\\r\\n        if (s_proceeds <= 0) {\\r\\n            revert Auction__NoProceeds();\\r\\n        }\\r\\n        (bool success, ) = i_owner.call{value: s_proceeds}(\\\"\\\");\\r\\n        require(success, \\\"Transfer failed\\\");\\r\\n    }\\r\\n\\r\\n    function withdrawDeposit(string memory auctionId) external isWithdrawDeposit(auctionId) {\\r\\n        uint256 value = s_auctionInformations[auctionId].depositAmount;\\r\\n        s_bidInformations[auctionId][getIndexOfBidder(auctionId)].bidderState = BidderState\\r\\n            .WITHDRAW;\\r\\n        (bool success, ) = payable(msg.sender).call{value: value}(\\\"\\\");\\r\\n        require(success, \\\"Transfer failed\\\");\\r\\n        emit Withdraw(auctionId, msg.sender);\\r\\n    }\\r\\n\\r\\n    function payment(string memory auctionId)\\r\\n        external\\r\\n        payable\\r\\n        isWinnerOfAuction(auctionId)\\r\\n        isValidPaymentAmount(auctionId)\\r\\n    {\\r\\n        s_bidInformations[auctionId][getIndexOfBidder(auctionId)].bidderState = BidderState.PAYMENT;\\r\\n        s_proceeds += s_auctionInformations[auctionId].depositAmount;\\r\\n        s_proceeds += msg.value;\\r\\n        emit ClosedAuctionSuccessful(auctionId, msg.sender, msg.value);\\r\\n    }\\r\\n\\r\\n    function getHighestBidOfAuction(string memory auctionId) public view returns (uint256) {\\r\\n        uint256 highestBid = 0;\\r\\n        for (uint256 i = 0; i < s_bidInformations[auctionId].length; i++) {\\r\\n            if (\\r\\n                s_bidInformations[auctionId][i].bidAmount > highestBid &&\\r\\n                s_bidInformations[auctionId][i].bidderState != BidderState.RETRACT &&\\r\\n                s_bidInformations[auctionId][i].bidderState != BidderState.CANCEL\\r\\n            ) {\\r\\n                highestBid = s_bidInformations[auctionId][i].bidAmount;\\r\\n            }\\r\\n        }\\r\\n        return highestBid;\\r\\n    }\\r\\n\\r\\n    //get index of bidder who is sender\\r\\n    function getIndexOfBidder(string memory auctionId) internal view returns (uint256) {\\r\\n        for (uint256 i = 0; i < s_bidInformations[auctionId].length; i++) {\\r\\n            if (s_bidInformations[auctionId][i].bidder == msg.sender) {\\r\\n                return i;\\r\\n            }\\r\\n        }\\r\\n        return 0;\\r\\n    }\\r\\n\\r\\n    function getIndexOfSecondOfAuction(string memory auctionId) private returns (uint256) {\\r\\n        BidInformation[] storage tempBidInformation = s_bidInformations[auctionId];\\r\\n        uint256 index = getHighestBidOfAuction(auctionId);\\r\\n        require(index < tempBidInformation.length);\\r\\n        tempBidInformation[index] = tempBidInformation[tempBidInformation.length - 1];\\r\\n        tempBidInformation.pop();\\r\\n        uint256 highestIndex;\\r\\n        for (uint256 i = 0; i < tempBidInformation.length; i++) {\\r\\n            if (\\r\\n                highestIndex < tempBidInformation[i].bidAmount &&\\r\\n                tempBidInformation[i].bidderState == BidderState.BIDING\\r\\n            ) {\\r\\n                highestIndex = i;\\r\\n            }\\r\\n        }\\r\\n        return highestIndex;\\r\\n    }\\r\\n\\r\\n    function getIndexOfFirstOfAuction(string memory auctionId) private view returns (uint256) {\\r\\n        uint256 highestIndex;\\r\\n        for (uint256 i = 0; i < s_bidInformations[auctionId].length; i++) {\\r\\n            if (\\r\\n                highestIndex < s_bidInformations[auctionId][i].bidAmount &&\\r\\n                s_bidInformations[auctionId][i].bidderState != BidderState.CANCEL &&\\r\\n                s_bidInformations[auctionId][i].bidderState != BidderState.RETRACT\\r\\n            ) {\\r\\n                highestIndex = i;\\r\\n            }\\r\\n        }\\r\\n        return highestIndex;\\r\\n    }\\r\\n\\r\\n    function getListAuctionId() external view returns (string[] memory) {\\r\\n        return s_auctionList;\\r\\n    }\\r\\n\\r\\n    function getAuctionInformationById(string memory auctionId)\\r\\n        external\\r\\n        view\\r\\n        isExistAuctionId(auctionId)\\r\\n        returns (AuctionInformation memory)\\r\\n    {\\r\\n        return s_auctionInformations[auctionId];\\r\\n    }\\r\\n\\r\\n    function getBidInformationByAuctionId(string memory auctionId)\\r\\n        external\\r\\n        view\\r\\n        isExistAuctionId(auctionId)\\r\\n        returns (BidInformation[] memory)\\r\\n    {\\r\\n        return s_bidInformations[auctionId];\\r\\n    }\\r\\n\\r\\n    function getBalance() external view returns (uint256) {\\r\\n        return address(this).balance;\\r\\n    }\\r\\n\\r\\n    function getOwner() public view returns (address) {\\r\\n        return i_owner;\\r\\n    }\\r\\n\\r\\n    function getProceeds() public view returns (uint256) {\\r\\n        return s_proceeds;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x27e349c395f3c02536a483802b68094c99c9bd47d0457c9bad46b439d72b8b6d\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "devdoc": {
    "author": "Decentralized Auction Platform Team",
    "details": "This implements the auctioneer job",
    "kind": "dev",
    "methods": {},
    "title": "Decentralized Auction Platform",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "This contract is for Decentralized Auction Platform",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 67,
        "contract": "contracts/Auction.sol:Auction",
        "label": "s_auctionList",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_string_storage)dyn_storage"
      },
      {
        "astId": 69,
        "contract": "contracts/Auction.sol:Auction",
        "label": "s_proceeds",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 199,
        "contract": "contracts/Auction.sol:Auction",
        "label": "s_auctionInformations",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_string_memory_ptr,t_struct(AuctionInformation)99_storage)"
      },
      {
        "astId": 205,
        "contract": "contracts/Auction.sol:Auction",
        "label": "s_bidInformations",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_string_memory_ptr,t_array(t_struct(BidInformation)116_storage)dyn_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_string_storage)dyn_storage": {
        "base": "t_string_storage",
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(BidInformation)116_storage)dyn_storage": {
        "base": "t_struct(BidInformation)116_storage",
        "encoding": "dynamic_array",
        "label": "struct Auction.BidInformation[]",
        "numberOfBytes": "32"
      },
      "t_enum(BidderState)80": {
        "encoding": "inplace",
        "label": "enum Auction.BidderState",
        "numberOfBytes": "1"
      },
      "t_mapping(t_string_memory_ptr,t_array(t_struct(BidInformation)116_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct Auction.BidInformation[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(BidInformation)116_storage)dyn_storage"
      },
      "t_mapping(t_string_memory_ptr,t_struct(AuctionInformation)99_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct Auction.AuctionInformation)",
        "numberOfBytes": "32",
        "value": "t_struct(AuctionInformation)99_storage"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(AuctionInformation)99_storage": {
        "encoding": "inplace",
        "label": "struct Auction.AuctionInformation",
        "members": [
          {
            "astId": 82,
            "contract": "contracts/Auction.sol:Auction",
            "label": "startRegistrationTime",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 84,
            "contract": "contracts/Auction.sol:Auction",
            "label": "endRegistrationTime",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 86,
            "contract": "contracts/Auction.sol:Auction",
            "label": "startAuctionTime",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 88,
            "contract": "contracts/Auction.sol:Auction",
            "label": "endAuctionTime",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 90,
            "contract": "contracts/Auction.sol:Auction",
            "label": "duePaymentTime",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 92,
            "contract": "contracts/Auction.sol:Auction",
            "label": "registrationFee",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 94,
            "contract": "contracts/Auction.sol:Auction",
            "label": "depositAmount",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 96,
            "contract": "contracts/Auction.sol:Auction",
            "label": "startBid",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          },
          {
            "astId": 98,
            "contract": "contracts/Auction.sol:Auction",
            "label": "priceStep",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "288"
      },
      "t_struct(BidInformation)116_storage": {
        "encoding": "inplace",
        "label": "struct Auction.BidInformation",
        "members": [
          {
            "astId": 110,
            "contract": "contracts/Auction.sol:Auction",
            "label": "bidder",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 112,
            "contract": "contracts/Auction.sol:Auction",
            "label": "bidAmount",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 115,
            "contract": "contracts/Auction.sol:Auction",
            "label": "bidderState",
            "offset": 0,
            "slot": "2",
            "type": "t_enum(BidderState)80"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}