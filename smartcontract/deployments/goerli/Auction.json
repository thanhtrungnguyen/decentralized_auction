{
  "address": "0x14dB4Ba4EF0aAb2940B3791F36B8aBdAe99E5263",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Auction__AlreadyRegisteredBidder",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__BidderRetractedBid",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__InvalidAuctionId",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__InvalidAuctionTime",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__InvalidBidAmount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__InvalidDepositAmount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__InvalidDuePaymentTime",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__InvalidPriceStep",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__InvalidRegistrationFee",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__InvalidRegistrationTime",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__InvalidStartAuctionTime",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__InvalidStartBid",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__NoProceeds",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__NotExistAuctionId",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__NotRegisteredBidder",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__OutOfAuctionTime",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__OutOfRegistrationTime",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "requireAmountToRegister",
          "type": "uint256"
        }
      ],
      "name": "Auction__RequireAmountToRegisterNotMet",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "bidder",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "enum Auction.BidderState",
          "name": "bidderState",
          "type": "uint8"
        }
      ],
      "name": "CanceledAuctionResult",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        }
      ],
      "name": "ClosedAuction",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "bidder",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "paidAmount",
          "type": "uint256"
        }
      ],
      "name": "ClosedAuctionSuccessful",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startRegistrationTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endRegistrationTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startAuctionTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endAuctionTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "duePaymentTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "registrationFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "depositAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startBid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "priceStep",
          "type": "uint256"
        }
      ],
      "name": "CreatedAuction",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "bidder",
          "type": "address"
        }
      ],
      "name": "Paidback",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "bidder",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "bidAmount",
          "type": "uint256"
        }
      ],
      "name": "PlacedBid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "bidder",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "enum Auction.BidderState",
          "name": "bidderState",
          "type": "uint8"
        }
      ],
      "name": "RegisteredToBid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "bidder",
          "type": "address"
        }
      ],
      "name": "RetractedBid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "bidder",
          "type": "address"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        }
      ],
      "name": "cancelAuctionResult",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "startRegistrationTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endRegistrationTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startAuctionTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endAuctionTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "duePaymentTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "registrationFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "depositAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startBid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "priceStep",
          "type": "uint256"
        }
      ],
      "name": "createAuction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        }
      ],
      "name": "getAuctionInformationById",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "startRegistrationTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endRegistrationTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "startAuctionTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endAuctionTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duePaymentTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "registrationFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "depositAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "startBid",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "priceStep",
              "type": "uint256"
            }
          ],
          "internalType": "struct Auction.AuctionInformation",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        }
      ],
      "name": "getBidInformationByAuctionId",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "bidder",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "bidAmount",
              "type": "uint256"
            },
            {
              "internalType": "enum Auction.BidderState",
              "name": "bidderState",
              "type": "uint8"
            }
          ],
          "internalType": "struct Auction.BidInformation[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        }
      ],
      "name": "getHighestBidOfAuction",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getListAuctionId",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getProceeds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        }
      ],
      "name": "payment",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "bidAmount",
          "type": "uint256"
        }
      ],
      "name": "placeBid",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        }
      ],
      "name": "registerToBid",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        }
      ],
      "name": "retractBid",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "auctionId",
          "type": "string"
        }
      ],
      "name": "withdrawDeposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawProceeds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xf766f882b41e397659171b0df92f74195f928aa930492d28fb9418df9cd80a39",
  "receipt": {
    "to": null,
    "from": "0xa3EAe56afb3C7Ad3A45ef2B6aCd3e6e8267AB8b4",
    "contractAddress": "0x14dB4Ba4EF0aAb2940B3791F36B8aBdAe99E5263",
    "transactionIndex": 2,
    "gasUsed": "2911469",
    "logsBloom": "0x
    "blockHash": "0x21e08af928b480539b4fec4976025a4df19e0c6642910fb9c5cbdb2377f0fa7b",
    "transactionHash": "0xf766f882b41e397659171b0df92f74195f928aa930492d28fb9418df9cd80a39",
    "logs": [],
    "blockNumber": 8420596,
    "cumulativeGasUsed": "2953485",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 6,
  "solcInputHash": "41267d96ce7123b432f4f992100f9036",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Auction__AlreadyRegisteredBidder\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__BidderRetractedBid\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__InvalidAuctionId\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__InvalidAuctionTime\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__InvalidBidAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__InvalidDepositAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__InvalidDuePaymentTime\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__InvalidPriceStep\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__InvalidRegistrationFee\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__InvalidRegistrationTime\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__InvalidStartAuctionTime\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__InvalidStartBid\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__NoProceeds\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__NotExistAuctionId\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__NotRegisteredBidder\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__OutOfAuctionTime\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__OutOfRegistrationTime\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requireAmountToRegister\",\"type\":\"uint256\"}],\"name\":\"Auction__RequireAmountToRegisterNotMet\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum Auction.BidderState\",\"name\":\"bidderState\",\"type\":\"uint8\"}],\"name\":\"CanceledAuctionResult\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"}],\"name\":\"ClosedAuction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paidAmount\",\"type\":\"uint256\"}],\"name\":\"ClosedAuctionSuccessful\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startRegistrationTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endRegistrationTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startAuctionTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endAuctionTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"duePaymentTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"registrationFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"depositAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startBid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"priceStep\",\"type\":\"uint256\"}],\"name\":\"CreatedAuction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"}],\"name\":\"Paidback\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bidAmount\",\"type\":\"uint256\"}],\"name\":\"PlacedBid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum Auction.BidderState\",\"name\":\"bidderState\",\"type\":\"uint8\"}],\"name\":\"RegisteredToBid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"}],\"name\":\"RetractedBid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"}],\"name\":\"cancelAuctionResult\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"startRegistrationTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endRegistrationTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startAuctionTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endAuctionTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duePaymentTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"registrationFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"depositAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startBid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priceStep\",\"type\":\"uint256\"}],\"name\":\"createAuction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"}],\"name\":\"getAuctionInformationById\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startRegistrationTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endRegistrationTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startAuctionTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endAuctionTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duePaymentTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"registrationFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"depositAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startBid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priceStep\",\"type\":\"uint256\"}],\"internalType\":\"struct Auction.AuctionInformation\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"}],\"name\":\"getBidInformationByAuctionId\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"bidAmount\",\"type\":\"uint256\"},{\"internalType\":\"enum Auction.BidderState\",\"name\":\"bidderState\",\"type\":\"uint8\"}],\"internalType\":\"struct Auction.BidInformation[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"}],\"name\":\"getHighestBidOfAuction\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getListAuctionId\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProceeds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"}],\"name\":\"payment\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"bidAmount\",\"type\":\"uint256\"}],\"name\":\"placeBid\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"}],\"name\":\"registerToBid\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"}],\"name\":\"retractBid\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"auctionId\",\"type\":\"string\"}],\"name\":\"withdrawDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawProceeds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Decentralized Auction Platform Team\",\"details\":\"This implements the auctioneer job\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Decentralized Auction Platform\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This contract is for Decentralized Auction Platform\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Auction.sol\":\"Auction\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Auction.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.17;\\r\\n\\r\\nerror Auction__InvalidRegistrationTime();\\r\\nerror Auction__InvalidAuctionTime();\\r\\nerror Auction__InvalidDuePaymentTime();\\r\\nerror Auction__InvalidStartAuctionTime();\\r\\nerror Auction__InvalidRegistrationFee();\\r\\nerror Auction__InvalidDepositAmount();\\r\\nerror Auction__InvalidStartBid();\\r\\nerror Auction__InvalidPriceStep();\\r\\nerror Auction__InvalidDatetime();\\r\\nerror Auction__InvalidAuctionId();\\r\\nerror Auction__OutOfRegistrationTime();\\r\\nerror Auction__RequireAmountToRegisterNotMet(\\r\\n    string auctionId,\\r\\n    uint256 value,\\r\\n    uint256 requireAmountToRegister\\r\\n);\\r\\nerror Auction__OutOfAuctionTime();\\r\\nerror Auction__InvalidBidAmount();\\r\\nerror Auction__NotRegisteredBidder();\\r\\nerror Auction__NotExistAuctionId();\\r\\nerror Auction__ConfirmationTimeout();\\r\\nerror Auction__NotWinnerOfAuction();\\r\\nerror Auction__TransferFailed();\\r\\nerror Auction__RequireAmountToPaymentNotMet(string auctionId, uint256 requirePaymentAmount);\\r\\nerror Auction__NotExistAuction();\\r\\nerror Auction__NotOwner();\\r\\nerror Auction__AlreadyRegisteredBidder();\\r\\nerror Auction__NoProceeds();\\r\\nerror Auction__WithdrawDeposit();\\r\\nerror Auction__BidderRetractedBid();\\r\\n\\r\\n/**@title Decentralized Auction Platform\\r\\n * @author Decentralized Auction Platform Team\\r\\n * @notice This contract is for Decentralized Auction Platform\\r\\n * @dev This implements the auctioneer job\\r\\n */\\r\\ncontract Auction {\\r\\n    string[] private s_auctionList;\\r\\n    uint256 private s_proceeds;\\r\\n    address private immutable i_owner;\\r\\n    uint16 private constant CONFIRMATION_TIME = 300;\\r\\n    enum BidderState {\\r\\n        BIDING, // registered or bidding\\r\\n        RETRACT, // retract bid\\r\\n        CANCEL, // cancel auction result\\r\\n        WITHDRAW, // withdaw deposit\\r\\n        PAYMENT // payment complete\\r\\n    }\\r\\n\\r\\n    struct AuctionInformation {\\r\\n        uint256 startRegistrationTime;\\r\\n        uint256 endRegistrationTime;\\r\\n        uint256 startAuctionTime;\\r\\n        uint256 endAuctionTime;\\r\\n        uint256 duePaymentTime;\\r\\n        uint256 registrationFee;\\r\\n        uint256 depositAmount;\\r\\n        uint256 startBid;\\r\\n        uint256 priceStep;\\r\\n    }\\r\\n\\r\\n    constructor() {\\r\\n        i_owner = msg.sender;\\r\\n    }\\r\\n\\r\\n    struct BidInformation {\\r\\n        address bidder;\\r\\n        uint256 bidAmount;\\r\\n        BidderState bidderState;\\r\\n    }\\r\\n\\r\\n    event CreatedAuction(\\r\\n        string auctionId,\\r\\n        uint256 startRegistrationTime,\\r\\n        uint256 endRegistrationTime,\\r\\n        uint256 startAuctionTime,\\r\\n        uint256 endAuctionTime,\\r\\n        uint256 duePaymentTime,\\r\\n        uint256 registrationFee,\\r\\n        uint256 depositAmount,\\r\\n        uint256 startBid,\\r\\n        uint256 priceStep\\r\\n    );\\r\\n    event PlacedBid(string auctionId, address bidder, uint256 bidAmount);\\r\\n    event RetractedBid(string auctionId, address bidder);\\r\\n    event RegisteredToBid(string auctionId, address bidder, BidderState bidderState);\\r\\n    event ClosedAuction(string auctionId);\\r\\n    event CanceledAuctionResult(string auctionId, address bidder, BidderState bidderState);\\r\\n    event Paidback(string auctionId, address bidder);\\r\\n    event ClosedAuctionSuccessful(string auctionId, address bidder, uint256 paidAmount);\\r\\n    event Withdraw(string auctionId, address bidder);\\r\\n\\r\\n    mapping(string => AuctionInformation) private s_auctionInformations;\\r\\n    mapping(string => BidInformation[]) private s_bidInformations;\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        if (msg.sender != i_owner) revert Auction__NotOwner();\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isVailidAuctionId(string memory auctionId) {\\r\\n        for (uint256 i = 0; i < s_auctionList.length; i++) {\\r\\n            if (\\r\\n                keccak256(abi.encodePacked(auctionId)) ==\\r\\n                keccak256(abi.encodePacked(s_auctionList[i]))\\r\\n            ) {\\r\\n                revert Auction__InvalidAuctionId();\\r\\n            }\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isExistAuctionId(string memory auctionId) {\\r\\n        uint256 count = 0;\\r\\n        for (uint256 i = 0; i < s_auctionList.length; i++) {\\r\\n            if (\\r\\n                keccak256(abi.encodePacked(auctionId)) !=\\r\\n                keccak256(abi.encodePacked(s_auctionList[i]))\\r\\n            ) {\\r\\n                count++;\\r\\n            }\\r\\n        }\\r\\n        if (count == s_auctionList.length) {\\r\\n            revert Auction__NotExistAuctionId();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isValidRegistrationTime(uint256 startRegistrationTime, uint256 endRegistrationTime) {\\r\\n        if (\\r\\n            startRegistrationTime < block.timestamp || startRegistrationTime >= endRegistrationTime\\r\\n        ) {\\r\\n            revert Auction__InvalidRegistrationTime();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isValidStartAuctionTime(uint256 endRegistrationTime, uint256 startAuctionTime) {\\r\\n        if (endRegistrationTime >= startAuctionTime) {\\r\\n            revert Auction__InvalidStartAuctionTime();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isValidAuctionTime(uint256 startAuctionTime, uint256 endAuctionTime) {\\r\\n        if (startAuctionTime >= endAuctionTime) {\\r\\n            revert Auction__InvalidAuctionTime();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isValidDuePaymentTime(uint256 endAuctionTime, uint256 duePaymentTime) {\\r\\n        if (endAuctionTime >= duePaymentTime) {\\r\\n            revert Auction__InvalidDuePaymentTime();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isValidRegistrationFee(uint256 registrationFee) {\\r\\n        if (registrationFee <= 0) {\\r\\n            revert Auction__InvalidRegistrationFee();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isValidDepositAmount(uint256 depositAmount) {\\r\\n        if (depositAmount <= 0) {\\r\\n            revert Auction__InvalidDepositAmount();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isValidStartBid(uint256 depositAmount) {\\r\\n        if (depositAmount <= 0) {\\r\\n            revert Auction__InvalidStartBid();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isValidPriceStep(uint256 depositAmount) {\\r\\n        if (depositAmount <= 0) {\\r\\n            revert Auction__InvalidPriceStep();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isRegistrationTime(string memory auctionId) {\\r\\n        if (\\r\\n            s_auctionInformations[auctionId].startRegistrationTime > block.timestamp ||\\r\\n            s_auctionInformations[auctionId].endRegistrationTime < block.timestamp\\r\\n        ) {\\r\\n            revert Auction__OutOfRegistrationTime();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isAuctionTime(string memory auctionId) {\\r\\n        if (\\r\\n            s_auctionInformations[auctionId].startAuctionTime > block.timestamp ||\\r\\n            s_auctionInformations[auctionId].endAuctionTime < block.timestamp\\r\\n        ) {\\r\\n            revert Auction__OutOfAuctionTime();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isValidBidAmount(string memory auctionId, uint256 bidAmount) {\\r\\n        if (\\r\\n            bidAmount < s_auctionInformations[auctionId].startBid ||\\r\\n            bidAmount <\\r\\n            getHighestBidOfAuction(auctionId) + s_auctionInformations[auctionId].priceStep\\r\\n        ) {\\r\\n            revert Auction__InvalidBidAmount();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isRegisteredBidder(string memory auctionId) {\\r\\n        uint256 count = 0;\\r\\n        for (uint256 i = 0; i < s_bidInformations[auctionId].length; i++) {\\r\\n            if (\\r\\n                s_bidInformations[auctionId][i].bidder != msg.sender &&\\r\\n                s_bidInformations[auctionId][i].bidderState == BidderState.BIDING\\r\\n            ) {\\r\\n                count++;\\r\\n            }\\r\\n        }\\r\\n        if (count == s_bidInformations[auctionId].length) {\\r\\n            revert Auction__NotRegisteredBidder();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n    modifier isAlreadyRegisteredBidder(string memory auctionId) {\\r\\n        for (uint256 i = 0; i < s_bidInformations[auctionId].length; i++) {\\r\\n            if (s_bidInformations[auctionId][i].bidder == msg.sender) {\\r\\n                revert Auction__AlreadyRegisteredBidder();\\r\\n            }\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n    modifier isConfirmationTime(string memory auctionId) {\\r\\n        if (\\r\\n            msg.sender == s_bidInformations[auctionId][getIndexOfBidder(auctionId)].bidder &&\\r\\n            s_bidInformations[auctionId][getIndexOfBidder(auctionId)].bidAmount ==\\r\\n            s_bidInformations[auctionId][getIndexOfFirstOfAuction(auctionId)].bidAmount\\r\\n        ) {\\r\\n            uint256 dueConfirmationTime = s_auctionInformations[auctionId].endAuctionTime +\\r\\n                CONFIRMATION_TIME;\\r\\n            if (dueConfirmationTime < block.timestamp) {\\r\\n                revert Auction__ConfirmationTimeout();\\r\\n            }\\r\\n        }\\r\\n        _;\\r\\n        if (\\r\\n            msg.sender == s_bidInformations[auctionId][getIndexOfBidder(auctionId)].bidder &&\\r\\n            s_bidInformations[auctionId][getIndexOfBidder(auctionId)].bidAmount ==\\r\\n            s_bidInformations[auctionId][getIndexOfSecondOfAuction(auctionId)].bidAmount\\r\\n        ) {\\r\\n            uint256 dueConfirmationTime = s_auctionInformations[auctionId].endAuctionTime +\\r\\n                CONFIRMATION_TIME *\\r\\n                2;\\r\\n            if (dueConfirmationTime < block.timestamp) {\\r\\n                revert Auction__ConfirmationTimeout();\\r\\n            }\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isWinnerOfAuction(string memory auctionId) {\\r\\n        uint256 index = getIndexOfBidder(auctionId);\\r\\n        if (index == 9999) {\\r\\n            revert Auction__NotRegisteredBidder();\\r\\n        }\\r\\n        _;\\r\\n        if (\\r\\n            s_bidInformations[auctionId][index].bidderState != BidderState.BIDING ||\\r\\n            s_bidInformations[auctionId][index].bidAmount != getHighestBidOfAuction(auctionId)\\r\\n        ) {\\r\\n            revert Auction__NotWinnerOfAuction();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n    modifier isValidPaymentAmount(string memory auctionId) {\\r\\n        uint256 requirePaymentAmount = s_bidInformations[auctionId][getIndexOfBidder(auctionId)]\\r\\n            .bidAmount - s_auctionInformations[auctionId].depositAmount;\\r\\n        if (msg.value < requirePaymentAmount) {\\r\\n            revert Auction__RequireAmountToPaymentNotMet(auctionId, requirePaymentAmount);\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isWithdrawDeposit(string memory auctionId) {\\r\\n        if (\\r\\n            s_bidInformations[auctionId][getIndexOfBidder(auctionId)].bidderState ==\\r\\n            BidderState.WITHDRAW ||\\r\\n            s_bidInformations[auctionId][getIndexOfBidder(auctionId)].bidderState ==\\r\\n            BidderState.CANCEL ||\\r\\n            s_bidInformations[auctionId][getIndexOfBidder(auctionId)].bidderState ==\\r\\n            BidderState.RETRACT ||\\r\\n            s_bidInformations[auctionId][getIndexOfFirstOfAuction(auctionId)].bidder == msg.sender\\r\\n        ) {\\r\\n            revert Auction__WithdrawDeposit();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function isValidatedInput(\\r\\n        string memory auctionId,\\r\\n        uint256 startRegistrationTime,\\r\\n        uint256 endRegistrationTime,\\r\\n        uint256 startAuctionTime,\\r\\n        uint256 endAuctionTime,\\r\\n        uint256 duePaymentTime,\\r\\n        uint256 registrationFee,\\r\\n        uint256 depositAmount,\\r\\n        uint256 startBid,\\r\\n        uint256 priceStep\\r\\n    )\\r\\n        internal\\r\\n        view\\r\\n        isVailidAuctionId(auctionId)\\r\\n        isValidRegistrationTime(startRegistrationTime, endRegistrationTime)\\r\\n        isValidStartAuctionTime(endRegistrationTime, startAuctionTime)\\r\\n        isValidAuctionTime(startAuctionTime, endAuctionTime)\\r\\n        isValidDuePaymentTime(endAuctionTime, duePaymentTime)\\r\\n        isValidRegistrationFee(registrationFee)\\r\\n        isValidDepositAmount(depositAmount)\\r\\n        isValidStartBid(startBid)\\r\\n        isValidPriceStep(priceStep)\\r\\n        returns (bool)\\r\\n    {\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function createAuction(\\r\\n        string memory auctionId,\\r\\n        uint256 startRegistrationTime,\\r\\n        uint256 endRegistrationTime,\\r\\n        uint256 startAuctionTime,\\r\\n        uint256 endAuctionTime,\\r\\n        uint256 duePaymentTime,\\r\\n        uint256 registrationFee,\\r\\n        uint256 depositAmount,\\r\\n        uint256 startBid,\\r\\n        uint256 priceStep\\r\\n    ) external {\\r\\n        if (\\r\\n            isValidatedInput(\\r\\n                auctionId,\\r\\n                startRegistrationTime,\\r\\n                endRegistrationTime,\\r\\n                startAuctionTime,\\r\\n                endAuctionTime,\\r\\n                duePaymentTime,\\r\\n                registrationFee,\\r\\n                depositAmount,\\r\\n                startBid,\\r\\n                priceStep\\r\\n            )\\r\\n        ) {\\r\\n            AuctionInformation memory auction;\\r\\n            auction.startRegistrationTime = startRegistrationTime;\\r\\n            auction.endRegistrationTime = endRegistrationTime;\\r\\n            auction.startAuctionTime = startAuctionTime;\\r\\n            auction.endAuctionTime = endAuctionTime;\\r\\n            auction.duePaymentTime = duePaymentTime;\\r\\n            auction.registrationFee = registrationFee;\\r\\n            auction.depositAmount = depositAmount;\\r\\n            auction.startBid = startBid;\\r\\n            auction.priceStep = priceStep;\\r\\n            s_auctionInformations[auctionId] = auction;\\r\\n            s_auctionList.push(auctionId);\\r\\n\\r\\n            emit CreatedAuction(\\r\\n                auctionId,\\r\\n                startRegistrationTime,\\r\\n                endRegistrationTime,\\r\\n                startAuctionTime,\\r\\n                endAuctionTime,\\r\\n                duePaymentTime,\\r\\n                registrationFee,\\r\\n                depositAmount,\\r\\n                startBid,\\r\\n                priceStep\\r\\n            );\\r\\n        }\\r\\n    }\\r\\n\\r\\n    modifier isStateBidding(string memory auctionId) {\\r\\n        if (\\r\\n            s_bidInformations[auctionId][getIndexOfBidder(auctionId)].bidderState !=\\r\\n            BidderState.BIDING\\r\\n        ) {\\r\\n            revert Auction__BidderRetractedBid();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function registerToBid(string memory auctionId)\\r\\n        external\\r\\n        payable\\r\\n        isExistAuctionId(auctionId)\\r\\n        isRegistrationTime(auctionId)\\r\\n        isAlreadyRegisteredBidder(auctionId)\\r\\n    {\\r\\n        uint256 requireAmountToRegister = s_auctionInformations[auctionId].registrationFee +\\r\\n            s_auctionInformations[auctionId].depositAmount;\\r\\n        if (msg.value != requireAmountToRegister) {\\r\\n            revert Auction__RequireAmountToRegisterNotMet(\\r\\n                auctionId,\\r\\n                msg.value,\\r\\n                requireAmountToRegister\\r\\n            );\\r\\n        }\\r\\n        BidInformation memory bidInformation;\\r\\n        bidInformation.bidder = msg.sender;\\r\\n        bidInformation.bidderState = BidderState.BIDING;\\r\\n        s_bidInformations[auctionId].push(bidInformation);\\r\\n        s_proceeds += s_auctionInformations[auctionId].registrationFee;\\r\\n        emit RegisteredToBid(auctionId, bidInformation.bidder, bidInformation.bidderState);\\r\\n    }\\r\\n\\r\\n    function placeBid(string memory auctionId, uint256 bidAmount)\\r\\n        external\\r\\n        payable\\r\\n        isExistAuctionId(auctionId)\\r\\n        isAuctionTime(auctionId)\\r\\n        isRegisteredBidder(auctionId)\\r\\n        isValidBidAmount(auctionId, bidAmount)\\r\\n        isStateBidding(auctionId)\\r\\n    {\\r\\n        s_bidInformations[auctionId][getIndexOfBidder(auctionId)].bidAmount = bidAmount;\\r\\n        emit PlacedBid(auctionId, msg.sender, bidAmount);\\r\\n    }\\r\\n\\r\\n    function retractBid(string memory auctionId)\\r\\n        external\\r\\n        payable\\r\\n        isExistAuctionId(auctionId)\\r\\n        isAuctionTime(auctionId)\\r\\n        isRegisteredBidder(auctionId)\\r\\n        isStateBidding(auctionId)\\r\\n    {\\r\\n        s_bidInformations[auctionId][getIndexOfBidder(auctionId)].bidderState = BidderState.RETRACT;\\r\\n        s_proceeds += s_auctionInformations[auctionId].depositAmount;\\r\\n        emit RetractedBid(auctionId, msg.sender);\\r\\n    }\\r\\n\\r\\n    function cancelAuctionResult(string memory auctionId)\\r\\n        external\\r\\n        payable\\r\\n    // isWinnerOfAuction(auctionId)\\r\\n    // isRegisteredBidder(auctionId)\\r\\n    // isConfirmationTime(auctionId)\\r\\n    {\\r\\n        // if (\\r\\n        //     s_bidInformations[auctionId][getIndexOfBidder(auctionId)].bidAmount ==\\r\\n        //     s_bidInformations[auctionId][getIndexOfFirstOfAuction(auctionId)].bidAmount ||\\r\\n        //     s_bidInformations[auctionId][getIndexOfBidder(auctionId)].bidAmount ==\\r\\n        //     s_bidInformations[auctionId][getIndexOfSecondOfAuction(auctionId)].bidAmount\\r\\n        // ) {\\r\\n        s_bidInformations[auctionId][getIndexOfBidder(auctionId)].bidderState = BidderState.CANCEL;\\r\\n        s_proceeds += s_auctionInformations[auctionId].depositAmount;\\r\\n        // }\\r\\n        emit CanceledAuctionResult(\\r\\n            auctionId,\\r\\n            msg.sender,\\r\\n            s_bidInformations[auctionId][getIndexOfBidder(auctionId)].bidderState\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function withdraw() external onlyOwner {\\r\\n        (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\r\\n        require(success, \\\"Transfer failed\\\");\\r\\n    }\\r\\n\\r\\n    function withdrawProceeds() external onlyOwner {\\r\\n        if (s_proceeds <= 0) {\\r\\n            revert Auction__NoProceeds();\\r\\n        }\\r\\n        (bool success, ) = i_owner.call{value: s_proceeds}(\\\"\\\");\\r\\n        require(success, \\\"Transfer failed\\\");\\r\\n    }\\r\\n\\r\\n    function withdrawDeposit(string memory auctionId) external // isWithdrawDeposit(auctionId)\\r\\n    {\\r\\n        uint256 value = s_auctionInformations[auctionId].depositAmount;\\r\\n        s_bidInformations[auctionId][getIndexOfBidder(auctionId)].bidderState = BidderState\\r\\n            .WITHDRAW;\\r\\n        (bool success, ) = payable(msg.sender).call{value: value}(\\\"\\\");\\r\\n        require(success, \\\"Transfer failed\\\");\\r\\n        emit Withdraw(auctionId, msg.sender);\\r\\n    }\\r\\n\\r\\n    function payment(\\r\\n        string memory auctionId // isWinnerOfAuction(auctionId) // isValidPaymentAmount(auctionId)\\r\\n    ) external payable {\\r\\n        s_bidInformations[auctionId][getIndexOfBidder(auctionId)].bidderState = BidderState.PAYMENT;\\r\\n        s_proceeds += s_auctionInformations[auctionId].depositAmount;\\r\\n        s_proceeds += msg.value;\\r\\n        emit ClosedAuctionSuccessful(auctionId, msg.sender, msg.value);\\r\\n    }\\r\\n\\r\\n    function getHighestBidOfAuction(string memory auctionId) public view returns (uint256) {\\r\\n        uint256 highestBid = 0;\\r\\n        for (uint256 i = 0; i < s_bidInformations[auctionId].length; i++) {\\r\\n            if (\\r\\n                s_bidInformations[auctionId][i].bidAmount > highestBid &&\\r\\n                s_bidInformations[auctionId][i].bidderState != BidderState.RETRACT &&\\r\\n                s_bidInformations[auctionId][i].bidderState != BidderState.CANCEL\\r\\n            ) {\\r\\n                highestBid = s_bidInformations[auctionId][i].bidAmount;\\r\\n            }\\r\\n        }\\r\\n        return highestBid;\\r\\n    }\\r\\n\\r\\n    //get index of bidder who is sender\\r\\n    function getIndexOfBidder(string memory auctionId) internal view returns (uint256) {\\r\\n        uint256 index = 9999;\\r\\n        for (uint256 i = 0; i < s_bidInformations[auctionId].length; i++) {\\r\\n            if (s_bidInformations[auctionId][i].bidder == msg.sender) {\\r\\n                index = i;\\r\\n            }\\r\\n        }\\r\\n        return index;\\r\\n    }\\r\\n\\r\\n    function getIndexOfSecondOfAuction(string memory auctionId) private returns (uint256) {\\r\\n        BidInformation[] storage tempBidInformation = s_bidInformations[auctionId];\\r\\n        uint256 index = getHighestBidOfAuction(auctionId);\\r\\n        require(index < tempBidInformation.length);\\r\\n        tempBidInformation[index] = tempBidInformation[tempBidInformation.length - 1];\\r\\n        tempBidInformation.pop();\\r\\n        uint256 highestIndex;\\r\\n        for (uint256 i = 0; i < tempBidInformation.length; i++) {\\r\\n            if (\\r\\n                highestIndex < tempBidInformation[i].bidAmount &&\\r\\n                tempBidInformation[i].bidderState == BidderState.BIDING\\r\\n            ) {\\r\\n                highestIndex = i;\\r\\n            }\\r\\n        }\\r\\n        return highestIndex;\\r\\n    }\\r\\n\\r\\n    function getIndexOfFirstOfAuction(string memory auctionId) private view returns (uint256) {\\r\\n        uint256 index = 0;\\r\\n        for (uint256 i = 0; i < s_bidInformations[auctionId].length; i++) {\\r\\n            if (\\r\\n                index < s_bidInformations[auctionId][i].bidAmount &&\\r\\n                s_bidInformations[auctionId][i].bidderState != BidderState.CANCEL &&\\r\\n                s_bidInformations[auctionId][i].bidderState != BidderState.RETRACT\\r\\n            ) {\\r\\n                index = i;\\r\\n            }\\r\\n        }\\r\\n        return index;\\r\\n    }\\r\\n\\r\\n    function getListAuctionId() external view returns (string[] memory) {\\r\\n        return s_auctionList;\\r\\n    }\\r\\n\\r\\n    function getAuctionInformationById(string memory auctionId)\\r\\n        external\\r\\n        view\\r\\n        isExistAuctionId(auctionId)\\r\\n        returns (AuctionInformation memory)\\r\\n    {\\r\\n        return s_auctionInformations[auctionId];\\r\\n    }\\r\\n\\r\\n    function getBidInformationByAuctionId(string memory auctionId)\\r\\n        external\\r\\n        view\\r\\n        isExistAuctionId(auctionId)\\r\\n        returns (BidInformation[] memory)\\r\\n    {\\r\\n        return s_bidInformations[auctionId];\\r\\n    }\\r\\n\\r\\n    function getBalance() external view returns (uint256) {\\r\\n        return address(this).balance;\\r\\n    }\\r\\n\\r\\n    function getOwner() public view returns (address) {\\r\\n        return i_owner;\\r\\n    }\\r\\n\\r\\n    function getProceeds() public view returns (uint256) {\\r\\n        return s_proceeds;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xe57525f3f3582ed03e79e98b299500a74ae8b28c8bec42f4b0ee438578e82c95\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250506080516133f061007c6000396000818161044a015281816104d10152818161114a01528181611170015261123301526133f06000f3fe6080604052600436106100f35760003560e01c806383bd95871161008a578063af6fd4a711610059578063af6fd4a7146102ea578063daddf71714610306578063e4ece6b014610322578063f05981fa1461034b576100f3565b806383bd958714610261578063893d20e81461028c5780639038e693146102b7578063a7eaa241146102ce576100f3565b80636821fe22116100c65780636821fe22146101a257806373e295ea146101df5780637ea717ff146101fb5780638166697114610238576100f3565b806312065fe0146100f85780631c46583b146101235780633ccfd60b1461014e578063615adb6a14610165575b600080fd5b34801561010457600080fd5b5061010d610367565b60405161011a9190612502565b60405180910390f35b34801561012f57600080fd5b5061013861036f565b604051610145919061266f565b60405180910390f35b34801561015a57600080fd5b50610163610448565b005b34801561017157600080fd5b5061018c600480360381019061018791906127da565b61059c565b60405161019991906128e9565b60405180910390f35b3480156101ae57600080fd5b506101c960048036038101906101c491906127da565b610714565b6040516101d69190612aae565b60405180910390f35b6101f960048036038101906101f491906127da565b610911565b005b34801561020757600080fd5b50610222600480360381019061021d91906127da565b610ddd565b60405161022f9190612502565b60405180910390f35b34801561024457600080fd5b5061025f600480360381019061025a9190612afc565b610fb9565b005b34801561026d57600080fd5b5061027661113c565b6040516102839190612502565b60405180910390f35b34801561029857600080fd5b506102a1611146565b6040516102ae9190612c06565b60405180910390f35b3480156102c357600080fd5b506102cc61116e565b005b6102e860048036038101906102e39190612c21565b611300565b005b61030460048036038101906102ff91906127da565b61180e565b005b610320600480360381019061031b91906127da565b611911565b005b34801561032e57600080fd5b50610349600480360381019061034491906127da565b611dde565b005b610365600480360381019061036091906127da565b611f5f565b005b600047905090565b60606000805480602002602001604051908101604052809291908181526020016000905b8282101561043f5783829060005260206000200180546103b290612cac565b80601f01602080910402602001604051908101604052809291908181526020018280546103de90612cac565b801561042b5780601f106104005761010080835404028352916020019161042b565b820191906000526020600020905b81548152906001019060200180831161040e57829003601f168201915b505050505081526020019060010190610393565b50505050905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104cd576040517f3e77415600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161051390612d0e565b60006040518083038185875af1925050503d8060008114610550576040519150601f19603f3d011682016040523d82523d6000602084013e610555565b606091505b5050905080610599576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059090612d80565b60405180910390fd5b50565b6105a4612454565b816000805b60008054905081101561064857600081815481106105ca576105c9612da0565b5b906000526020600020016040516020016105e49190612e72565b604051602081830303815290604052805190602001208360405160200161060b9190612eba565b604051602081830303815290604052805190602001201461063557818061063190612f00565b9250505b808061064090612f00565b9150506105a9565b506000805490508103610687576040517fc1c7f9a100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002846040516106979190612eba565b908152602001604051809103902060405180610120016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820154815260200160058201548152602001600682015481526020016007820154815260200160088201548152505092505050919050565b6060816000805b6000805490508110156107ba576000818154811061073c5761073b612da0565b5b906000526020600020016040516020016107569190612e72565b604051602081830303815290604052805190602001208360405160200161077d9190612eba565b60405160208183030381529060405280519060200120146107a75781806107a390612f00565b9250505b80806107b290612f00565b91505061071b565b5060008054905081036107f9576040517fc1c7f9a100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6003846040516108099190612eba565b9081526020016040518091039020805480602002602001604051908101604052809291908181526020016000905b8282101561090457838290600052602060002090600302016040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820160009054906101000a900460ff1660048111156108df576108de612972565b5b60048111156108f1576108f0612972565b5b8152505081526020019060010190610837565b5050505092505050919050565b806000805b6000805490508110156109b5576000818154811061093757610936612da0565b5b906000526020600020016040516020016109519190612e72565b60405160208183030381529060405280519060200120836040516020016109789190612eba565b60405160208183030381529060405280519060200120146109a257818061099e90612f00565b9250505b80806109ad90612f00565b915050610916565b5060008054905081036109f4576040517fc1c7f9a100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8242600282604051610a069190612eba565b9081526020016040518091039020600201541180610a44575042600282604051610a309190612eba565b908152602001604051809103902060030154105b15610a7b576040517f355d234800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b836000805b600383604051610a909190612eba565b908152602001604051809103902080549050811015610bdf573373ffffffffffffffffffffffffffffffffffffffff16600384604051610ad09190612eba565b90815260200160405180910390208281548110610af057610aef612da0565b5b906000526020600020906003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614158015610bb8575060006004811115610b5557610b54612972565b5b600384604051610b659190612eba565b90815260200160405180910390208281548110610b8557610b84612da0565b5b906000526020600020906003020160020160009054906101000a900460ff166004811115610bb657610bb5612972565b5b145b15610bcc578180610bc890612f00565b9250505b8080610bd790612f00565b915050610a80565b50600382604051610bf09190612eba565b9081526020016040518091039020805490508103610c3a576040517f2ffd4a0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8560006004811115610c4f57610c4e612972565b5b600382604051610c5f9190612eba565b9081526020016040518091039020610c768361209f565b81548110610c8757610c86612da0565b5b906000526020600020906003020160020160009054906101000a900460ff166004811115610cb857610cb7612972565b5b14610cef576040517fd5556f7600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600388604051610d019190612eba565b9081526020016040518091039020610d188961209f565b81548110610d2957610d28612da0565b5b906000526020600020906003020160020160006101000a81548160ff02191690836004811115610d5c57610d5b612972565b5b0217905550600287604051610d719190612eba565b90815260200160405180910390206006015460016000828254610d949190612f48565b925050819055507f34a0a77595fe52e5375623399b257387f5de5854fd9f102d981e81214835a4108733604051610dcc929190612fb5565b60405180910390a150505050505050565b6000806000905060005b600384604051610df79190612eba565b908152602001604051809103902080549050811015610faf5781600385604051610e219190612eba565b90815260200160405180910390208281548110610e4157610e40612da0565b5b906000526020600020906003020160010154118015610ed3575060016004811115610e6f57610e6e612972565b5b600385604051610e7f9190612eba565b90815260200160405180910390208281548110610e9f57610e9e612da0565b5b906000526020600020906003020160020160009054906101000a900460ff166004811115610ed057610ecf612972565b5b14155b8015610f52575060026004811115610eee57610eed612972565b5b600385604051610efe9190612eba565b90815260200160405180910390208281548110610f1e57610f1d612da0565b5b906000526020600020906003020160020160009054906101000a900460ff166004811115610f4f57610f4e612972565b5b14155b15610f9c57600384604051610f679190612eba565b90815260200160405180910390208181548110610f8757610f86612da0565b5b90600052602060002090600302016001015491505b8080610fa790612f00565b915050610de7565b5080915050919050565b610fcb8a8a8a8a8a8a8a8a8a8a612188565b1561113057610fd8612454565b8981600001818152505088816020018181525050878160400181815250508681606001818152505085816080018181525050848160a0018181525050838160c0018181525050828160e001818152505081816101000181815250508060028c6040516110449190612eba565b9081526020016040518091039020600082015181600001556020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005015560c0820151816006015560e08201518160070155610100820151816008015590505060008b9080600181540180825580915050600190039060005260206000200160009091909190915090816110e4919061317c565b507fe5549b694e8ea655c231f5d255127cf7c0f14997a411ccdf6577e3b9911674428b8b8b8b8b8b8b8b8b8b6040516111269a9998979695949392919061324e565b60405180910390a1505b50505050505050505050565b6000600154905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146111f3576040517f3e77415600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006001541161122f576040517f9bfe640f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1660015460405161127790612d0e565b60006040518083038185875af1925050503d80600081146112b4576040519150601f19603f3d011682016040523d82523d6000602084013e6112b9565b606091505b50509050806112fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112f490612d80565b60405180910390fd5b50565b816000805b6000805490508110156113a4576000818154811061132657611325612da0565b5b906000526020600020016040516020016113409190612e72565b60405160208183030381529060405280519060200120836040516020016113679190612eba565b604051602081830303815290604052805190602001201461139157818061138d90612f00565b9250505b808061139c90612f00565b915050611305565b5060008054905081036113e3576040517fc1c7f9a100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b83426002826040516113f59190612eba565b908152602001604051809103902060020154118061143357504260028260405161141f9190612eba565b908152602001604051809103902060030154105b1561146a576040517f355d234800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b846000805b60038360405161147f9190612eba565b9081526020016040518091039020805490508110156115ce573373ffffffffffffffffffffffffffffffffffffffff166003846040516114bf9190612eba565b908152602001604051809103902082815481106114df576114de612da0565b5b906000526020600020906003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141580156115a757506000600481111561154457611543612972565b5b6003846040516115549190612eba565b9081526020016040518091039020828154811061157457611573612da0565b5b906000526020600020906003020160020160009054906101000a900460ff1660048111156115a5576115a4612972565b5b145b156115bb5781806115b790612f00565b9250505b80806115c690612f00565b91505061146f565b506003826040516115df9190612eba565b9081526020016040518091039020805490508103611629576040517f2ffd4a0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b868660028260405161163b9190612eba565b90815260200160405180910390206007015481108061168d57506002826040516116659190612eba565b90815260200160405180910390206008015461168083610ddd565b61168a9190612f48565b81105b156116c4576040517fabdda60f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b88600060048111156116d9576116d8612972565b5b6003826040516116e99190612eba565b90815260200160405180910390206117008361209f565b8154811061171157611710612da0565b5b906000526020600020906003020160020160009054906101000a900460ff16600481111561174257611741612972565b5b14611779576040517fd5556f7600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8860038b60405161178a9190612eba565b90815260200160405180910390206117a18c61209f565b815481106117b2576117b1612da0565b5b9060005260206000209060030201600101819055507fe886416816c234ad984c20a40b4480b0e1dc31a4da3edbab50626e575b7dbe058a338b6040516117fa939291906132f1565b60405180910390a150505050505050505050565b60046003826040516118209190612eba565b90815260200160405180910390206118378361209f565b8154811061184857611847612da0565b5b906000526020600020906003020160020160006101000a81548160ff0219169083600481111561187b5761187a612972565b5b02179055506002816040516118909190612eba565b908152602001604051809103902060060154600160008282546118b39190612f48565b9250508190555034600160008282546118cc9190612f48565b925050819055507f4e7fdc53ffd8c036522f5a17b0e77cafac1fb09ae2222e4f34b0b95eb3fa3ef5813334604051611906939291906132f1565b60405180910390a150565b806000805b6000805490508110156119b5576000818154811061193757611936612da0565b5b906000526020600020016040516020016119519190612e72565b60405160208183030381529060405280519060200120836040516020016119789190612eba565b60405160208183030381529060405280519060200120146119a257818061199e90612f00565b9250505b80806119ad90612f00565b915050611916565b5060008054905081036119f4576040517fc1c7f9a100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8242600282604051611a069190612eba565b9081526020016040518091039020600001541180611a44575042600282604051611a309190612eba565b908152602001604051809103902060010154105b15611a7b576040517f60acd97900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8360005b600382604051611a8f9190612eba565b908152602001604051809103902080549050811015611b81573373ffffffffffffffffffffffffffffffffffffffff16600383604051611acf9190612eba565b90815260200160405180910390208281548110611aef57611aee612da0565b5b906000526020600020906003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603611b6e576040517fd0335efa00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8080611b7990612f00565b915050611a7f565b506000600286604051611b949190612eba565b908152602001604051809103902060060154600287604051611bb69190612eba565b908152602001604051809103902060050154611bd29190612f48565b9050803414611c1c578534826040517fa60b61bc000000000000000000000000000000000000000000000000000000008152600401611c139392919061332f565b60405180910390fd5b611c246124a0565b33816000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600081604001906004811115611c7557611c74612972565b5b90816004811115611c8957611c88612972565b5b81525050600387604051611c9d9190612eba565b908152602001604051809103902081908060018154018082558091505060019003906000526020600020906003020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020160006101000a81548160ff02191690836004811115611d5157611d50612972565b5b02179055505050600287604051611d689190612eba565b90815260200160405180910390206005015460016000828254611d8b9190612f48565b925050819055507f3d91795a8d93a82cebcc92ac50f202b5aa73244f00228e1cc9cbdafbbdf8fe9b8782600001518360400151604051611dcd9392919061337c565b60405180910390a150505050505050565b6000600282604051611df09190612eba565b908152602001604051809103902060060154905060038083604051611e159190612eba565b9081526020016040518091039020611e2c8461209f565b81548110611e3d57611e3c612da0565b5b906000526020600020906003020160020160006101000a81548160ff02191690836004811115611e7057611e6f612972565b5b021790555060003373ffffffffffffffffffffffffffffffffffffffff1682604051611e9b90612d0e565b60006040518083038185875af1925050503d8060008114611ed8576040519150601f19603f3d011682016040523d82523d6000602084013e611edd565b606091505b5050905080611f21576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f1890612d80565b60405180910390fd5b7f8703deb082bbe9dd18bf858af977f1d7ced58bd7803c949a6e1011ae2d79f1ac8333604051611f52929190612fb5565b60405180910390a1505050565b6002600382604051611f719190612eba565b9081526020016040518091039020611f888361209f565b81548110611f9957611f98612da0565b5b906000526020600020906003020160020160006101000a81548160ff02191690836004811115611fcc57611fcb612972565b5b0217905550600281604051611fe19190612eba565b908152602001604051809103902060060154600160008282546120049190612f48565b925050819055507f87182aaac5dd5ec80140f092551157b9dc8f704ab22b683dc628b3099676d730813360038460405161203e9190612eba565b90815260200160405180910390206120558561209f565b8154811061206657612065612da0565b5b906000526020600020906003020160020160009054906101000a900460ff166040516120949392919061337c565b60405180910390a150565b60008061270f905060005b6003846040516120ba9190612eba565b90815260200160405180910390208054905081101561217e573373ffffffffffffffffffffffffffffffffffffffff166003856040516120fa9190612eba565b9081526020016040518091039020828154811061211a57612119612da0565b5b906000526020600020906003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361216b578091505b808061217690612f00565b9150506120aa565b5080915050919050565b60008a60005b60008054905081101561225057600081815481106121af576121ae612da0565b5b906000526020600020016040516020016121c99190612e72565b60405160208183030381529060405280519060200120826040516020016121f09190612eba565b604051602081830303815290604052805190602001200361223d576040517f6b9108f800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b808061224890612f00565b91505061218e565b508a8a428210806122615750808210155b15612298576040517f5e83d5f800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8b8b8082106122d3576040517f7a9971e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8c8c80821061230e576040517fe2049fa500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8d8d808210612349576040517fcc2116a000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8d60008111612384576040517fb25c88c500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8d600081116123bf576040517fb0f07a6300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8d600081116123fa576040517ffb833a9900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8d60008111612435576040517fa9ed13a300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60019d50505050505050505050505050509a9950505050505050505050565b6040518061012001604052806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600060048111156124e3576124e2612972565b5b81525090565b6000819050919050565b6124fc816124e9565b82525050565b600060208201905061251760008301846124f3565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b83811015612583578082015181840152602081019050612568565b60008484015250505050565b6000601f19601f8301169050919050565b60006125ab82612549565b6125b58185612554565b93506125c5818560208601612565565b6125ce8161258f565b840191505092915050565b60006125e583836125a0565b905092915050565b6000602082019050919050565b60006126058261251d565b61260f8185612528565b93508360208202850161262185612539565b8060005b8581101561265d578484038952815161263e85826125d9565b9450612649836125ed565b925060208a01995050600181019050612625565b50829750879550505050505092915050565b6000602082019050818103600083015261268981846125fa565b905092915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6126e78261258f565b810181811067ffffffffffffffff82111715612706576127056126af565b5b80604052505050565b6000612719612691565b905061272582826126de565b919050565b600067ffffffffffffffff821115612745576127446126af565b5b61274e8261258f565b9050602081019050919050565b82818337600083830152505050565b600061277d6127788461272a565b61270f565b905082815260208101848484011115612799576127986126aa565b5b6127a484828561275b565b509392505050565b600082601f8301126127c1576127c06126a5565b5b81356127d184826020860161276a565b91505092915050565b6000602082840312156127f0576127ef61269b565b5b600082013567ffffffffffffffff81111561280e5761280d6126a0565b5b61281a848285016127ac565b91505092915050565b61282c816124e9565b82525050565b610120820160008201516128496000850182612823565b50602082015161285c6020850182612823565b50604082015161286f6040850182612823565b5060608201516128826060850182612823565b5060808201516128956080850182612823565b5060a08201516128a860a0850182612823565b5060c08201516128bb60c0850182612823565b5060e08201516128ce60e0850182612823565b506101008201516128e3610100850182612823565b50505050565b6000610120820190506128ff6000830184612832565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061295c82612931565b9050919050565b61296c81612951565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600581106129b2576129b1612972565b5b50565b60008190506129c3826129a1565b919050565b60006129d3826129b5565b9050919050565b6129e3816129c8565b82525050565b6060820160008201516129ff6000850182612963565b506020820151612a126020850182612823565b506040820151612a2560408501826129da565b50505050565b6000612a3783836129e9565b60608301905092915050565b6000602082019050919050565b6000612a5b82612905565b612a658185612910565b9350612a7083612921565b8060005b83811015612aa1578151612a888882612a2b565b9750612a9383612a43565b925050600181019050612a74565b5085935050505092915050565b60006020820190508181036000830152612ac88184612a50565b905092915050565b612ad9816124e9565b8114612ae457600080fd5b50565b600081359050612af681612ad0565b92915050565b6000806000806000806000806000806101408b8d031215612b2057612b1f61269b565b5b60008b013567ffffffffffffffff811115612b3e57612b3d6126a0565b5b612b4a8d828e016127ac565b9a50506020612b5b8d828e01612ae7565b9950506040612b6c8d828e01612ae7565b9850506060612b7d8d828e01612ae7565b9750506080612b8e8d828e01612ae7565b96505060a0612b9f8d828e01612ae7565b95505060c0612bb08d828e01612ae7565b94505060e0612bc18d828e01612ae7565b935050610100612bd38d828e01612ae7565b925050610120612be58d828e01612ae7565b9150509295989b9194979a5092959850565b612c0081612951565b82525050565b6000602082019050612c1b6000830184612bf7565b92915050565b60008060408385031215612c3857612c3761269b565b5b600083013567ffffffffffffffff811115612c5657612c556126a0565b5b612c62858286016127ac565b9250506020612c7385828601612ae7565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680612cc457607f821691505b602082108103612cd757612cd6612c7d565b5b50919050565b600081905092915050565b50565b6000612cf8600083612cdd565b9150612d0382612ce8565b600082019050919050565b6000612d1982612ceb565b9150819050919050565b600082825260208201905092915050565b7f5472616e73666572206661696c65640000000000000000000000000000000000600082015250565b6000612d6a600f83612d23565b9150612d7582612d34565b602082019050919050565b60006020820190508181036000830152612d9981612d5d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081905092915050565b60008190508160005260206000209050919050565b60008154612dfc81612cac565b612e068186612dcf565b94506001821660008114612e215760018114612e3657612e69565b60ff1983168652811515820286019350612e69565b612e3f85612dda565b60005b83811015612e6157815481890152600182019150602081019050612e42565b838801955050505b50505092915050565b6000612e7e8284612def565b915081905092915050565b6000612e9482612549565b612e9e8185612dcf565b9350612eae818560208601612565565b80840191505092915050565b6000612ec68284612e89565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612f0b826124e9565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612f3d57612f3c612ed1565b5b600182019050919050565b6000612f53826124e9565b9150612f5e836124e9565b9250828201905080821115612f7657612f75612ed1565b5b92915050565b6000612f8782612549565b612f918185612d23565b9350612fa1818560208601612565565b612faa8161258f565b840191505092915050565b60006040820190508181036000830152612fcf8185612f7c565b9050612fde6020830184612bf7565b9392505050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026130327fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612ff5565b61303c8683612ff5565b95508019841693508086168417925050509392505050565b6000819050919050565b600061307961307461306f846124e9565b613054565b6124e9565b9050919050565b6000819050919050565b6130938361305e565b6130a761309f82613080565b848454613002565b825550505050565b600090565b6130bc6130af565b6130c781848461308a565b505050565b5b818110156130eb576130e06000826130b4565b6001810190506130cd565b5050565b601f8211156131305761310181612dda565b61310a84612fe5565b81016020851015613119578190505b61312d61312585612fe5565b8301826130cc565b50505b505050565b600082821c905092915050565b600061315360001984600802613135565b1980831691505092915050565b600061316c8383613142565b9150826002028217905092915050565b61318582612549565b67ffffffffffffffff81111561319e5761319d6126af565b5b6131a88254612cac565b6131b38282856130ef565b600060209050601f8311600181146131e657600084156131d4578287015190505b6131de8582613160565b865550613246565b601f1984166131f486612dda565b60005b8281101561321c578489015182556001820191506020850194506020810190506131f7565b868310156132395784890151613235601f891682613142565b8355505b6001600288020188555050505b505050505050565b6000610140820190508181036000830152613269818d612f7c565b9050613278602083018c6124f3565b613285604083018b6124f3565b613292606083018a6124f3565b61329f60808301896124f3565b6132ac60a08301886124f3565b6132b960c08301876124f3565b6132c660e08301866124f3565b6132d46101008301856124f3565b6132e26101208301846124f3565b9b9a5050505050505050505050565b6000606082019050818103600083015261330b8186612f7c565b905061331a6020830185612bf7565b61332760408301846124f3565b949350505050565b600060608201905081810360008301526133498186612f7c565b905061335860208301856124f3565b61336560408301846124f3565b949350505050565b613376816129c8565b82525050565b600060608201905081810360008301526133968186612f7c565b90506133a56020830185612bf7565b6133b2604083018461336d565b94935050505056fea264697066735822122018f280d3b36db636b70698d432a960c3c9fcb041254e260401bd3026cd8eb3a964736f6c63430008110033",
  "deployedBytecode": "",
  "devdoc": {
    "author": "Decentralized Auction Platform Team",
    "details": "This implements the auctioneer job",
    "kind": "dev",
    "methods": {},
    "title": "Decentralized Auction Platform",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "This contract is for Decentralized Auction Platform",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 67,
        "contract": "contracts/Auction.sol:Auction",
        "label": "s_auctionList",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_string_storage)dyn_storage"
      },
      {
        "astId": 69,
        "contract": "contracts/Auction.sol:Auction",
        "label": "s_proceeds",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 199,
        "contract": "contracts/Auction.sol:Auction",
        "label": "s_auctionInformations",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_string_memory_ptr,t_struct(AuctionInformation)99_storage)"
      },
      {
        "astId": 205,
        "contract": "contracts/Auction.sol:Auction",
        "label": "s_bidInformations",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_string_memory_ptr,t_array(t_struct(BidInformation)116_storage)dyn_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_string_storage)dyn_storage": {
        "base": "t_string_storage",
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(BidInformation)116_storage)dyn_storage": {
        "base": "t_struct(BidInformation)116_storage",
        "encoding": "dynamic_array",
        "label": "struct Auction.BidInformation[]",
        "numberOfBytes": "32"
      },
      "t_enum(BidderState)80": {
        "encoding": "inplace",
        "label": "enum Auction.BidderState",
        "numberOfBytes": "1"
      },
      "t_mapping(t_string_memory_ptr,t_array(t_struct(BidInformation)116_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct Auction.BidInformation[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(BidInformation)116_storage)dyn_storage"
      },
      "t_mapping(t_string_memory_ptr,t_struct(AuctionInformation)99_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct Auction.AuctionInformation)",
        "numberOfBytes": "32",
        "value": "t_struct(AuctionInformation)99_storage"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(AuctionInformation)99_storage": {
        "encoding": "inplace",
        "label": "struct Auction.AuctionInformation",
        "members": [
          {
            "astId": 82,
            "contract": "contracts/Auction.sol:Auction",
            "label": "startRegistrationTime",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 84,
            "contract": "contracts/Auction.sol:Auction",
            "label": "endRegistrationTime",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 86,
            "contract": "contracts/Auction.sol:Auction",
            "label": "startAuctionTime",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 88,
            "contract": "contracts/Auction.sol:Auction",
            "label": "endAuctionTime",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 90,
            "contract": "contracts/Auction.sol:Auction",
            "label": "duePaymentTime",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 92,
            "contract": "contracts/Auction.sol:Auction",
            "label": "registrationFee",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 94,
            "contract": "contracts/Auction.sol:Auction",
            "label": "depositAmount",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 96,
            "contract": "contracts/Auction.sol:Auction",
            "label": "startBid",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          },
          {
            "astId": 98,
            "contract": "contracts/Auction.sol:Auction",
            "label": "priceStep",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "288"
      },
      "t_struct(BidInformation)116_storage": {
        "encoding": "inplace",
        "label": "struct Auction.BidInformation",
        "members": [
          {
            "astId": 110,
            "contract": "contracts/Auction.sol:Auction",
            "label": "bidder",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 112,
            "contract": "contracts/Auction.sol:Auction",
            "label": "bidAmount",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 115,
            "contract": "contracts/Auction.sol:Auction",
            "label": "bidderState",
            "offset": 0,
            "slot": "2",
            "type": "t_enum(BidderState)80"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}